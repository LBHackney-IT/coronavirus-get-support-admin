(function webpackUniversalModuleDefinition(root, factory) {
	if(typeof exports === 'object' && typeof module === 'object')
		module.exports = factory();
	else if(typeof define === 'function' && define.amd)
		define([], factory);
	else if(typeof exports === 'object')
		exports["Boilerplate"] = factory();
	else
		root["Boilerplate"] = factory();
})(window, function() {
return /******/ (function(modules) { // webpackBootstrap
/******/ 	// The module cache
/******/ 	var installedModules = {};
/******/
/******/ 	// The require function
/******/ 	function __webpack_require__(moduleId) {
/******/
/******/ 		// Check if module is in cache
/******/ 		if(installedModules[moduleId]) {
/******/ 			return installedModules[moduleId].exports;
/******/ 		}
/******/ 		// Create a new module (and put it into the cache)
/******/ 		var module = installedModules[moduleId] = {
/******/ 			i: moduleId,
/******/ 			l: false,
/******/ 			exports: {}
/******/ 		};
/******/
/******/ 		// Execute the module function
/******/ 		modules[moduleId].call(module.exports, module, module.exports, __webpack_require__);
/******/
/******/ 		// Flag the module as loaded
/******/ 		module.l = true;
/******/
/******/ 		// Return the exports of the module
/******/ 		return module.exports;
/******/ 	}
/******/
/******/
/******/ 	// expose the modules object (__webpack_modules__)
/******/ 	__webpack_require__.m = modules;
/******/
/******/ 	// expose the module cache
/******/ 	__webpack_require__.c = installedModules;
/******/
/******/ 	// define getter function for harmony exports
/******/ 	__webpack_require__.d = function(exports, name, getter) {
/******/ 		if(!__webpack_require__.o(exports, name)) {
/******/ 			Object.defineProperty(exports, name, { enumerable: true, get: getter });
/******/ 		}
/******/ 	};
/******/
/******/ 	// define __esModule on exports
/******/ 	__webpack_require__.r = function(exports) {
/******/ 		if(typeof Symbol !== 'undefined' && Symbol.toStringTag) {
/******/ 			Object.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });
/******/ 		}
/******/ 		Object.defineProperty(exports, '__esModule', { value: true });
/******/ 	};
/******/
/******/ 	// create a fake namespace object
/******/ 	// mode & 1: value is a module id, require it
/******/ 	// mode & 2: merge all properties of value into the ns
/******/ 	// mode & 4: return value when already ns object
/******/ 	// mode & 8|1: behave like require
/******/ 	__webpack_require__.t = function(value, mode) {
/******/ 		if(mode & 1) value = __webpack_require__(value);
/******/ 		if(mode & 8) return value;
/******/ 		if((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;
/******/ 		var ns = Object.create(null);
/******/ 		__webpack_require__.r(ns);
/******/ 		Object.defineProperty(ns, 'default', { enumerable: true, value: value });
/******/ 		if(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));
/******/ 		return ns;
/******/ 	};
/******/
/******/ 	// getDefaultExport function for compatibility with non-harmony modules
/******/ 	__webpack_require__.n = function(module) {
/******/ 		var getter = module && module.__esModule ?
/******/ 			function getDefault() { return module['default']; } :
/******/ 			function getModuleExports() { return module; };
/******/ 		__webpack_require__.d(getter, 'a', getter);
/******/ 		return getter;
/******/ 	};
/******/
/******/ 	// Object.prototype.hasOwnProperty.call
/******/ 	__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };
/******/
/******/ 	// __webpack_public_path__
/******/ 	__webpack_require__.p = "";
/******/
/******/
/******/ 	// Load entry module and return exports
/******/ 	return __webpack_require__(__webpack_require__.s = 0);
/******/ })
/************************************************************************/
/******/ ({

/***/ "./app/assets/js/loader.js":
/*!*********************************!*\
  !*** ./app/assets/js/loader.js ***!
  \*********************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n\nfunction Loader() {\n    this.body = document.getElementsByClassName(\"govuk-template\");\n    this.loaderOverlay = document.getElementById(\"loader_overlay\");\n    this.ctaBtns = document.getElementsByClassName(\"js-cta-btn\");\n};\n\nLoader.prototype.init = function() {\n    const that = this;\n\n    if (this.loaderOverlay) {\n        Array.from(this.ctaBtns).forEach(function(element) {\n            element.addEventListener('click', that.enable.bind(that));\n          });\n    }\n};\n\nLoader.prototype.enable = function() {\n    this.body[0].classList.add(\"is-loading\");\n}\n\n/* harmony default export */ __webpack_exports__[\"default\"] = (Loader);\n\n//# sourceURL=webpack://Boilerplate/./app/assets/js/loader.js?");

/***/ }),

/***/ "./app/assets/js/main.js":
/*!*******************************!*\
  !*** ./app/assets/js/main.js ***!
  \*******************************/
/*! no exports provided */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var lbh_frontend__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! lbh-frontend */ \"./node_modules/lbh-frontend/lbh/all.js\");\n/* harmony import */ var lbh_frontend__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(lbh_frontend__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var _loader__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./loader */ \"./app/assets/js/loader.js\");\n\n\n\nObject(lbh_frontend__WEBPACK_IMPORTED_MODULE_0__[\"initAll\"])();\nnew _loader__WEBPACK_IMPORTED_MODULE_1__[\"default\"]().init();\n\n//# sourceURL=webpack://Boilerplate/./app/assets/js/main.js?");

/***/ }),

/***/ "./node_modules/lbh-frontend/lbh/all.js":
/*!**********************************************!*\
  !*** ./node_modules/lbh-frontend/lbh/all.js ***!
  \**********************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

eval("(function webpackUniversalModuleDefinition(root, factory) {\n\tif(true)\n\t\tmodule.exports = factory();\n\telse {}\n})(window, function() {\nreturn /******/ (function(modules) { // webpackBootstrap\n/******/ \t// The module cache\n/******/ \tvar installedModules = {};\n/******/\n/******/ \t// The require function\n/******/ \tfunction __webpack_require__(moduleId) {\n/******/\n/******/ \t\t// Check if module is in cache\n/******/ \t\tif(installedModules[moduleId]) {\n/******/ \t\t\treturn installedModules[moduleId].exports;\n/******/ \t\t}\n/******/ \t\t// Create a new module (and put it into the cache)\n/******/ \t\tvar module = installedModules[moduleId] = {\n/******/ \t\t\ti: moduleId,\n/******/ \t\t\tl: false,\n/******/ \t\t\texports: {}\n/******/ \t\t};\n/******/\n/******/ \t\t// Execute the module function\n/******/ \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n/******/\n/******/ \t\t// Flag the module as loaded\n/******/ \t\tmodule.l = true;\n/******/\n/******/ \t\t// Return the exports of the module\n/******/ \t\treturn module.exports;\n/******/ \t}\n/******/\n/******/\n/******/ \t// expose the modules object (__webpack_modules__)\n/******/ \t__webpack_require__.m = modules;\n/******/\n/******/ \t// expose the module cache\n/******/ \t__webpack_require__.c = installedModules;\n/******/\n/******/ \t// define getter function for harmony exports\n/******/ \t__webpack_require__.d = function(exports, name, getter) {\n/******/ \t\tif(!__webpack_require__.o(exports, name)) {\n/******/ \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n/******/ \t\t}\n/******/ \t};\n/******/\n/******/ \t// define __esModule on exports\n/******/ \t__webpack_require__.r = function(exports) {\n/******/ \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n/******/ \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n/******/ \t\t}\n/******/ \t\tObject.defineProperty(exports, '__esModule', { value: true });\n/******/ \t};\n/******/\n/******/ \t// create a fake namespace object\n/******/ \t// mode & 1: value is a module id, require it\n/******/ \t// mode & 2: merge all properties of value into the ns\n/******/ \t// mode & 4: return value when already ns object\n/******/ \t// mode & 8|1: behave like require\n/******/ \t__webpack_require__.t = function(value, mode) {\n/******/ \t\tif(mode & 1) value = __webpack_require__(value);\n/******/ \t\tif(mode & 8) return value;\n/******/ \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n/******/ \t\tvar ns = Object.create(null);\n/******/ \t\t__webpack_require__.r(ns);\n/******/ \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n/******/ \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n/******/ \t\treturn ns;\n/******/ \t};\n/******/\n/******/ \t// getDefaultExport function for compatibility with non-harmony modules\n/******/ \t__webpack_require__.n = function(module) {\n/******/ \t\tvar getter = module && module.__esModule ?\n/******/ \t\t\tfunction getDefault() { return module['default']; } :\n/******/ \t\t\tfunction getModuleExports() { return module; };\n/******/ \t\t__webpack_require__.d(getter, 'a', getter);\n/******/ \t\treturn getter;\n/******/ \t};\n/******/\n/******/ \t// Object.prototype.hasOwnProperty.call\n/******/ \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n/******/\n/******/ \t// __webpack_public_path__\n/******/ \t__webpack_require__.p = \"\";\n/******/\n/******/\n/******/ \t// Load entry module and return exports\n/******/ \treturn __webpack_require__(__webpack_require__.s = 0);\n/******/ })\n/************************************************************************/\n/******/ ({\n\n/***/ \"./node_modules/govuk-frontend/govuk/all.js\":\n/*!**************************************************!*\\\n  !*** ./node_modules/govuk-frontend/govuk/all.js ***!\n  \\**************************************************/\n/*! no static exports found */\n/***/ (function(module, exports, __webpack_require__) {\n\neval(\"/* WEBPACK VAR INJECTION */(function(global) {(function (global, factory) {\\n\\t true ? factory(exports) :\\n\\tundefined;\\n}(this, (function (exports) { 'use strict';\\n\\n/**\\n * TODO: Ideally this would be a NodeList.prototype.forEach polyfill\\n * This seems to fail in IE8, requires more investigation.\\n * See: https://github.com/imagitama/nodelist-foreach-polyfill\\n */\\nfunction nodeListForEach (nodes, callback) {\\n  if (window.NodeList.prototype.forEach) {\\n    return nodes.forEach(callback)\\n  }\\n  for (var i = 0; i < nodes.length; i++) {\\n    callback.call(window, nodes[i], i, nodes);\\n  }\\n}\\n\\n// Used to generate a unique string, allows multiple instances of the component without\\n// Them conflicting with each other.\\n// https://stackoverflow.com/a/8809472\\nfunction generateUniqueID () {\\n  var d = new Date().getTime();\\n  if (typeof window.performance !== 'undefined' && typeof window.performance.now === 'function') {\\n    d += window.performance.now(); // use high-precision timer if available\\n  }\\n  return 'xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx'.replace(/[xy]/g, function (c) {\\n    var r = (d + Math.random() * 16) % 16 | 0;\\n    d = Math.floor(d / 16);\\n    return (c === 'x' ? r : (r & 0x3 | 0x8)).toString(16)\\n  })\\n}\\n\\n(function(undefined) {\\n\\n// Detection from https://github.com/Financial-Times/polyfill-service/blob/master/packages/polyfill-library/polyfills/Object/defineProperty/detect.js\\nvar detect = (\\n  // In IE8, defineProperty could only act on DOM elements, so full support\\n  // for the feature requires the ability to set a property on an arbitrary object\\n  'defineProperty' in Object && (function() {\\n  \\ttry {\\n  \\t\\tvar a = {};\\n  \\t\\tObject.defineProperty(a, 'test', {value:42});\\n  \\t\\treturn true;\\n  \\t} catch(e) {\\n  \\t\\treturn false\\n  \\t}\\n  }())\\n);\\n\\nif (detect) return\\n\\n// Polyfill from https://cdn.polyfill.io/v2/polyfill.js?features=Object.defineProperty&flags=always\\n(function (nativeDefineProperty) {\\n\\n\\tvar supportsAccessors = Object.prototype.hasOwnProperty('__defineGetter__');\\n\\tvar ERR_ACCESSORS_NOT_SUPPORTED = 'Getters & setters cannot be defined on this javascript engine';\\n\\tvar ERR_VALUE_ACCESSORS = 'A property cannot both have accessors and be writable or have a value';\\n\\n\\tObject.defineProperty = function defineProperty(object, property, descriptor) {\\n\\n\\t\\t// Where native support exists, assume it\\n\\t\\tif (nativeDefineProperty && (object === window || object === document || object === Element.prototype || object instanceof Element)) {\\n\\t\\t\\treturn nativeDefineProperty(object, property, descriptor);\\n\\t\\t}\\n\\n\\t\\tif (object === null || !(object instanceof Object || typeof object === 'object')) {\\n\\t\\t\\tthrow new TypeError('Object.defineProperty called on non-object');\\n\\t\\t}\\n\\n\\t\\tif (!(descriptor instanceof Object)) {\\n\\t\\t\\tthrow new TypeError('Property description must be an object');\\n\\t\\t}\\n\\n\\t\\tvar propertyString = String(property);\\n\\t\\tvar hasValueOrWritable = 'value' in descriptor || 'writable' in descriptor;\\n\\t\\tvar getterType = 'get' in descriptor && typeof descriptor.get;\\n\\t\\tvar setterType = 'set' in descriptor && typeof descriptor.set;\\n\\n\\t\\t// handle descriptor.get\\n\\t\\tif (getterType) {\\n\\t\\t\\tif (getterType !== 'function') {\\n\\t\\t\\t\\tthrow new TypeError('Getter must be a function');\\n\\t\\t\\t}\\n\\t\\t\\tif (!supportsAccessors) {\\n\\t\\t\\t\\tthrow new TypeError(ERR_ACCESSORS_NOT_SUPPORTED);\\n\\t\\t\\t}\\n\\t\\t\\tif (hasValueOrWritable) {\\n\\t\\t\\t\\tthrow new TypeError(ERR_VALUE_ACCESSORS);\\n\\t\\t\\t}\\n\\t\\t\\tObject.__defineGetter__.call(object, propertyString, descriptor.get);\\n\\t\\t} else {\\n\\t\\t\\tobject[propertyString] = descriptor.value;\\n\\t\\t}\\n\\n\\t\\t// handle descriptor.set\\n\\t\\tif (setterType) {\\n\\t\\t\\tif (setterType !== 'function') {\\n\\t\\t\\t\\tthrow new TypeError('Setter must be a function');\\n\\t\\t\\t}\\n\\t\\t\\tif (!supportsAccessors) {\\n\\t\\t\\t\\tthrow new TypeError(ERR_ACCESSORS_NOT_SUPPORTED);\\n\\t\\t\\t}\\n\\t\\t\\tif (hasValueOrWritable) {\\n\\t\\t\\t\\tthrow new TypeError(ERR_VALUE_ACCESSORS);\\n\\t\\t\\t}\\n\\t\\t\\tObject.__defineSetter__.call(object, propertyString, descriptor.set);\\n\\t\\t}\\n\\n\\t\\t// OK to define value unconditionally - if a getter has been specified as well, an error would be thrown above\\n\\t\\tif ('value' in descriptor) {\\n\\t\\t\\tobject[propertyString] = descriptor.value;\\n\\t\\t}\\n\\n\\t\\treturn object;\\n\\t};\\n}(Object.defineProperty));\\n})\\n.call('object' === typeof window && window || 'object' === typeof self && self || 'object' === typeof global && global || {});\\n\\n(function(undefined) {\\n  // Detection from https://github.com/Financial-Times/polyfill-service/blob/master/packages/polyfill-library/polyfills/Function/prototype/bind/detect.js\\n  var detect = 'bind' in Function.prototype;\\n\\n  if (detect) return\\n\\n  // Polyfill from https://cdn.polyfill.io/v2/polyfill.js?features=Function.prototype.bind&flags=always\\n  Object.defineProperty(Function.prototype, 'bind', {\\n      value: function bind(that) { // .length is 1\\n          // add necessary es5-shim utilities\\n          var $Array = Array;\\n          var $Object = Object;\\n          var ObjectPrototype = $Object.prototype;\\n          var ArrayPrototype = $Array.prototype;\\n          var Empty = function Empty() {};\\n          var to_string = ObjectPrototype.toString;\\n          var hasToStringTag = typeof Symbol === 'function' && typeof Symbol.toStringTag === 'symbol';\\n          var isCallable; /* inlined from https://npmjs.com/is-callable */ var fnToStr = Function.prototype.toString, tryFunctionObject = function tryFunctionObject(value) { try { fnToStr.call(value); return true; } catch (e) { return false; } }, fnClass = '[object Function]', genClass = '[object GeneratorFunction]'; isCallable = function isCallable(value) { if (typeof value !== 'function') { return false; } if (hasToStringTag) { return tryFunctionObject(value); } var strClass = to_string.call(value); return strClass === fnClass || strClass === genClass; };\\n          var array_slice = ArrayPrototype.slice;\\n          var array_concat = ArrayPrototype.concat;\\n          var array_push = ArrayPrototype.push;\\n          var max = Math.max;\\n          // /add necessary es5-shim utilities\\n\\n          // 1. Let Target be the this value.\\n          var target = this;\\n          // 2. If IsCallable(Target) is false, throw a TypeError exception.\\n          if (!isCallable(target)) {\\n              throw new TypeError('Function.prototype.bind called on incompatible ' + target);\\n          }\\n          // 3. Let A be a new (possibly empty) internal list of all of the\\n          //   argument values provided after thisArg (arg1, arg2 etc), in order.\\n          // XXX slicedArgs will stand in for \\\"A\\\" if used\\n          var args = array_slice.call(arguments, 1); // for normal call\\n          // 4. Let F be a new native ECMAScript object.\\n          // 11. Set the [[Prototype]] internal property of F to the standard\\n          //   built-in Function prototype object as specified in 15.3.3.1.\\n          // 12. Set the [[Call]] internal property of F as described in\\n          //   15.3.4.5.1.\\n          // 13. Set the [[Construct]] internal property of F as described in\\n          //   15.3.4.5.2.\\n          // 14. Set the [[HasInstance]] internal property of F as described in\\n          //   15.3.4.5.3.\\n          var bound;\\n          var binder = function () {\\n\\n              if (this instanceof bound) {\\n                  // 15.3.4.5.2 [[Construct]]\\n                  // When the [[Construct]] internal method of a function object,\\n                  // F that was created using the bind function is called with a\\n                  // list of arguments ExtraArgs, the following steps are taken:\\n                  // 1. Let target be the value of F's [[TargetFunction]]\\n                  //   internal property.\\n                  // 2. If target has no [[Construct]] internal method, a\\n                  //   TypeError exception is thrown.\\n                  // 3. Let boundArgs be the value of F's [[BoundArgs]] internal\\n                  //   property.\\n                  // 4. Let args be a new list containing the same values as the\\n                  //   list boundArgs in the same order followed by the same\\n                  //   values as the list ExtraArgs in the same order.\\n                  // 5. Return the result of calling the [[Construct]] internal\\n                  //   method of target providing args as the arguments.\\n\\n                  var result = target.apply(\\n                      this,\\n                      array_concat.call(args, array_slice.call(arguments))\\n                  );\\n                  if ($Object(result) === result) {\\n                      return result;\\n                  }\\n                  return this;\\n\\n              } else {\\n                  // 15.3.4.5.1 [[Call]]\\n                  // When the [[Call]] internal method of a function object, F,\\n                  // which was created using the bind function is called with a\\n                  // this value and a list of arguments ExtraArgs, the following\\n                  // steps are taken:\\n                  // 1. Let boundArgs be the value of F's [[BoundArgs]] internal\\n                  //   property.\\n                  // 2. Let boundThis be the value of F's [[BoundThis]] internal\\n                  //   property.\\n                  // 3. Let target be the value of F's [[TargetFunction]] internal\\n                  //   property.\\n                  // 4. Let args be a new list containing the same values as the\\n                  //   list boundArgs in the same order followed by the same\\n                  //   values as the list ExtraArgs in the same order.\\n                  // 5. Return the result of calling the [[Call]] internal method\\n                  //   of target providing boundThis as the this value and\\n                  //   providing args as the arguments.\\n\\n                  // equiv: target.call(this, ...boundArgs, ...args)\\n                  return target.apply(\\n                      that,\\n                      array_concat.call(args, array_slice.call(arguments))\\n                  );\\n\\n              }\\n\\n          };\\n\\n          // 15. If the [[Class]] internal property of Target is \\\"Function\\\", then\\n          //     a. Let L be the length property of Target minus the length of A.\\n          //     b. Set the length own property of F to either 0 or L, whichever is\\n          //       larger.\\n          // 16. Else set the length own property of F to 0.\\n\\n          var boundLength = max(0, target.length - args.length);\\n\\n          // 17. Set the attributes of the length own property of F to the values\\n          //   specified in 15.3.5.1.\\n          var boundArgs = [];\\n          for (var i = 0; i < boundLength; i++) {\\n              array_push.call(boundArgs, '$' + i);\\n          }\\n\\n          // XXX Build a dynamic function with desired amount of arguments is the only\\n          // way to set the length property of a function.\\n          // In environments where Content Security Policies enabled (Chrome extensions,\\n          // for ex.) all use of eval or Function costructor throws an exception.\\n          // However in all of these environments Function.prototype.bind exists\\n          // and so this code will never be executed.\\n          bound = Function('binder', 'return function (' + boundArgs.join(',') + '){ return binder.apply(this, arguments); }')(binder);\\n\\n          if (target.prototype) {\\n              Empty.prototype = target.prototype;\\n              bound.prototype = new Empty();\\n              // Clean up dangling references.\\n              Empty.prototype = null;\\n          }\\n\\n          // TODO\\n          // 18. Set the [[Extensible]] internal property of F to true.\\n\\n          // TODO\\n          // 19. Let thrower be the [[ThrowTypeError]] function Object (13.2.3).\\n          // 20. Call the [[DefineOwnProperty]] internal method of F with\\n          //   arguments \\\"caller\\\", PropertyDescriptor {[[Get]]: thrower, [[Set]]:\\n          //   thrower, [[Enumerable]]: false, [[Configurable]]: false}, and\\n          //   false.\\n          // 21. Call the [[DefineOwnProperty]] internal method of F with\\n          //   arguments \\\"arguments\\\", PropertyDescriptor {[[Get]]: thrower,\\n          //   [[Set]]: thrower, [[Enumerable]]: false, [[Configurable]]: false},\\n          //   and false.\\n\\n          // TODO\\n          // NOTE Function objects created using Function.prototype.bind do not\\n          // have a prototype property or the [[Code]], [[FormalParameters]], and\\n          // [[Scope]] internal properties.\\n          // XXX can't delete prototype in pure-js.\\n\\n          // 22. Return F.\\n          return bound;\\n      }\\n  });\\n})\\n.call('object' === typeof window && window || 'object' === typeof self && self || 'object' === typeof global && global || {});\\n\\n(function(undefined) {\\n\\n    // Detection from https://raw.githubusercontent.com/Financial-Times/polyfill-service/master/packages/polyfill-library/polyfills/DOMTokenList/detect.js\\n    var detect = (\\n      'DOMTokenList' in this && (function (x) {\\n        return 'classList' in x ? !x.classList.toggle('x', false) && !x.className : true;\\n      })(document.createElement('x'))\\n    );\\n\\n    if (detect) return\\n\\n    // Polyfill from https://raw.githubusercontent.com/Financial-Times/polyfill-service/master/packages/polyfill-library/polyfills/DOMTokenList/polyfill.js\\n    (function (global) {\\n      var nativeImpl = \\\"DOMTokenList\\\" in global && global.DOMTokenList;\\n\\n      if (\\n          !nativeImpl ||\\n          (\\n            !!document.createElementNS &&\\n            !!document.createElementNS('http://www.w3.org/2000/svg', 'svg') &&\\n            !(document.createElementNS(\\\"http://www.w3.org/2000/svg\\\", \\\"svg\\\").classList instanceof DOMTokenList)\\n          )\\n        ) {\\n        global.DOMTokenList = (function() { // eslint-disable-line no-unused-vars\\n          var dpSupport = true;\\n          var defineGetter = function (object, name, fn, configurable) {\\n            if (Object.defineProperty)\\n              Object.defineProperty(object, name, {\\n                configurable: false === dpSupport ? true : !!configurable,\\n                get: fn\\n              });\\n\\n            else object.__defineGetter__(name, fn);\\n          };\\n\\n          /** Ensure the browser allows Object.defineProperty to be used on native JavaScript objects. */\\n          try {\\n            defineGetter({}, \\\"support\\\");\\n          }\\n          catch (e) {\\n            dpSupport = false;\\n          }\\n\\n\\n          var _DOMTokenList = function (el, prop) {\\n            var that = this;\\n            var tokens = [];\\n            var tokenMap = {};\\n            var length = 0;\\n            var maxLength = 0;\\n            var addIndexGetter = function (i) {\\n              defineGetter(that, i, function () {\\n                preop();\\n                return tokens[i];\\n              }, false);\\n\\n            };\\n            var reindex = function () {\\n\\n              /** Define getter functions for array-like access to the tokenList's contents. */\\n              if (length >= maxLength)\\n                for (; maxLength < length; ++maxLength) {\\n                  addIndexGetter(maxLength);\\n                }\\n            };\\n\\n            /** Helper function called at the start of each class method. Internal use only. */\\n            var preop = function () {\\n              var error;\\n              var i;\\n              var args = arguments;\\n              var rSpace = /\\\\s+/;\\n\\n              /** Validate the token/s passed to an instance method, if any. */\\n              if (args.length)\\n                for (i = 0; i < args.length; ++i)\\n                  if (rSpace.test(args[i])) {\\n                    error = new SyntaxError('String \\\"' + args[i] + '\\\" ' + \\\"contains\\\" + ' an invalid character');\\n                    error.code = 5;\\n                    error.name = \\\"InvalidCharacterError\\\";\\n                    throw error;\\n                  }\\n\\n\\n              /** Split the new value apart by whitespace*/\\n              if (typeof el[prop] === \\\"object\\\") {\\n                tokens = (\\\"\\\" + el[prop].baseVal).replace(/^\\\\s+|\\\\s+$/g, \\\"\\\").split(rSpace);\\n              } else {\\n                tokens = (\\\"\\\" + el[prop]).replace(/^\\\\s+|\\\\s+$/g, \\\"\\\").split(rSpace);\\n              }\\n\\n              /** Avoid treating blank strings as single-item token lists */\\n              if (\\\"\\\" === tokens[0]) tokens = [];\\n\\n              /** Repopulate the internal token lists */\\n              tokenMap = {};\\n              for (i = 0; i < tokens.length; ++i)\\n                tokenMap[tokens[i]] = true;\\n              length = tokens.length;\\n              reindex();\\n            };\\n\\n            /** Populate our internal token list if the targeted attribute of the subject element isn't empty. */\\n            preop();\\n\\n            /** Return the number of tokens in the underlying string. Read-only. */\\n            defineGetter(that, \\\"length\\\", function () {\\n              preop();\\n              return length;\\n            });\\n\\n            /** Override the default toString/toLocaleString methods to return a space-delimited list of tokens when typecast. */\\n            that.toLocaleString =\\n              that.toString = function () {\\n                preop();\\n                return tokens.join(\\\" \\\");\\n              };\\n\\n            that.item = function (idx) {\\n              preop();\\n              return tokens[idx];\\n            };\\n\\n            that.contains = function (token) {\\n              preop();\\n              return !!tokenMap[token];\\n            };\\n\\n            that.add = function () {\\n              preop.apply(that, args = arguments);\\n\\n              for (var args, token, i = 0, l = args.length; i < l; ++i) {\\n                token = args[i];\\n                if (!tokenMap[token]) {\\n                  tokens.push(token);\\n                  tokenMap[token] = true;\\n                }\\n              }\\n\\n              /** Update the targeted attribute of the attached element if the token list's changed. */\\n              if (length !== tokens.length) {\\n                length = tokens.length >>> 0;\\n                if (typeof el[prop] === \\\"object\\\") {\\n                  el[prop].baseVal = tokens.join(\\\" \\\");\\n                } else {\\n                  el[prop] = tokens.join(\\\" \\\");\\n                }\\n                reindex();\\n              }\\n            };\\n\\n            that.remove = function () {\\n              preop.apply(that, args = arguments);\\n\\n              /** Build a hash of token names to compare against when recollecting our token list. */\\n              for (var args, ignore = {}, i = 0, t = []; i < args.length; ++i) {\\n                ignore[args[i]] = true;\\n                delete tokenMap[args[i]];\\n              }\\n\\n              /** Run through our tokens list and reassign only those that aren't defined in the hash declared above. */\\n              for (i = 0; i < tokens.length; ++i)\\n                if (!ignore[tokens[i]]) t.push(tokens[i]);\\n\\n              tokens = t;\\n              length = t.length >>> 0;\\n\\n              /** Update the targeted attribute of the attached element. */\\n              if (typeof el[prop] === \\\"object\\\") {\\n                el[prop].baseVal = tokens.join(\\\" \\\");\\n              } else {\\n                el[prop] = tokens.join(\\\" \\\");\\n              }\\n              reindex();\\n            };\\n\\n            that.toggle = function (token, force) {\\n              preop.apply(that, [token]);\\n\\n              /** Token state's being forced. */\\n              if (undefined !== force) {\\n                if (force) {\\n                  that.add(token);\\n                  return true;\\n                } else {\\n                  that.remove(token);\\n                  return false;\\n                }\\n              }\\n\\n              /** Token already exists in tokenList. Remove it, and return FALSE. */\\n              if (tokenMap[token]) {\\n                that.remove(token);\\n                return false;\\n              }\\n\\n              /** Otherwise, add the token and return TRUE. */\\n              that.add(token);\\n              return true;\\n            };\\n\\n            return that;\\n          };\\n\\n          return _DOMTokenList;\\n        }());\\n      }\\n\\n      // Add second argument to native DOMTokenList.toggle() if necessary\\n      (function () {\\n        var e = document.createElement('span');\\n        if (!('classList' in e)) return;\\n        e.classList.toggle('x', false);\\n        if (!e.classList.contains('x')) return;\\n        e.classList.constructor.prototype.toggle = function toggle(token /*, force*/) {\\n          var force = arguments[1];\\n          if (force === undefined) {\\n            var add = !this.contains(token);\\n            this[add ? 'add' : 'remove'](token);\\n            return add;\\n          }\\n          force = !!force;\\n          this[force ? 'add' : 'remove'](token);\\n          return force;\\n        };\\n      }());\\n\\n      // Add multiple arguments to native DOMTokenList.add() if necessary\\n      (function () {\\n        var e = document.createElement('span');\\n        if (!('classList' in e)) return;\\n        e.classList.add('a', 'b');\\n        if (e.classList.contains('b')) return;\\n        var native = e.classList.constructor.prototype.add;\\n        e.classList.constructor.prototype.add = function () {\\n          var args = arguments;\\n          var l = arguments.length;\\n          for (var i = 0; i < l; i++) {\\n            native.call(this, args[i]);\\n          }\\n        };\\n      }());\\n\\n      // Add multiple arguments to native DOMTokenList.remove() if necessary\\n      (function () {\\n        var e = document.createElement('span');\\n        if (!('classList' in e)) return;\\n        e.classList.add('a');\\n        e.classList.add('b');\\n        e.classList.remove('a', 'b');\\n        if (!e.classList.contains('b')) return;\\n        var native = e.classList.constructor.prototype.remove;\\n        e.classList.constructor.prototype.remove = function () {\\n          var args = arguments;\\n          var l = arguments.length;\\n          for (var i = 0; i < l; i++) {\\n            native.call(this, args[i]);\\n          }\\n        };\\n      }());\\n\\n    }(this));\\n\\n}).call('object' === typeof window && window || 'object' === typeof self && self || 'object' === typeof global && global || {});\\n\\n(function(undefined) {\\n\\n// Detection from https://github.com/Financial-Times/polyfill-service/blob/master/packages/polyfill-library/polyfills/Document/detect.js\\nvar detect = (\\\"Document\\\" in this);\\n\\nif (detect) return\\n\\n// Polyfill from https://cdn.polyfill.io/v2/polyfill.js?features=Document&flags=always\\nif ((typeof WorkerGlobalScope === \\\"undefined\\\") && (typeof importScripts !== \\\"function\\\")) {\\n\\n\\tif (this.HTMLDocument) { // IE8\\n\\n\\t\\t// HTMLDocument is an extension of Document.  If the browser has HTMLDocument but not Document, the former will suffice as an alias for the latter.\\n\\t\\tthis.Document = this.HTMLDocument;\\n\\n\\t} else {\\n\\n\\t\\t// Create an empty function to act as the missing constructor for the document object, attach the document object as its prototype.  The function needs to be anonymous else it is hoisted and causes the feature detect to prematurely pass, preventing the assignments below being made.\\n\\t\\tthis.Document = this.HTMLDocument = document.constructor = (new Function('return function Document() {}')());\\n\\t\\tthis.Document.prototype = document;\\n\\t}\\n}\\n\\n\\n})\\n.call('object' === typeof window && window || 'object' === typeof self && self || 'object' === typeof global && global || {});\\n\\n(function(undefined) {\\n\\n// Detection from https://github.com/Financial-Times/polyfill-service/blob/master/packages/polyfill-library/polyfills/Element/detect.js\\nvar detect = ('Element' in this && 'HTMLElement' in this);\\n\\nif (detect) return\\n\\n// Polyfill from https://cdn.polyfill.io/v2/polyfill.js?features=Element&flags=always\\n(function () {\\n\\n\\t// IE8\\n\\tif (window.Element && !window.HTMLElement) {\\n\\t\\twindow.HTMLElement = window.Element;\\n\\t\\treturn;\\n\\t}\\n\\n\\t// create Element constructor\\n\\twindow.Element = window.HTMLElement = new Function('return function Element() {}')();\\n\\n\\t// generate sandboxed iframe\\n\\tvar vbody = document.appendChild(document.createElement('body'));\\n\\tvar frame = vbody.appendChild(document.createElement('iframe'));\\n\\n\\t// use sandboxed iframe to replicate Element functionality\\n\\tvar frameDocument = frame.contentWindow.document;\\n\\tvar prototype = Element.prototype = frameDocument.appendChild(frameDocument.createElement('*'));\\n\\tvar cache = {};\\n\\n\\t// polyfill Element.prototype on an element\\n\\tvar shiv = function (element, deep) {\\n\\t\\tvar\\n\\t\\tchildNodes = element.childNodes || [],\\n\\t\\tindex = -1,\\n\\t\\tkey, value, childNode;\\n\\n\\t\\tif (element.nodeType === 1 && element.constructor !== Element) {\\n\\t\\t\\telement.constructor = Element;\\n\\n\\t\\t\\tfor (key in cache) {\\n\\t\\t\\t\\tvalue = cache[key];\\n\\t\\t\\t\\telement[key] = value;\\n\\t\\t\\t}\\n\\t\\t}\\n\\n\\t\\twhile (childNode = deep && childNodes[++index]) {\\n\\t\\t\\tshiv(childNode, deep);\\n\\t\\t}\\n\\n\\t\\treturn element;\\n\\t};\\n\\n\\tvar elements = document.getElementsByTagName('*');\\n\\tvar nativeCreateElement = document.createElement;\\n\\tvar interval;\\n\\tvar loopLimit = 100;\\n\\n\\tprototype.attachEvent('onpropertychange', function (event) {\\n\\t\\tvar\\n\\t\\tpropertyName = event.propertyName,\\n\\t\\tnonValue = !cache.hasOwnProperty(propertyName),\\n\\t\\tnewValue = prototype[propertyName],\\n\\t\\toldValue = cache[propertyName],\\n\\t\\tindex = -1,\\n\\t\\telement;\\n\\n\\t\\twhile (element = elements[++index]) {\\n\\t\\t\\tif (element.nodeType === 1) {\\n\\t\\t\\t\\tif (nonValue || element[propertyName] === oldValue) {\\n\\t\\t\\t\\t\\telement[propertyName] = newValue;\\n\\t\\t\\t\\t}\\n\\t\\t\\t}\\n\\t\\t}\\n\\n\\t\\tcache[propertyName] = newValue;\\n\\t});\\n\\n\\tprototype.constructor = Element;\\n\\n\\tif (!prototype.hasAttribute) {\\n\\t\\t// <Element>.hasAttribute\\n\\t\\tprototype.hasAttribute = function hasAttribute(name) {\\n\\t\\t\\treturn this.getAttribute(name) !== null;\\n\\t\\t};\\n\\t}\\n\\n\\t// Apply Element prototype to the pre-existing DOM as soon as the body element appears.\\n\\tfunction bodyCheck() {\\n\\t\\tif (!(loopLimit--)) clearTimeout(interval);\\n\\t\\tif (document.body && !document.body.prototype && /(complete|interactive)/.test(document.readyState)) {\\n\\t\\t\\tshiv(document, true);\\n\\t\\t\\tif (interval && document.body.prototype) clearTimeout(interval);\\n\\t\\t\\treturn (!!document.body.prototype);\\n\\t\\t}\\n\\t\\treturn false;\\n\\t}\\n\\tif (!bodyCheck()) {\\n\\t\\tdocument.onreadystatechange = bodyCheck;\\n\\t\\tinterval = setInterval(bodyCheck, 25);\\n\\t}\\n\\n\\t// Apply to any new elements created after load\\n\\tdocument.createElement = function createElement(nodeName) {\\n\\t\\tvar element = nativeCreateElement(String(nodeName).toLowerCase());\\n\\t\\treturn shiv(element);\\n\\t};\\n\\n\\t// remove sandboxed iframe\\n\\tdocument.removeChild(vbody);\\n}());\\n\\n})\\n.call('object' === typeof window && window || 'object' === typeof self && self || 'object' === typeof global && global || {});\\n\\n(function(undefined) {\\n\\n    // Detection from https://raw.githubusercontent.com/Financial-Times/polyfill-service/8717a9e04ac7aff99b4980fbedead98036b0929a/packages/polyfill-library/polyfills/Element/prototype/classList/detect.js\\n    var detect = (\\n      'document' in this && \\\"classList\\\" in document.documentElement && 'Element' in this && 'classList' in Element.prototype && (function () {\\n        var e = document.createElement('span');\\n        e.classList.add('a', 'b');\\n        return e.classList.contains('b');\\n      }())\\n    );\\n\\n    if (detect) return\\n\\n    // Polyfill from https://cdn.polyfill.io/v2/polyfill.js?features=Element.prototype.classList&flags=always\\n    (function (global) {\\n      var dpSupport = true;\\n      var defineGetter = function (object, name, fn, configurable) {\\n        if (Object.defineProperty)\\n          Object.defineProperty(object, name, {\\n            configurable: false === dpSupport ? true : !!configurable,\\n            get: fn\\n          });\\n\\n        else object.__defineGetter__(name, fn);\\n      };\\n      /** Ensure the browser allows Object.defineProperty to be used on native JavaScript objects. */\\n      try {\\n        defineGetter({}, \\\"support\\\");\\n      }\\n      catch (e) {\\n        dpSupport = false;\\n      }\\n      /** Polyfills a property with a DOMTokenList */\\n      var addProp = function (o, name, attr) {\\n\\n        defineGetter(o.prototype, name, function () {\\n          var tokenList;\\n\\n          var THIS = this,\\n\\n          /** Prevent this from firing twice for some reason. What the hell, IE. */\\n          gibberishProperty = \\\"__defineGetter__\\\" + \\\"DEFINE_PROPERTY\\\" + name;\\n          if(THIS[gibberishProperty]) return tokenList;\\n          THIS[gibberishProperty] = true;\\n\\n          /**\\n           * IE8 can't define properties on native JavaScript objects, so we'll use a dumb hack instead.\\n           *\\n           * What this is doing is creating a dummy element (\\\"reflection\\\") inside a detached phantom node (\\\"mirror\\\")\\n           * that serves as the target of Object.defineProperty instead. While we could simply use the subject HTML\\n           * element instead, this would conflict with element types which use indexed properties (such as forms and\\n           * select lists).\\n           */\\n          if (false === dpSupport) {\\n\\n            var visage;\\n            var mirror = addProp.mirror || document.createElement(\\\"div\\\");\\n            var reflections = mirror.childNodes;\\n            var l = reflections.length;\\n\\n            for (var i = 0; i < l; ++i)\\n              if (reflections[i]._R === THIS) {\\n                visage = reflections[i];\\n                break;\\n              }\\n\\n            /** Couldn't find an element's reflection inside the mirror. Materialise one. */\\n            visage || (visage = mirror.appendChild(document.createElement(\\\"div\\\")));\\n\\n            tokenList = DOMTokenList.call(visage, THIS, attr);\\n          } else tokenList = new DOMTokenList(THIS, attr);\\n\\n          defineGetter(THIS, name, function () {\\n            return tokenList;\\n          });\\n          delete THIS[gibberishProperty];\\n\\n          return tokenList;\\n        }, true);\\n      };\\n\\n      addProp(global.Element, \\\"classList\\\", \\\"className\\\");\\n      addProp(global.HTMLElement, \\\"classList\\\", \\\"className\\\");\\n      addProp(global.HTMLLinkElement, \\\"relList\\\", \\\"rel\\\");\\n      addProp(global.HTMLAnchorElement, \\\"relList\\\", \\\"rel\\\");\\n      addProp(global.HTMLAreaElement, \\\"relList\\\", \\\"rel\\\");\\n    }(this));\\n\\n}).call('object' === typeof window && window || 'object' === typeof self && self || 'object' === typeof global && global || {});\\n\\nfunction Accordion ($module) {\\n  this.$module = $module;\\n  this.moduleId = $module.getAttribute('id');\\n  this.$sections = $module.querySelectorAll('.govuk-accordion__section');\\n  this.$openAllButton = '';\\n  this.browserSupportsSessionStorage = helper.checkForSessionStorage();\\n\\n  this.controlsClass = 'govuk-accordion__controls';\\n  this.openAllClass = 'govuk-accordion__open-all';\\n  this.iconClass = 'govuk-accordion__icon';\\n\\n  this.sectionHeaderClass = 'govuk-accordion__section-header';\\n  this.sectionHeaderFocusedClass = 'govuk-accordion__section-header--focused';\\n  this.sectionHeadingClass = 'govuk-accordion__section-heading';\\n  this.sectionSummaryClass = 'govuk-accordion__section-summary';\\n  this.sectionButtonClass = 'govuk-accordion__section-button';\\n  this.sectionExpandedClass = 'govuk-accordion__section--expanded';\\n}\\n\\n// Initialize component\\nAccordion.prototype.init = function () {\\n  // Check for module\\n  if (!this.$module) {\\n    return\\n  }\\n\\n  this.initControls();\\n\\n  this.initSectionHeaders();\\n\\n  // See if \\\"Open all\\\" button text should be updated\\n  var areAllSectionsOpen = this.checkIfAllSectionsOpen();\\n  this.updateOpenAllButton(areAllSectionsOpen);\\n};\\n\\n// Initialise controls and set attributes\\nAccordion.prototype.initControls = function () {\\n  // Create \\\"Open all\\\" button and set attributes\\n  this.$openAllButton = document.createElement('button');\\n  this.$openAllButton.setAttribute('type', 'button');\\n  this.$openAllButton.innerHTML = 'Open all <span class=\\\"govuk-visually-hidden\\\">sections</span>';\\n  this.$openAllButton.setAttribute('class', this.openAllClass);\\n  this.$openAllButton.setAttribute('aria-expanded', 'false');\\n  this.$openAllButton.setAttribute('type', 'button');\\n\\n  // Create control wrapper and add controls to it\\n  var accordionControls = document.createElement('div');\\n  accordionControls.setAttribute('class', this.controlsClass);\\n  accordionControls.appendChild(this.$openAllButton);\\n  this.$module.insertBefore(accordionControls, this.$module.firstChild);\\n\\n  // Handle events for the controls\\n  this.$openAllButton.addEventListener('click', this.onOpenOrCloseAllToggle.bind(this));\\n};\\n\\n// Initialise section headers\\nAccordion.prototype.initSectionHeaders = function () {\\n  // Loop through section headers\\n  nodeListForEach(this.$sections, function ($section, i) {\\n    // Set header attributes\\n    var header = $section.querySelector('.' + this.sectionHeaderClass);\\n    this.initHeaderAttributes(header, i);\\n\\n    this.setExpanded(this.isExpanded($section), $section);\\n\\n    // Handle events\\n    header.addEventListener('click', this.onSectionToggle.bind(this, $section));\\n\\n    // See if there is any state stored in sessionStorage and set the sections to\\n    // open or closed.\\n    this.setInitialState($section);\\n  }.bind(this));\\n};\\n\\n// Set individual header attributes\\nAccordion.prototype.initHeaderAttributes = function ($headerWrapper, index) {\\n  var $module = this;\\n  var $span = $headerWrapper.querySelector('.' + this.sectionButtonClass);\\n  var $heading = $headerWrapper.querySelector('.' + this.sectionHeadingClass);\\n  var $summary = $headerWrapper.querySelector('.' + this.sectionSummaryClass);\\n\\n  // Copy existing span element to an actual button element, for improved accessibility.\\n  var $button = document.createElement('button');\\n  $button.setAttribute('type', 'button');\\n  $button.setAttribute('id', this.moduleId + '-heading-' + (index + 1));\\n  $button.setAttribute('aria-controls', this.moduleId + '-content-' + (index + 1));\\n\\n  // Copy all attributes (https://developer.mozilla.org/en-US/docs/Web/API/Element/attributes) from $span to $button\\n  for (var i = 0; i < $span.attributes.length; i++) {\\n    var attr = $span.attributes.item(i);\\n    $button.setAttribute(attr.nodeName, attr.nodeValue);\\n  }\\n\\n  $button.addEventListener('focusin', function (e) {\\n    if (!$headerWrapper.classList.contains($module.sectionHeaderFocusedClass)) {\\n      $headerWrapper.className += ' ' + $module.sectionHeaderFocusedClass;\\n    }\\n  });\\n\\n  $button.addEventListener('blur', function (e) {\\n    $headerWrapper.classList.remove($module.sectionHeaderFocusedClass);\\n  });\\n\\n  if (typeof ($summary) !== 'undefined' && $summary !== null) {\\n    $button.setAttribute('aria-describedby', this.moduleId + '-summary-' + (index + 1));\\n  }\\n\\n  // $span could contain HTML elements (see https://www.w3.org/TR/2011/WD-html5-20110525/content-models.html#phrasing-content)\\n  $button.innerHTML = $span.innerHTML;\\n\\n  $heading.removeChild($span);\\n  $heading.appendChild($button);\\n\\n  // Add \\\"+/-\\\" icon\\n  var icon = document.createElement('span');\\n  icon.className = this.iconClass;\\n  icon.setAttribute('aria-hidden', 'true');\\n\\n  $heading.appendChild(icon);\\n};\\n\\n// When section toggled, set and store state\\nAccordion.prototype.onSectionToggle = function ($section) {\\n  var expanded = this.isExpanded($section);\\n  this.setExpanded(!expanded, $section);\\n\\n  // Store the state in sessionStorage when a change is triggered\\n  this.storeState($section);\\n};\\n\\n// When Open/Close All toggled, set and store state\\nAccordion.prototype.onOpenOrCloseAllToggle = function () {\\n  var $module = this;\\n  var $sections = this.$sections;\\n\\n  var nowExpanded = !this.checkIfAllSectionsOpen();\\n\\n  nodeListForEach($sections, function ($section) {\\n    $module.setExpanded(nowExpanded, $section);\\n    // Store the state in sessionStorage when a change is triggered\\n    $module.storeState($section);\\n  });\\n\\n  $module.updateOpenAllButton(nowExpanded);\\n};\\n\\n// Set section attributes when opened/closed\\nAccordion.prototype.setExpanded = function (expanded, $section) {\\n  var $button = $section.querySelector('.' + this.sectionButtonClass);\\n  $button.setAttribute('aria-expanded', expanded);\\n\\n  if (expanded) {\\n    $section.classList.add(this.sectionExpandedClass);\\n  } else {\\n    $section.classList.remove(this.sectionExpandedClass);\\n  }\\n\\n  // See if \\\"Open all\\\" button text should be updated\\n  var areAllSectionsOpen = this.checkIfAllSectionsOpen();\\n  this.updateOpenAllButton(areAllSectionsOpen);\\n};\\n\\n// Get state of section\\nAccordion.prototype.isExpanded = function ($section) {\\n  return $section.classList.contains(this.sectionExpandedClass)\\n};\\n\\n// Check if all sections are open\\nAccordion.prototype.checkIfAllSectionsOpen = function () {\\n  // Get a count of all the Accordion sections\\n  var sectionsCount = this.$sections.length;\\n  // Get a count of all Accordion sections that are expanded\\n  var expandedSectionCount = this.$module.querySelectorAll('.' + this.sectionExpandedClass).length;\\n  var areAllSectionsOpen = sectionsCount === expandedSectionCount;\\n\\n  return areAllSectionsOpen\\n};\\n\\n// Update \\\"Open all\\\" button\\nAccordion.prototype.updateOpenAllButton = function (expanded) {\\n  var newButtonText = expanded ? 'Close all' : 'Open all';\\n  newButtonText += '<span class=\\\"govuk-visually-hidden\\\"> sections</span>';\\n  this.$openAllButton.setAttribute('aria-expanded', expanded);\\n  this.$openAllButton.innerHTML = newButtonText;\\n};\\n\\n// Check for `window.sessionStorage`, and that it actually works.\\nvar helper = {\\n  checkForSessionStorage: function () {\\n    var testString = 'this is the test string';\\n    var result;\\n    try {\\n      window.sessionStorage.setItem(testString, testString);\\n      result = window.sessionStorage.getItem(testString) === testString.toString();\\n      window.sessionStorage.removeItem(testString);\\n      return result\\n    } catch (exception) {\\n      if ((typeof console === 'undefined' || typeof console.log === 'undefined')) {\\n        console.log('Notice: sessionStorage not available.');\\n      }\\n    }\\n  }\\n};\\n\\n// Set the state of the accordions in sessionStorage\\nAccordion.prototype.storeState = function ($section) {\\n  if (this.browserSupportsSessionStorage) {\\n    // We need a unique way of identifying each content in the accordion. Since\\n    // an `#id` should be unique and an `id` is required for `aria-` attributes\\n    // `id` can be safely used.\\n    var $button = $section.querySelector('.' + this.sectionButtonClass);\\n\\n    if ($button) {\\n      var contentId = $button.getAttribute('aria-controls');\\n      var contentState = $button.getAttribute('aria-expanded');\\n\\n      if (typeof contentId === 'undefined' && (typeof console === 'undefined' || typeof console.log === 'undefined')) {\\n        console.error(new Error('No aria controls present in accordion section heading.'));\\n      }\\n\\n      if (typeof contentState === 'undefined' && (typeof console === 'undefined' || typeof console.log === 'undefined')) {\\n        console.error(new Error('No aria expanded present in accordion section heading.'));\\n      }\\n\\n      // Only set the state when both `contentId` and `contentState` are taken from the DOM.\\n      if (contentId && contentState) {\\n        window.sessionStorage.setItem(contentId, contentState);\\n      }\\n    }\\n  }\\n};\\n\\n// Read the state of the accordions from sessionStorage\\nAccordion.prototype.setInitialState = function ($section) {\\n  if (this.browserSupportsSessionStorage) {\\n    var $button = $section.querySelector('.' + this.sectionButtonClass);\\n\\n    if ($button) {\\n      var contentId = $button.getAttribute('aria-controls');\\n      var contentState = contentId ? window.sessionStorage.getItem(contentId) : null;\\n\\n      if (contentState !== null) {\\n        this.setExpanded(contentState === 'true', $section);\\n      }\\n    }\\n  }\\n};\\n\\n(function(undefined) {\\n\\n// Detection from https://github.com/Financial-Times/polyfill-service/blob/master/packages/polyfill-library/polyfills/Window/detect.js\\nvar detect = ('Window' in this);\\n\\nif (detect) return\\n\\n// Polyfill from https://cdn.polyfill.io/v2/polyfill.js?features=Window&flags=always\\nif ((typeof WorkerGlobalScope === \\\"undefined\\\") && (typeof importScripts !== \\\"function\\\")) {\\n\\t(function (global) {\\n\\t\\tif (global.constructor) {\\n\\t\\t\\tglobal.Window = global.constructor;\\n\\t\\t} else {\\n\\t\\t\\t(global.Window = global.constructor = new Function('return function Window() {}')()).prototype = this;\\n\\t\\t}\\n\\t}(this));\\n}\\n\\n})\\n.call('object' === typeof window && window || 'object' === typeof self && self || 'object' === typeof global && global || {});\\n\\n(function(undefined) {\\n\\n// Detection from https://github.com/Financial-Times/polyfill-service/blob/master/packages/polyfill-library/polyfills/Event/detect.js\\nvar detect = (\\n  (function(global) {\\n\\n  \\tif (!('Event' in global)) return false;\\n  \\tif (typeof global.Event === 'function') return true;\\n\\n  \\ttry {\\n\\n  \\t\\t// In IE 9-11, the Event object exists but cannot be instantiated\\n  \\t\\tnew Event('click');\\n  \\t\\treturn true;\\n  \\t} catch(e) {\\n  \\t\\treturn false;\\n  \\t}\\n  }(this))\\n);\\n\\nif (detect) return\\n\\n// Polyfill from https://cdn.polyfill.io/v2/polyfill.js?features=Event&flags=always\\n(function () {\\n\\tvar unlistenableWindowEvents = {\\n\\t\\tclick: 1,\\n\\t\\tdblclick: 1,\\n\\t\\tkeyup: 1,\\n\\t\\tkeypress: 1,\\n\\t\\tkeydown: 1,\\n\\t\\tmousedown: 1,\\n\\t\\tmouseup: 1,\\n\\t\\tmousemove: 1,\\n\\t\\tmouseover: 1,\\n\\t\\tmouseenter: 1,\\n\\t\\tmouseleave: 1,\\n\\t\\tmouseout: 1,\\n\\t\\tstorage: 1,\\n\\t\\tstoragecommit: 1,\\n\\t\\ttextinput: 1\\n\\t};\\n\\n\\t// This polyfill depends on availability of `document` so will not run in a worker\\n\\t// However, we asssume there are no browsers with worker support that lack proper\\n\\t// support for `Event` within the worker\\n\\tif (typeof document === 'undefined' || typeof window === 'undefined') return;\\n\\n\\tfunction indexOf(array, element) {\\n\\t\\tvar\\n\\t\\tindex = -1,\\n\\t\\tlength = array.length;\\n\\n\\t\\twhile (++index < length) {\\n\\t\\t\\tif (index in array && array[index] === element) {\\n\\t\\t\\t\\treturn index;\\n\\t\\t\\t}\\n\\t\\t}\\n\\n\\t\\treturn -1;\\n\\t}\\n\\n\\tvar existingProto = (window.Event && window.Event.prototype) || null;\\n\\twindow.Event = Window.prototype.Event = function Event(type, eventInitDict) {\\n\\t\\tif (!type) {\\n\\t\\t\\tthrow new Error('Not enough arguments');\\n\\t\\t}\\n\\n\\t\\tvar event;\\n\\t\\t// Shortcut if browser supports createEvent\\n\\t\\tif ('createEvent' in document) {\\n\\t\\t\\tevent = document.createEvent('Event');\\n\\t\\t\\tvar bubbles = eventInitDict && eventInitDict.bubbles !== undefined ? eventInitDict.bubbles : false;\\n\\t\\t\\tvar cancelable = eventInitDict && eventInitDict.cancelable !== undefined ? eventInitDict.cancelable : false;\\n\\n\\t\\t\\tevent.initEvent(type, bubbles, cancelable);\\n\\n\\t\\t\\treturn event;\\n\\t\\t}\\n\\n\\t\\tevent = document.createEventObject();\\n\\n\\t\\tevent.type = type;\\n\\t\\tevent.bubbles = eventInitDict && eventInitDict.bubbles !== undefined ? eventInitDict.bubbles : false;\\n\\t\\tevent.cancelable = eventInitDict && eventInitDict.cancelable !== undefined ? eventInitDict.cancelable : false;\\n\\n\\t\\treturn event;\\n\\t};\\n\\tif (existingProto) {\\n\\t\\tObject.defineProperty(window.Event, 'prototype', {\\n\\t\\t\\tconfigurable: false,\\n\\t\\t\\tenumerable: false,\\n\\t\\t\\twritable: true,\\n\\t\\t\\tvalue: existingProto\\n\\t\\t});\\n\\t}\\n\\n\\tif (!('createEvent' in document)) {\\n\\t\\twindow.addEventListener = Window.prototype.addEventListener = Document.prototype.addEventListener = Element.prototype.addEventListener = function addEventListener() {\\n\\t\\t\\tvar\\n\\t\\t\\telement = this,\\n\\t\\t\\ttype = arguments[0],\\n\\t\\t\\tlistener = arguments[1];\\n\\n\\t\\t\\tif (element === window && type in unlistenableWindowEvents) {\\n\\t\\t\\t\\tthrow new Error('In IE8 the event: ' + type + ' is not available on the window object. Please see https://github.com/Financial-Times/polyfill-service/issues/317 for more information.');\\n\\t\\t\\t}\\n\\n\\t\\t\\tif (!element._events) {\\n\\t\\t\\t\\telement._events = {};\\n\\t\\t\\t}\\n\\n\\t\\t\\tif (!element._events[type]) {\\n\\t\\t\\t\\telement._events[type] = function (event) {\\n\\t\\t\\t\\t\\tvar\\n\\t\\t\\t\\t\\tlist = element._events[event.type].list,\\n\\t\\t\\t\\t\\tevents = list.slice(),\\n\\t\\t\\t\\t\\tindex = -1,\\n\\t\\t\\t\\t\\tlength = events.length,\\n\\t\\t\\t\\t\\teventElement;\\n\\n\\t\\t\\t\\t\\tevent.preventDefault = function preventDefault() {\\n\\t\\t\\t\\t\\t\\tif (event.cancelable !== false) {\\n\\t\\t\\t\\t\\t\\t\\tevent.returnValue = false;\\n\\t\\t\\t\\t\\t\\t}\\n\\t\\t\\t\\t\\t};\\n\\n\\t\\t\\t\\t\\tevent.stopPropagation = function stopPropagation() {\\n\\t\\t\\t\\t\\t\\tevent.cancelBubble = true;\\n\\t\\t\\t\\t\\t};\\n\\n\\t\\t\\t\\t\\tevent.stopImmediatePropagation = function stopImmediatePropagation() {\\n\\t\\t\\t\\t\\t\\tevent.cancelBubble = true;\\n\\t\\t\\t\\t\\t\\tevent.cancelImmediate = true;\\n\\t\\t\\t\\t\\t};\\n\\n\\t\\t\\t\\t\\tevent.currentTarget = element;\\n\\t\\t\\t\\t\\tevent.relatedTarget = event.fromElement || null;\\n\\t\\t\\t\\t\\tevent.target = event.target || event.srcElement || element;\\n\\t\\t\\t\\t\\tevent.timeStamp = new Date().getTime();\\n\\n\\t\\t\\t\\t\\tif (event.clientX) {\\n\\t\\t\\t\\t\\t\\tevent.pageX = event.clientX + document.documentElement.scrollLeft;\\n\\t\\t\\t\\t\\t\\tevent.pageY = event.clientY + document.documentElement.scrollTop;\\n\\t\\t\\t\\t\\t}\\n\\n\\t\\t\\t\\t\\twhile (++index < length && !event.cancelImmediate) {\\n\\t\\t\\t\\t\\t\\tif (index in events) {\\n\\t\\t\\t\\t\\t\\t\\teventElement = events[index];\\n\\n\\t\\t\\t\\t\\t\\t\\tif (indexOf(list, eventElement) !== -1 && typeof eventElement === 'function') {\\n\\t\\t\\t\\t\\t\\t\\t\\teventElement.call(element, event);\\n\\t\\t\\t\\t\\t\\t\\t}\\n\\t\\t\\t\\t\\t\\t}\\n\\t\\t\\t\\t\\t}\\n\\t\\t\\t\\t};\\n\\n\\t\\t\\t\\telement._events[type].list = [];\\n\\n\\t\\t\\t\\tif (element.attachEvent) {\\n\\t\\t\\t\\t\\telement.attachEvent('on' + type, element._events[type]);\\n\\t\\t\\t\\t}\\n\\t\\t\\t}\\n\\n\\t\\t\\telement._events[type].list.push(listener);\\n\\t\\t};\\n\\n\\t\\twindow.removeEventListener = Window.prototype.removeEventListener = Document.prototype.removeEventListener = Element.prototype.removeEventListener = function removeEventListener() {\\n\\t\\t\\tvar\\n\\t\\t\\telement = this,\\n\\t\\t\\ttype = arguments[0],\\n\\t\\t\\tlistener = arguments[1],\\n\\t\\t\\tindex;\\n\\n\\t\\t\\tif (element._events && element._events[type] && element._events[type].list) {\\n\\t\\t\\t\\tindex = indexOf(element._events[type].list, listener);\\n\\n\\t\\t\\t\\tif (index !== -1) {\\n\\t\\t\\t\\t\\telement._events[type].list.splice(index, 1);\\n\\n\\t\\t\\t\\t\\tif (!element._events[type].list.length) {\\n\\t\\t\\t\\t\\t\\tif (element.detachEvent) {\\n\\t\\t\\t\\t\\t\\t\\telement.detachEvent('on' + type, element._events[type]);\\n\\t\\t\\t\\t\\t\\t}\\n\\t\\t\\t\\t\\t\\tdelete element._events[type];\\n\\t\\t\\t\\t\\t}\\n\\t\\t\\t\\t}\\n\\t\\t\\t}\\n\\t\\t};\\n\\n\\t\\twindow.dispatchEvent = Window.prototype.dispatchEvent = Document.prototype.dispatchEvent = Element.prototype.dispatchEvent = function dispatchEvent(event) {\\n\\t\\t\\tif (!arguments.length) {\\n\\t\\t\\t\\tthrow new Error('Not enough arguments');\\n\\t\\t\\t}\\n\\n\\t\\t\\tif (!event || typeof event.type !== 'string') {\\n\\t\\t\\t\\tthrow new Error('DOM Events Exception 0');\\n\\t\\t\\t}\\n\\n\\t\\t\\tvar element = this, type = event.type;\\n\\n\\t\\t\\ttry {\\n\\t\\t\\t\\tif (!event.bubbles) {\\n\\t\\t\\t\\t\\tevent.cancelBubble = true;\\n\\n\\t\\t\\t\\t\\tvar cancelBubbleEvent = function (event) {\\n\\t\\t\\t\\t\\t\\tevent.cancelBubble = true;\\n\\n\\t\\t\\t\\t\\t\\t(element || window).detachEvent('on' + type, cancelBubbleEvent);\\n\\t\\t\\t\\t\\t};\\n\\n\\t\\t\\t\\t\\tthis.attachEvent('on' + type, cancelBubbleEvent);\\n\\t\\t\\t\\t}\\n\\n\\t\\t\\t\\tthis.fireEvent('on' + type, event);\\n\\t\\t\\t} catch (error) {\\n\\t\\t\\t\\tevent.target = element;\\n\\n\\t\\t\\t\\tdo {\\n\\t\\t\\t\\t\\tevent.currentTarget = element;\\n\\n\\t\\t\\t\\t\\tif ('_events' in element && typeof element._events[type] === 'function') {\\n\\t\\t\\t\\t\\t\\telement._events[type].call(element, event);\\n\\t\\t\\t\\t\\t}\\n\\n\\t\\t\\t\\t\\tif (typeof element['on' + type] === 'function') {\\n\\t\\t\\t\\t\\t\\telement['on' + type].call(element, event);\\n\\t\\t\\t\\t\\t}\\n\\n\\t\\t\\t\\t\\telement = element.nodeType === 9 ? element.parentWindow : element.parentNode;\\n\\t\\t\\t\\t} while (element && !event.cancelBubble);\\n\\t\\t\\t}\\n\\n\\t\\t\\treturn true;\\n\\t\\t};\\n\\n\\t\\t// Add the DOMContentLoaded Event\\n\\t\\tdocument.attachEvent('onreadystatechange', function() {\\n\\t\\t\\tif (document.readyState === 'complete') {\\n\\t\\t\\t\\tdocument.dispatchEvent(new Event('DOMContentLoaded', {\\n\\t\\t\\t\\t\\tbubbles: true\\n\\t\\t\\t\\t}));\\n\\t\\t\\t}\\n\\t\\t});\\n\\t}\\n}());\\n\\n})\\n.call('object' === typeof window && window || 'object' === typeof self && self || 'object' === typeof global && global || {});\\n\\nvar KEY_SPACE = 32;\\nvar DEBOUNCE_TIMEOUT_IN_SECONDS = 1;\\n\\nfunction Button ($module) {\\n  this.$module = $module;\\n  this.debounceFormSubmitTimer = null;\\n}\\n\\n/**\\n* JavaScript 'shim' to trigger the click event of element(s) when the space key is pressed.\\n*\\n* Created since some Assistive Technologies (for example some Screenreaders)\\n* will tell a user to press space on a 'button', so this functionality needs to be shimmed\\n* See https://github.com/alphagov/govuk_elements/pull/272#issuecomment-233028270\\n*\\n* @param {object} event event\\n*/\\nButton.prototype.handleKeyDown = function (event) {\\n  // get the target element\\n  var target = event.target;\\n  // if the element has a role='button' and the pressed key is a space, we'll simulate a click\\n  if (target.getAttribute('role') === 'button' && event.keyCode === KEY_SPACE) {\\n    event.preventDefault();\\n    // trigger the target's click event\\n    target.click();\\n  }\\n};\\n\\n/**\\n* If the click quickly succeeds a previous click then nothing will happen.\\n* This stops people accidentally causing multiple form submissions by\\n* double clicking buttons.\\n*/\\nButton.prototype.debounce = function (event) {\\n  var target = event.target;\\n  // Check the button that is clicked on has the preventDoubleClick feature enabled\\n  if (target.getAttribute('data-prevent-double-click') !== 'true') {\\n    return\\n  }\\n\\n  // If the timer is still running then we want to prevent the click from submitting the form\\n  if (this.debounceFormSubmitTimer) {\\n    event.preventDefault();\\n    return false\\n  }\\n\\n  this.debounceFormSubmitTimer = setTimeout(function () {\\n    this.debounceFormSubmitTimer = null;\\n  }.bind(this), DEBOUNCE_TIMEOUT_IN_SECONDS * 1000);\\n};\\n\\n/**\\n* Initialise an event listener for keydown at document level\\n* this will help listening for later inserted elements with a role=\\\"button\\\"\\n*/\\nButton.prototype.init = function () {\\n  this.$module.addEventListener('keydown', this.handleKeyDown);\\n  this.$module.addEventListener('click', this.debounce);\\n};\\n\\n/**\\n * JavaScript 'polyfill' for HTML5's <details> and <summary> elements\\n * and 'shim' to add accessiblity enhancements for all browsers\\n *\\n * http://caniuse.com/#feat=details\\n */\\n\\nvar KEY_ENTER = 13;\\nvar KEY_SPACE$1 = 32;\\n\\nfunction Details ($module) {\\n  this.$module = $module;\\n}\\n\\nDetails.prototype.init = function () {\\n  if (!this.$module) {\\n    return\\n  }\\n\\n  // If there is native details support, we want to avoid running code to polyfill native behaviour.\\n  var hasNativeDetails = typeof this.$module.open === 'boolean';\\n\\n  if (hasNativeDetails) {\\n    return\\n  }\\n\\n  this.polyfillDetails();\\n};\\n\\nDetails.prototype.polyfillDetails = function () {\\n  var $module = this.$module;\\n\\n  // Save shortcuts to the inner summary and content elements\\n  var $summary = this.$summary = $module.getElementsByTagName('summary').item(0);\\n  var $content = this.$content = $module.getElementsByTagName('div').item(0);\\n\\n  // If <details> doesn't have a <summary> and a <div> representing the content\\n  // it means the required HTML structure is not met so the script will stop\\n  if (!$summary || !$content) {\\n    return\\n  }\\n\\n  // If the content doesn't have an ID, assign it one now\\n  // which we'll need for the summary's aria-controls assignment\\n  if (!$content.id) {\\n    $content.id = 'details-content-' + generateUniqueID();\\n  }\\n\\n  // Add ARIA role=\\\"group\\\" to details\\n  $module.setAttribute('role', 'group');\\n\\n  // Add role=button to summary\\n  $summary.setAttribute('role', 'button');\\n\\n  // Add aria-controls\\n  $summary.setAttribute('aria-controls', $content.id);\\n\\n  // Set tabIndex so the summary is keyboard accessible for non-native elements\\n  //\\n  // We have to use the camelcase `tabIndex` property as there is a bug in IE6/IE7 when we set the correct attribute lowercase:\\n  // See http://web.archive.org/web/20170120194036/http://www.saliences.com/browserBugs/tabIndex.html for more information.\\n  $summary.tabIndex = 0;\\n\\n  // Detect initial open state\\n  var openAttr = $module.getAttribute('open') !== null;\\n  if (openAttr === true) {\\n    $summary.setAttribute('aria-expanded', 'true');\\n    $content.setAttribute('aria-hidden', 'false');\\n  } else {\\n    $summary.setAttribute('aria-expanded', 'false');\\n    $content.setAttribute('aria-hidden', 'true');\\n    $content.style.display = 'none';\\n  }\\n\\n  // Bind an event to handle summary elements\\n  this.polyfillHandleInputs($summary, this.polyfillSetAttributes.bind(this));\\n};\\n\\n/**\\n* Define a statechange function that updates aria-expanded and style.display\\n* @param {object} summary element\\n*/\\nDetails.prototype.polyfillSetAttributes = function () {\\n  var $module = this.$module;\\n  var $summary = this.$summary;\\n  var $content = this.$content;\\n\\n  var expanded = $summary.getAttribute('aria-expanded') === 'true';\\n  var hidden = $content.getAttribute('aria-hidden') === 'true';\\n\\n  $summary.setAttribute('aria-expanded', (expanded ? 'false' : 'true'));\\n  $content.setAttribute('aria-hidden', (hidden ? 'false' : 'true'));\\n\\n  $content.style.display = (expanded ? 'none' : '');\\n\\n  var hasOpenAttr = $module.getAttribute('open') !== null;\\n  if (!hasOpenAttr) {\\n    $module.setAttribute('open', 'open');\\n  } else {\\n    $module.removeAttribute('open');\\n  }\\n\\n  return true\\n};\\n\\n/**\\n* Handle cross-modal click events\\n* @param {object} node element\\n* @param {function} callback function\\n*/\\nDetails.prototype.polyfillHandleInputs = function (node, callback) {\\n  node.addEventListener('keypress', function (event) {\\n    var target = event.target;\\n    // When the key gets pressed - check if it is enter or space\\n    if (event.keyCode === KEY_ENTER || event.keyCode === KEY_SPACE$1) {\\n      if (target.nodeName.toLowerCase() === 'summary') {\\n        // Prevent space from scrolling the page\\n        // and enter from submitting a form\\n        event.preventDefault();\\n        // Click to let the click event do all the necessary action\\n        if (target.click) {\\n          target.click();\\n        } else {\\n          // except Safari 5.1 and under don't support .click() here\\n          callback(event);\\n        }\\n      }\\n    }\\n  });\\n\\n  // Prevent keyup to prevent clicking twice in Firefox when using space key\\n  node.addEventListener('keyup', function (event) {\\n    var target = event.target;\\n    if (event.keyCode === KEY_SPACE$1) {\\n      if (target.nodeName.toLowerCase() === 'summary') {\\n        event.preventDefault();\\n      }\\n    }\\n  });\\n\\n  node.addEventListener('click', callback);\\n};\\n\\nfunction CharacterCount ($module) {\\n  this.$module = $module;\\n  this.$textarea = $module.querySelector('.govuk-js-character-count');\\n  if (this.$textarea) {\\n    this.$countMessage = $module.querySelector('[id=' + this.$textarea.id + '-info]');\\n  }\\n}\\n\\nCharacterCount.prototype.defaults = {\\n  characterCountAttribute: 'data-maxlength',\\n  wordCountAttribute: 'data-maxwords'\\n};\\n\\n// Initialize component\\nCharacterCount.prototype.init = function () {\\n  // Check for module\\n  var $module = this.$module;\\n  var $textarea = this.$textarea;\\n  var $countMessage = this.$countMessage;\\n\\n  if (!$textarea || !$countMessage) {\\n    return\\n  }\\n\\n  // We move count message right after the field\\n  // Kept for backwards compatibility\\n  $textarea.insertAdjacentElement('afterend', $countMessage);\\n\\n  // Read options set using dataset ('data-' values)\\n  this.options = this.getDataset($module);\\n\\n  // Determine the limit attribute (characters or words)\\n  var countAttribute = this.defaults.characterCountAttribute;\\n  if (this.options.maxwords) {\\n    countAttribute = this.defaults.wordCountAttribute;\\n  }\\n\\n  // Save the element limit\\n  this.maxLength = $module.getAttribute(countAttribute);\\n\\n  // Check for limit\\n  if (!this.maxLength) {\\n    return\\n  }\\n\\n  // Remove hard limit if set\\n  $module.removeAttribute('maxlength');\\n\\n  // Bind event changes to the textarea\\n  var boundChangeEvents = this.bindChangeEvents.bind(this);\\n  boundChangeEvents();\\n\\n  // Update count message\\n  var boundUpdateCountMessage = this.updateCountMessage.bind(this);\\n  boundUpdateCountMessage();\\n};\\n\\n// Read data attributes\\nCharacterCount.prototype.getDataset = function (element) {\\n  var dataset = {};\\n  var attributes = element.attributes;\\n  if (attributes) {\\n    for (var i = 0; i < attributes.length; i++) {\\n      var attribute = attributes[i];\\n      var match = attribute.name.match(/^data-(.+)/);\\n      if (match) {\\n        dataset[match[1]] = attribute.value;\\n      }\\n    }\\n  }\\n  return dataset\\n};\\n\\n// Counts characters or words in text\\nCharacterCount.prototype.count = function (text) {\\n  var length;\\n  if (this.options.maxwords) {\\n    var tokens = text.match(/\\\\S+/g) || []; // Matches consecutive non-whitespace chars\\n    length = tokens.length;\\n  } else {\\n    length = text.length;\\n  }\\n  return length\\n};\\n\\n// Bind input propertychange to the elements and update based on the change\\nCharacterCount.prototype.bindChangeEvents = function () {\\n  var $textarea = this.$textarea;\\n  $textarea.addEventListener('keyup', this.checkIfValueChanged.bind(this));\\n\\n  // Bind focus/blur events to start/stop polling\\n  $textarea.addEventListener('focus', this.handleFocus.bind(this));\\n  $textarea.addEventListener('blur', this.handleBlur.bind(this));\\n};\\n\\n// Speech recognition software such as Dragon NaturallySpeaking will modify the\\n// fields by directly changing its `value`. These changes don't trigger events\\n// in JavaScript, so we need to poll to handle when and if they occur.\\nCharacterCount.prototype.checkIfValueChanged = function () {\\n  if (!this.$textarea.oldValue) this.$textarea.oldValue = '';\\n  if (this.$textarea.value !== this.$textarea.oldValue) {\\n    this.$textarea.oldValue = this.$textarea.value;\\n    var boundUpdateCountMessage = this.updateCountMessage.bind(this);\\n    boundUpdateCountMessage();\\n  }\\n};\\n\\n// Update message box\\nCharacterCount.prototype.updateCountMessage = function () {\\n  var countElement = this.$textarea;\\n  var options = this.options;\\n  var countMessage = this.$countMessage;\\n\\n  // Determine the remaining number of characters/words\\n  var currentLength = this.count(countElement.value);\\n  var maxLength = this.maxLength;\\n  var remainingNumber = maxLength - currentLength;\\n\\n  // Set threshold if presented in options\\n  var thresholdPercent = options.threshold ? options.threshold : 0;\\n  var thresholdValue = maxLength * thresholdPercent / 100;\\n  if (thresholdValue > currentLength) {\\n    countMessage.classList.add('govuk-character-count__message--disabled');\\n    // Ensure threshold is hidden for users of assistive technologies\\n    countMessage.setAttribute('aria-hidden', true);\\n  } else {\\n    countMessage.classList.remove('govuk-character-count__message--disabled');\\n    // Ensure threshold is visible for users of assistive technologies\\n    countMessage.removeAttribute('aria-hidden');\\n  }\\n\\n  // Update styles\\n  if (remainingNumber < 0) {\\n    countElement.classList.add('govuk-textarea--error');\\n    countMessage.classList.remove('govuk-hint');\\n    countMessage.classList.add('govuk-error-message');\\n  } else {\\n    countElement.classList.remove('govuk-textarea--error');\\n    countMessage.classList.remove('govuk-error-message');\\n    countMessage.classList.add('govuk-hint');\\n  }\\n\\n  // Update message\\n  var charVerb = 'remaining';\\n  var charNoun = 'character';\\n  var displayNumber = remainingNumber;\\n  if (options.maxwords) {\\n    charNoun = 'word';\\n  }\\n  charNoun = charNoun + ((remainingNumber === -1 || remainingNumber === 1) ? '' : 's');\\n\\n  charVerb = (remainingNumber < 0) ? 'too many' : 'remaining';\\n  displayNumber = Math.abs(remainingNumber);\\n\\n  countMessage.innerHTML = 'You have ' + displayNumber + ' ' + charNoun + ' ' + charVerb;\\n};\\n\\nCharacterCount.prototype.handleFocus = function () {\\n  // Check if value changed on focus\\n  this.valueChecker = setInterval(this.checkIfValueChanged.bind(this), 1000);\\n};\\n\\nCharacterCount.prototype.handleBlur = function () {\\n  // Cancel value checking on blur\\n  clearInterval(this.valueChecker);\\n};\\n\\nfunction Checkboxes ($module) {\\n  this.$module = $module;\\n  this.$inputs = $module.querySelectorAll('input[type=\\\"checkbox\\\"]');\\n}\\n\\nCheckboxes.prototype.init = function () {\\n  var $module = this.$module;\\n  var $inputs = this.$inputs;\\n\\n  /**\\n  * Loop over all items with [data-controls]\\n  * Check if they have a matching conditional reveal\\n  * If they do, assign attributes.\\n  **/\\n  nodeListForEach($inputs, function ($input) {\\n    var controls = $input.getAttribute('data-aria-controls');\\n\\n    // Check if input controls anything\\n    // Check if content exists, before setting attributes.\\n    if (!controls || !$module.querySelector('#' + controls)) {\\n      return\\n    }\\n\\n    // If we have content that is controlled, set attributes.\\n    $input.setAttribute('aria-controls', controls);\\n    $input.removeAttribute('data-aria-controls');\\n    this.setAttributes($input);\\n  }.bind(this));\\n\\n  // Handle events\\n  $module.addEventListener('click', this.handleClick.bind(this));\\n};\\n\\nCheckboxes.prototype.setAttributes = function ($input) {\\n  var inputIsChecked = $input.checked;\\n  $input.setAttribute('aria-expanded', inputIsChecked);\\n\\n  var $content = this.$module.querySelector('#' + $input.getAttribute('aria-controls'));\\n  if ($content) {\\n    $content.classList.toggle('govuk-checkboxes__conditional--hidden', !inputIsChecked);\\n  }\\n};\\n\\nCheckboxes.prototype.handleClick = function (event) {\\n  var $target = event.target;\\n\\n  // If a checkbox with aria-controls, handle click\\n  var isCheckbox = $target.getAttribute('type') === 'checkbox';\\n  var hasAriaControls = $target.getAttribute('aria-controls');\\n  if (isCheckbox && hasAriaControls) {\\n    this.setAttributes($target);\\n  }\\n};\\n\\n(function(undefined) {\\n\\n  // Detection from https://raw.githubusercontent.com/Financial-Times/polyfill-service/1f3c09b402f65bf6e393f933a15ba63f1b86ef1f/packages/polyfill-library/polyfills/Element/prototype/matches/detect.js\\n  var detect = (\\n    'document' in this && \\\"matches\\\" in document.documentElement\\n  );\\n\\n  if (detect) return\\n\\n  // Polyfill from https://raw.githubusercontent.com/Financial-Times/polyfill-service/1f3c09b402f65bf6e393f933a15ba63f1b86ef1f/packages/polyfill-library/polyfills/Element/prototype/matches/polyfill.js\\n  Element.prototype.matches = Element.prototype.webkitMatchesSelector || Element.prototype.oMatchesSelector || Element.prototype.msMatchesSelector || Element.prototype.mozMatchesSelector || function matches(selector) {\\n    var element = this;\\n    var elements = (element.document || element.ownerDocument).querySelectorAll(selector);\\n    var index = 0;\\n\\n    while (elements[index] && elements[index] !== element) {\\n      ++index;\\n    }\\n\\n    return !!elements[index];\\n  };\\n\\n}).call('object' === typeof window && window || 'object' === typeof self && self || 'object' === typeof global && global || {});\\n\\n(function(undefined) {\\n\\n  // Detection from https://raw.githubusercontent.com/Financial-Times/polyfill-service/1f3c09b402f65bf6e393f933a15ba63f1b86ef1f/packages/polyfill-library/polyfills/Element/prototype/closest/detect.js\\n  var detect = (\\n    'document' in this && \\\"closest\\\" in document.documentElement\\n  );\\n\\n  if (detect) return\\n\\n    // Polyfill from https://raw.githubusercontent.com/Financial-Times/polyfill-service/1f3c09b402f65bf6e393f933a15ba63f1b86ef1f/packages/polyfill-library/polyfills/Element/prototype/closest/polyfill.js\\n  Element.prototype.closest = function closest(selector) {\\n    var node = this;\\n\\n    while (node) {\\n      if (node.matches(selector)) return node;\\n      else node = 'SVGElement' in window && node instanceof SVGElement ? node.parentNode : node.parentElement;\\n    }\\n\\n    return null;\\n  };\\n\\n}).call('object' === typeof window && window || 'object' === typeof self && self || 'object' === typeof global && global || {});\\n\\nfunction ErrorSummary ($module) {\\n  this.$module = $module;\\n}\\n\\nErrorSummary.prototype.init = function () {\\n  var $module = this.$module;\\n  if (!$module) {\\n    return\\n  }\\n  $module.focus();\\n\\n  $module.addEventListener('click', this.handleClick.bind(this));\\n};\\n\\n/**\\n* Click event handler\\n*\\n* @param {MouseEvent} event - Click event\\n*/\\nErrorSummary.prototype.handleClick = function (event) {\\n  var target = event.target;\\n  if (this.focusTarget(target)) {\\n    event.preventDefault();\\n  }\\n};\\n\\n/**\\n * Focus the target element\\n *\\n * By default, the browser will scroll the target into view. Because our labels\\n * or legends appear above the input, this means the user will be presented with\\n * an input without any context, as the label or legend will be off the top of\\n * the screen.\\n *\\n * Manually handling the click event, scrolling the question into view and then\\n * focussing the element solves this.\\n *\\n * This also results in the label and/or legend being announced correctly in\\n * NVDA (as tested in 2018.3.2) - without this only the field type is announced\\n * (e.g. \\\"Edit, has autocomplete\\\").\\n *\\n * @param {HTMLElement} $target - Event target\\n * @returns {boolean} True if the target was able to be focussed\\n */\\nErrorSummary.prototype.focusTarget = function ($target) {\\n  // If the element that was clicked was not a link, return early\\n  if ($target.tagName !== 'A' || $target.href === false) {\\n    return false\\n  }\\n\\n  var inputId = this.getFragmentFromUrl($target.href);\\n  var $input = document.getElementById(inputId);\\n  if (!$input) {\\n    return false\\n  }\\n\\n  var $legendOrLabel = this.getAssociatedLegendOrLabel($input);\\n  if (!$legendOrLabel) {\\n    return false\\n  }\\n\\n  // Scroll the legend or label into view *before* calling focus on the input to\\n  // avoid extra scrolling in browsers that don't support `preventScroll` (which\\n  // at time of writing is most of them...)\\n  $legendOrLabel.scrollIntoView();\\n  $input.focus({ preventScroll: true });\\n\\n  return true\\n};\\n\\n/**\\n * Get fragment from URL\\n *\\n * Extract the fragment (everything after the hash) from a URL, but not including\\n * the hash.\\n *\\n * @param {string} url - URL\\n * @returns {string} Fragment from URL, without the hash\\n */\\nErrorSummary.prototype.getFragmentFromUrl = function (url) {\\n  if (url.indexOf('#') === -1) {\\n    return false\\n  }\\n\\n  return url.split('#').pop()\\n};\\n\\n/**\\n * Get associated legend or label\\n *\\n * Returns the first element that exists from this list:\\n *\\n * - The `<legend>` associated with the closest `<fieldset>` ancestor, as long\\n *   as the top of it is no more than half a viewport height away from the\\n *   bottom of the input\\n * - The first `<label>` that is associated with the input using for=\\\"inputId\\\"\\n * - The closest parent `<label>`\\n *\\n * @param {HTMLElement} $input - The input\\n * @returns {HTMLElement} Associated legend or label, or null if no associated\\n *                        legend or label can be found\\n */\\nErrorSummary.prototype.getAssociatedLegendOrLabel = function ($input) {\\n  var $fieldset = $input.closest('fieldset');\\n\\n  if ($fieldset) {\\n    var legends = $fieldset.getElementsByTagName('legend');\\n\\n    if (legends.length) {\\n      var $candidateLegend = legends[0];\\n\\n      // If the input type is radio or checkbox, always use the legend if there\\n      // is one.\\n      if ($input.type === 'checkbox' || $input.type === 'radio') {\\n        return $candidateLegend\\n      }\\n\\n      // For other input types, only scroll to the fieldset’s legend (instead of\\n      // the label associated with the input) if the input would end up in the\\n      // top half of the screen.\\n      //\\n      // This should avoid situations where the input either ends up off the\\n      // screen, or obscured by a software keyboard.\\n      var legendTop = $candidateLegend.getBoundingClientRect().top;\\n      var inputRect = $input.getBoundingClientRect();\\n\\n      // If the browser doesn't support Element.getBoundingClientRect().height\\n      // or window.innerHeight (like IE8), bail and just link to the label.\\n      if (inputRect.height && window.innerHeight) {\\n        var inputBottom = inputRect.top + inputRect.height;\\n\\n        if (inputBottom - legendTop < window.innerHeight / 2) {\\n          return $candidateLegend\\n        }\\n      }\\n    }\\n  }\\n\\n  return document.querySelector(\\\"label[for='\\\" + $input.getAttribute('id') + \\\"']\\\") ||\\n    $input.closest('label')\\n};\\n\\nfunction Header ($module) {\\n  this.$module = $module;\\n}\\n\\nHeader.prototype.init = function () {\\n  // Check for module\\n  var $module = this.$module;\\n  if (!$module) {\\n    return\\n  }\\n\\n  // Check for button\\n  var $toggleButton = $module.querySelector('.govuk-js-header-toggle');\\n  if (!$toggleButton) {\\n    return\\n  }\\n\\n  // Handle $toggleButton click events\\n  $toggleButton.addEventListener('click', this.handleClick.bind(this));\\n};\\n\\n/**\\n* Toggle class\\n* @param {object} node element\\n* @param {string} className to toggle\\n*/\\nHeader.prototype.toggleClass = function (node, className) {\\n  if (node.className.indexOf(className) > 0) {\\n    node.className = node.className.replace(' ' + className, '');\\n  } else {\\n    node.className += ' ' + className;\\n  }\\n};\\n\\n/**\\n* An event handler for click event on $toggleButton\\n* @param {object} event event\\n*/\\nHeader.prototype.handleClick = function (event) {\\n  var $module = this.$module;\\n  var $toggleButton = event.target || event.srcElement;\\n  var $target = $module.querySelector('#' + $toggleButton.getAttribute('aria-controls'));\\n\\n  // If a button with aria-controls, handle click\\n  if ($toggleButton && $target) {\\n    this.toggleClass($target, 'govuk-header__navigation--open');\\n    this.toggleClass($toggleButton, 'govuk-header__menu-button--open');\\n\\n    $toggleButton.setAttribute('aria-expanded', $toggleButton.getAttribute('aria-expanded') !== 'true');\\n    $target.setAttribute('aria-hidden', $target.getAttribute('aria-hidden') === 'false');\\n  }\\n};\\n\\nfunction Radios ($module) {\\n  this.$module = $module;\\n}\\n\\nRadios.prototype.init = function () {\\n  var $module = this.$module;\\n  var $inputs = $module.querySelectorAll('input[type=\\\"radio\\\"]');\\n\\n  /**\\n  * Loop over all items with [data-controls]\\n  * Check if they have a matching conditional reveal\\n  * If they do, assign attributes.\\n  **/\\n  nodeListForEach($inputs, function ($input) {\\n    var controls = $input.getAttribute('data-aria-controls');\\n\\n    // Check if input controls anything\\n    // Check if content exists, before setting attributes.\\n    if (!controls || !$module.querySelector('#' + controls)) {\\n      return\\n    }\\n\\n    // If we have content that is controlled, set attributes.\\n    $input.setAttribute('aria-controls', controls);\\n    $input.removeAttribute('data-aria-controls');\\n    this.setAttributes($input);\\n  }.bind(this));\\n\\n  // Handle events\\n  $module.addEventListener('click', this.handleClick.bind(this));\\n};\\n\\nRadios.prototype.setAttributes = function ($input) {\\n  var $content = document.querySelector('#' + $input.getAttribute('aria-controls'));\\n\\n  if ($content && $content.classList.contains('govuk-radios__conditional')) {\\n    var inputIsChecked = $input.checked;\\n\\n    $input.setAttribute('aria-expanded', inputIsChecked);\\n\\n    $content.classList.toggle('govuk-radios__conditional--hidden', !inputIsChecked);\\n  }\\n};\\n\\nRadios.prototype.handleClick = function (event) {\\n  var $clickedInput = event.target;\\n  // We only want to handle clicks for radio inputs\\n  if ($clickedInput.type !== 'radio') {\\n    return\\n  }\\n  // Because checking one radio can uncheck a radio in another $module,\\n  // we need to call set attributes on all radios in the same form, or document if they're not in a form.\\n  //\\n  // We also only want radios which have aria-controls, as they support conditional reveals.\\n  var $allInputs = document.querySelectorAll('input[type=\\\"radio\\\"][aria-controls]');\\n  nodeListForEach($allInputs, function ($input) {\\n    // Only inputs with the same form owner should change.\\n    var hasSameFormOwner = ($input.form === $clickedInput.form);\\n\\n    // In radios, only radios with the same name will affect each other.\\n    var hasSameName = ($input.name === $clickedInput.name);\\n    if (hasSameName && hasSameFormOwner) {\\n      this.setAttributes($input);\\n    }\\n  }.bind(this));\\n};\\n\\n(function(undefined) {\\n\\n    // Detection from https://github.com/Financial-Times/polyfill-service/pull/1062/files#diff-b09a5d2acf3314b46a6c8f8d0c31b85c\\n    var detect = (\\n      'Element' in this && \\\"nextElementSibling\\\" in document.documentElement\\n    );\\n\\n    if (detect) return\\n\\n\\n    (function (global) {\\n\\n      // There is no polyfill in polyfill-library (https://github.com/Financial-Times/polyfill-library/issues/338)\\n      // So we source this from https://github.com/Alhadis/Snippets/blob/e09b4dfb7ffc9e250bc28319051e39ead3e5f70a/js/polyfills/IE8-child-elements.js#L28-L33\\n      Object.defineProperty(Element.prototype, \\\"nextElementSibling\\\", {\\n        get: function(){\\n          var el = this.nextSibling;\\n          while (el && el.nodeType !== 1) { el = el.nextSibling; }\\n          return el;\\n        }\\n      });\\n\\n    }(this));\\n\\n}).call('object' === typeof window && window || 'object' === typeof self && self || 'object' === typeof global && global || {});\\n\\n(function(undefined) {\\n\\n    // Detection from https://github.com/Financial-Times/polyfill-service/pull/1062/files#diff-a162235fbc9c0dd40d4032265f44942e\\n    var detect = (\\n      'Element' in this && 'previousElementSibling' in document.documentElement\\n    );\\n\\n    if (detect) return\\n\\n    (function (global) {\\n      // There is no polyfill in polyfill-library (https://github.com/Financial-Times/polyfill-library/issues/338)\\n      // So we source this from https://github.com/Alhadis/Snippets/blob/e09b4dfb7ffc9e250bc28319051e39ead3e5f70a/js/polyfills/IE8-child-elements.js#L35-L40\\n      Object.defineProperty(Element.prototype, 'previousElementSibling', {\\n        get: function(){\\n          var el = this.previousSibling;\\n          while (el && el.nodeType !== 1) { el = el.previousSibling; }\\n          return el;\\n        }\\n      });\\n\\n    }(this));\\n\\n}).call('object' === typeof window && window || 'object' === typeof self && self || 'object' === typeof global && global || {});\\n\\nfunction Tabs ($module) {\\n  this.$module = $module;\\n  this.$tabs = $module.querySelectorAll('.govuk-tabs__tab');\\n\\n  this.keys = { left: 37, right: 39, up: 38, down: 40 };\\n  this.jsHiddenClass = 'govuk-tabs__panel--hidden';\\n}\\n\\nTabs.prototype.init = function () {\\n  if (typeof window.matchMedia === 'function') {\\n    this.setupResponsiveChecks();\\n  } else {\\n    this.setup();\\n  }\\n};\\n\\nTabs.prototype.setupResponsiveChecks = function () {\\n  this.mql = window.matchMedia('(min-width: 40.0625em)');\\n  this.mql.addListener(this.checkMode.bind(this));\\n  this.checkMode();\\n};\\n\\nTabs.prototype.checkMode = function () {\\n  if (this.mql.matches) {\\n    this.setup();\\n  } else {\\n    this.teardown();\\n  }\\n};\\n\\nTabs.prototype.setup = function () {\\n  var $module = this.$module;\\n  var $tabs = this.$tabs;\\n  var $tabList = $module.querySelector('.govuk-tabs__list');\\n  var $tabListItems = $module.querySelectorAll('.govuk-tabs__list-item');\\n\\n  if (!$tabs || !$tabList || !$tabListItems) {\\n    return\\n  }\\n\\n  $tabList.setAttribute('role', 'tablist');\\n\\n  nodeListForEach($tabListItems, function ($item) {\\n    $item.setAttribute('role', 'presentation');\\n  });\\n\\n  nodeListForEach($tabs, function ($tab) {\\n    // Set HTML attributes\\n    this.setAttributes($tab);\\n\\n    // Save bounded functions to use when removing event listeners during teardown\\n    $tab.boundTabClick = this.onTabClick.bind(this);\\n    $tab.boundTabKeydown = this.onTabKeydown.bind(this);\\n\\n    // Handle events\\n    $tab.addEventListener('click', $tab.boundTabClick, true);\\n    $tab.addEventListener('keydown', $tab.boundTabKeydown, true);\\n\\n    // Remove old active panels\\n    this.hideTab($tab);\\n  }.bind(this));\\n\\n  // Show either the active tab according to the URL's hash or the first tab\\n  var $activeTab = this.getTab(window.location.hash) || this.$tabs[0];\\n  this.showTab($activeTab);\\n\\n  // Handle hashchange events\\n  $module.boundOnHashChange = this.onHashChange.bind(this);\\n  window.addEventListener('hashchange', $module.boundOnHashChange, true);\\n};\\n\\nTabs.prototype.teardown = function () {\\n  var $module = this.$module;\\n  var $tabs = this.$tabs;\\n  var $tabList = $module.querySelector('.govuk-tabs__list');\\n  var $tabListItems = $module.querySelectorAll('.govuk-tabs__list-item');\\n\\n  if (!$tabs || !$tabList || !$tabListItems) {\\n    return\\n  }\\n\\n  $tabList.removeAttribute('role');\\n\\n  nodeListForEach($tabListItems, function ($item) {\\n    $item.removeAttribute('role', 'presentation');\\n  });\\n\\n  nodeListForEach($tabs, function ($tab) {\\n    // Remove events\\n    $tab.removeEventListener('click', $tab.boundTabClick, true);\\n    $tab.removeEventListener('keydown', $tab.boundTabKeydown, true);\\n\\n    // Unset HTML attributes\\n    this.unsetAttributes($tab);\\n  }.bind(this));\\n\\n  // Remove hashchange event handler\\n  window.removeEventListener('hashchange', $module.boundOnHashChange, true);\\n};\\n\\nTabs.prototype.onHashChange = function (e) {\\n  var hash = window.location.hash;\\n  var $tabWithHash = this.getTab(hash);\\n  if (!$tabWithHash) {\\n    return\\n  }\\n\\n  // Prevent changing the hash\\n  if (this.changingHash) {\\n    this.changingHash = false;\\n    return\\n  }\\n\\n  // Show either the active tab according to the URL's hash or the first tab\\n  var $previousTab = this.getCurrentTab();\\n\\n  this.hideTab($previousTab);\\n  this.showTab($tabWithHash);\\n  $tabWithHash.focus();\\n};\\n\\nTabs.prototype.hideTab = function ($tab) {\\n  this.unhighlightTab($tab);\\n  this.hidePanel($tab);\\n};\\n\\nTabs.prototype.showTab = function ($tab) {\\n  this.highlightTab($tab);\\n  this.showPanel($tab);\\n};\\n\\nTabs.prototype.getTab = function (hash) {\\n  return this.$module.querySelector('.govuk-tabs__tab[href=\\\"' + hash + '\\\"]')\\n};\\n\\nTabs.prototype.setAttributes = function ($tab) {\\n  // set tab attributes\\n  var panelId = this.getHref($tab).slice(1);\\n  $tab.setAttribute('id', 'tab_' + panelId);\\n  $tab.setAttribute('role', 'tab');\\n  $tab.setAttribute('aria-controls', panelId);\\n  $tab.setAttribute('aria-selected', 'false');\\n  $tab.setAttribute('tabindex', '-1');\\n\\n  // set panel attributes\\n  var $panel = this.getPanel($tab);\\n  $panel.setAttribute('role', 'tabpanel');\\n  $panel.setAttribute('aria-labelledby', $tab.id);\\n  $panel.classList.add(this.jsHiddenClass);\\n};\\n\\nTabs.prototype.unsetAttributes = function ($tab) {\\n  // unset tab attributes\\n  $tab.removeAttribute('id');\\n  $tab.removeAttribute('role');\\n  $tab.removeAttribute('aria-controls');\\n  $tab.removeAttribute('aria-selected');\\n  $tab.removeAttribute('tabindex');\\n\\n  // unset panel attributes\\n  var $panel = this.getPanel($tab);\\n  $panel.removeAttribute('role');\\n  $panel.removeAttribute('aria-labelledby');\\n  $panel.classList.remove(this.jsHiddenClass);\\n};\\n\\nTabs.prototype.onTabClick = function (e) {\\n  if (!e.target.classList.contains('govuk-tabs__tab')) {\\n  // Allow events on child DOM elements to bubble up to tab parent\\n    return false\\n  }\\n  e.preventDefault();\\n  var $newTab = e.target;\\n  var $currentTab = this.getCurrentTab();\\n  this.hideTab($currentTab);\\n  this.showTab($newTab);\\n  this.createHistoryEntry($newTab);\\n};\\n\\nTabs.prototype.createHistoryEntry = function ($tab) {\\n  var $panel = this.getPanel($tab);\\n\\n  // Save and restore the id\\n  // so the page doesn't jump when a user clicks a tab (which changes the hash)\\n  var id = $panel.id;\\n  $panel.id = '';\\n  this.changingHash = true;\\n  window.location.hash = this.getHref($tab).slice(1);\\n  $panel.id = id;\\n};\\n\\nTabs.prototype.onTabKeydown = function (e) {\\n  switch (e.keyCode) {\\n    case this.keys.left:\\n    case this.keys.up:\\n      this.activatePreviousTab();\\n      e.preventDefault();\\n      break\\n    case this.keys.right:\\n    case this.keys.down:\\n      this.activateNextTab();\\n      e.preventDefault();\\n      break\\n  }\\n};\\n\\nTabs.prototype.activateNextTab = function () {\\n  var currentTab = this.getCurrentTab();\\n  var nextTabListItem = currentTab.parentNode.nextElementSibling;\\n  if (nextTabListItem) {\\n    var nextTab = nextTabListItem.querySelector('.govuk-tabs__tab');\\n  }\\n  if (nextTab) {\\n    this.hideTab(currentTab);\\n    this.showTab(nextTab);\\n    nextTab.focus();\\n    this.createHistoryEntry(nextTab);\\n  }\\n};\\n\\nTabs.prototype.activatePreviousTab = function () {\\n  var currentTab = this.getCurrentTab();\\n  var previousTabListItem = currentTab.parentNode.previousElementSibling;\\n  if (previousTabListItem) {\\n    var previousTab = previousTabListItem.querySelector('.govuk-tabs__tab');\\n  }\\n  if (previousTab) {\\n    this.hideTab(currentTab);\\n    this.showTab(previousTab);\\n    previousTab.focus();\\n    this.createHistoryEntry(previousTab);\\n  }\\n};\\n\\nTabs.prototype.getPanel = function ($tab) {\\n  var $panel = this.$module.querySelector(this.getHref($tab));\\n  return $panel\\n};\\n\\nTabs.prototype.showPanel = function ($tab) {\\n  var $panel = this.getPanel($tab);\\n  $panel.classList.remove(this.jsHiddenClass);\\n};\\n\\nTabs.prototype.hidePanel = function (tab) {\\n  var $panel = this.getPanel(tab);\\n  $panel.classList.add(this.jsHiddenClass);\\n};\\n\\nTabs.prototype.unhighlightTab = function ($tab) {\\n  $tab.setAttribute('aria-selected', 'false');\\n  $tab.parentNode.classList.remove('govuk-tabs__list-item--selected');\\n  $tab.setAttribute('tabindex', '-1');\\n};\\n\\nTabs.prototype.highlightTab = function ($tab) {\\n  $tab.setAttribute('aria-selected', 'true');\\n  $tab.parentNode.classList.add('govuk-tabs__list-item--selected');\\n  $tab.setAttribute('tabindex', '0');\\n};\\n\\nTabs.prototype.getCurrentTab = function () {\\n  return this.$module.querySelector('.govuk-tabs__list-item--selected .govuk-tabs__tab')\\n};\\n\\n// this is because IE doesn't always return the actual value but a relative full path\\n// should be a utility function most prob\\n// http://labs.thesedays.com/blog/2010/01/08/getting-the-href-value-with-jquery-in-ie/\\nTabs.prototype.getHref = function ($tab) {\\n  var href = $tab.getAttribute('href');\\n  var hash = href.slice(href.indexOf('#'), href.length);\\n  return hash\\n};\\n\\nfunction initAll (options) {\\n  // Set the options to an empty object by default if no options are passed.\\n  options = typeof options !== 'undefined' ? options : {};\\n\\n  // Allow the user to initialise GOV.UK Frontend in only certain sections of the page\\n  // Defaults to the entire document if nothing is set.\\n  var scope = typeof options.scope !== 'undefined' ? options.scope : document;\\n\\n  var $buttons = scope.querySelectorAll('[data-module=\\\"govuk-button\\\"]');\\n  nodeListForEach($buttons, function ($button) {\\n    new Button($button).init();\\n  });\\n\\n  var $accordions = scope.querySelectorAll('[data-module=\\\"govuk-accordion\\\"]');\\n  nodeListForEach($accordions, function ($accordion) {\\n    new Accordion($accordion).init();\\n  });\\n\\n  var $details = scope.querySelectorAll('[data-module=\\\"govuk-details\\\"]');\\n  nodeListForEach($details, function ($detail) {\\n    new Details($detail).init();\\n  });\\n\\n  var $characterCounts = scope.querySelectorAll('[data-module=\\\"govuk-character-count\\\"]');\\n  nodeListForEach($characterCounts, function ($characterCount) {\\n    new CharacterCount($characterCount).init();\\n  });\\n\\n  var $checkboxes = scope.querySelectorAll('[data-module=\\\"govuk-checkboxes\\\"]');\\n  nodeListForEach($checkboxes, function ($checkbox) {\\n    new Checkboxes($checkbox).init();\\n  });\\n\\n  // Find first error summary module to enhance.\\n  var $errorSummary = scope.querySelector('[data-module=\\\"govuk-error-summary\\\"]');\\n  new ErrorSummary($errorSummary).init();\\n\\n  // Find first header module to enhance.\\n  var $toggleButton = scope.querySelector('[data-module=\\\"govuk-header\\\"]');\\n  new Header($toggleButton).init();\\n\\n  var $radios = scope.querySelectorAll('[data-module=\\\"govuk-radios\\\"]');\\n  nodeListForEach($radios, function ($radio) {\\n    new Radios($radio).init();\\n  });\\n\\n  var $tabs = scope.querySelectorAll('[data-module=\\\"govuk-tabs\\\"]');\\n  nodeListForEach($tabs, function ($tabs) {\\n    new Tabs($tabs).init();\\n  });\\n}\\n\\nexports.initAll = initAll;\\nexports.Accordion = Accordion;\\nexports.Button = Button;\\nexports.Details = Details;\\nexports.CharacterCount = CharacterCount;\\nexports.Checkboxes = Checkboxes;\\nexports.ErrorSummary = ErrorSummary;\\nexports.Header = Header;\\nexports.Radios = Radios;\\nexports.Tabs = Tabs;\\n\\n})));\\n\\n/* WEBPACK VAR INJECTION */}.call(this, __webpack_require__(/*! ./../../webpack/buildin/global.js */ \\\"./node_modules/webpack/buildin/global.js\\\")))\\n\\n//# sourceURL=webpack://LBHFrontend/./node_modules/govuk-frontend/govuk/all.js?\");\n\n/***/ }),\n\n/***/ \"./node_modules/govuk-frontend/govuk/components/accordion/accordion.js\":\n/*!*****************************************************************************!*\\\n  !*** ./node_modules/govuk-frontend/govuk/components/accordion/accordion.js ***!\n  \\*****************************************************************************/\n/*! no static exports found */\n/***/ (function(module, exports, __webpack_require__) {\n\neval(\"/* WEBPACK VAR INJECTION */(function(global) {(function (global, factory) {\\n\\t true ? module.exports = factory() :\\n\\tundefined;\\n}(this, (function () { 'use strict';\\n\\n/**\\n * TODO: Ideally this would be a NodeList.prototype.forEach polyfill\\n * This seems to fail in IE8, requires more investigation.\\n * See: https://github.com/imagitama/nodelist-foreach-polyfill\\n */\\nfunction nodeListForEach (nodes, callback) {\\n  if (window.NodeList.prototype.forEach) {\\n    return nodes.forEach(callback)\\n  }\\n  for (var i = 0; i < nodes.length; i++) {\\n    callback.call(window, nodes[i], i, nodes);\\n  }\\n}\\n\\n(function(undefined) {\\n\\n// Detection from https://github.com/Financial-Times/polyfill-service/blob/master/packages/polyfill-library/polyfills/Object/defineProperty/detect.js\\nvar detect = (\\n  // In IE8, defineProperty could only act on DOM elements, so full support\\n  // for the feature requires the ability to set a property on an arbitrary object\\n  'defineProperty' in Object && (function() {\\n  \\ttry {\\n  \\t\\tvar a = {};\\n  \\t\\tObject.defineProperty(a, 'test', {value:42});\\n  \\t\\treturn true;\\n  \\t} catch(e) {\\n  \\t\\treturn false\\n  \\t}\\n  }())\\n);\\n\\nif (detect) return\\n\\n// Polyfill from https://cdn.polyfill.io/v2/polyfill.js?features=Object.defineProperty&flags=always\\n(function (nativeDefineProperty) {\\n\\n\\tvar supportsAccessors = Object.prototype.hasOwnProperty('__defineGetter__');\\n\\tvar ERR_ACCESSORS_NOT_SUPPORTED = 'Getters & setters cannot be defined on this javascript engine';\\n\\tvar ERR_VALUE_ACCESSORS = 'A property cannot both have accessors and be writable or have a value';\\n\\n\\tObject.defineProperty = function defineProperty(object, property, descriptor) {\\n\\n\\t\\t// Where native support exists, assume it\\n\\t\\tif (nativeDefineProperty && (object === window || object === document || object === Element.prototype || object instanceof Element)) {\\n\\t\\t\\treturn nativeDefineProperty(object, property, descriptor);\\n\\t\\t}\\n\\n\\t\\tif (object === null || !(object instanceof Object || typeof object === 'object')) {\\n\\t\\t\\tthrow new TypeError('Object.defineProperty called on non-object');\\n\\t\\t}\\n\\n\\t\\tif (!(descriptor instanceof Object)) {\\n\\t\\t\\tthrow new TypeError('Property description must be an object');\\n\\t\\t}\\n\\n\\t\\tvar propertyString = String(property);\\n\\t\\tvar hasValueOrWritable = 'value' in descriptor || 'writable' in descriptor;\\n\\t\\tvar getterType = 'get' in descriptor && typeof descriptor.get;\\n\\t\\tvar setterType = 'set' in descriptor && typeof descriptor.set;\\n\\n\\t\\t// handle descriptor.get\\n\\t\\tif (getterType) {\\n\\t\\t\\tif (getterType !== 'function') {\\n\\t\\t\\t\\tthrow new TypeError('Getter must be a function');\\n\\t\\t\\t}\\n\\t\\t\\tif (!supportsAccessors) {\\n\\t\\t\\t\\tthrow new TypeError(ERR_ACCESSORS_NOT_SUPPORTED);\\n\\t\\t\\t}\\n\\t\\t\\tif (hasValueOrWritable) {\\n\\t\\t\\t\\tthrow new TypeError(ERR_VALUE_ACCESSORS);\\n\\t\\t\\t}\\n\\t\\t\\tObject.__defineGetter__.call(object, propertyString, descriptor.get);\\n\\t\\t} else {\\n\\t\\t\\tobject[propertyString] = descriptor.value;\\n\\t\\t}\\n\\n\\t\\t// handle descriptor.set\\n\\t\\tif (setterType) {\\n\\t\\t\\tif (setterType !== 'function') {\\n\\t\\t\\t\\tthrow new TypeError('Setter must be a function');\\n\\t\\t\\t}\\n\\t\\t\\tif (!supportsAccessors) {\\n\\t\\t\\t\\tthrow new TypeError(ERR_ACCESSORS_NOT_SUPPORTED);\\n\\t\\t\\t}\\n\\t\\t\\tif (hasValueOrWritable) {\\n\\t\\t\\t\\tthrow new TypeError(ERR_VALUE_ACCESSORS);\\n\\t\\t\\t}\\n\\t\\t\\tObject.__defineSetter__.call(object, propertyString, descriptor.set);\\n\\t\\t}\\n\\n\\t\\t// OK to define value unconditionally - if a getter has been specified as well, an error would be thrown above\\n\\t\\tif ('value' in descriptor) {\\n\\t\\t\\tobject[propertyString] = descriptor.value;\\n\\t\\t}\\n\\n\\t\\treturn object;\\n\\t};\\n}(Object.defineProperty));\\n})\\n.call('object' === typeof window && window || 'object' === typeof self && self || 'object' === typeof global && global || {});\\n\\n(function(undefined) {\\n  // Detection from https://github.com/Financial-Times/polyfill-service/blob/master/packages/polyfill-library/polyfills/Function/prototype/bind/detect.js\\n  var detect = 'bind' in Function.prototype;\\n\\n  if (detect) return\\n\\n  // Polyfill from https://cdn.polyfill.io/v2/polyfill.js?features=Function.prototype.bind&flags=always\\n  Object.defineProperty(Function.prototype, 'bind', {\\n      value: function bind(that) { // .length is 1\\n          // add necessary es5-shim utilities\\n          var $Array = Array;\\n          var $Object = Object;\\n          var ObjectPrototype = $Object.prototype;\\n          var ArrayPrototype = $Array.prototype;\\n          var Empty = function Empty() {};\\n          var to_string = ObjectPrototype.toString;\\n          var hasToStringTag = typeof Symbol === 'function' && typeof Symbol.toStringTag === 'symbol';\\n          var isCallable; /* inlined from https://npmjs.com/is-callable */ var fnToStr = Function.prototype.toString, tryFunctionObject = function tryFunctionObject(value) { try { fnToStr.call(value); return true; } catch (e) { return false; } }, fnClass = '[object Function]', genClass = '[object GeneratorFunction]'; isCallable = function isCallable(value) { if (typeof value !== 'function') { return false; } if (hasToStringTag) { return tryFunctionObject(value); } var strClass = to_string.call(value); return strClass === fnClass || strClass === genClass; };\\n          var array_slice = ArrayPrototype.slice;\\n          var array_concat = ArrayPrototype.concat;\\n          var array_push = ArrayPrototype.push;\\n          var max = Math.max;\\n          // /add necessary es5-shim utilities\\n\\n          // 1. Let Target be the this value.\\n          var target = this;\\n          // 2. If IsCallable(Target) is false, throw a TypeError exception.\\n          if (!isCallable(target)) {\\n              throw new TypeError('Function.prototype.bind called on incompatible ' + target);\\n          }\\n          // 3. Let A be a new (possibly empty) internal list of all of the\\n          //   argument values provided after thisArg (arg1, arg2 etc), in order.\\n          // XXX slicedArgs will stand in for \\\"A\\\" if used\\n          var args = array_slice.call(arguments, 1); // for normal call\\n          // 4. Let F be a new native ECMAScript object.\\n          // 11. Set the [[Prototype]] internal property of F to the standard\\n          //   built-in Function prototype object as specified in 15.3.3.1.\\n          // 12. Set the [[Call]] internal property of F as described in\\n          //   15.3.4.5.1.\\n          // 13. Set the [[Construct]] internal property of F as described in\\n          //   15.3.4.5.2.\\n          // 14. Set the [[HasInstance]] internal property of F as described in\\n          //   15.3.4.5.3.\\n          var bound;\\n          var binder = function () {\\n\\n              if (this instanceof bound) {\\n                  // 15.3.4.5.2 [[Construct]]\\n                  // When the [[Construct]] internal method of a function object,\\n                  // F that was created using the bind function is called with a\\n                  // list of arguments ExtraArgs, the following steps are taken:\\n                  // 1. Let target be the value of F's [[TargetFunction]]\\n                  //   internal property.\\n                  // 2. If target has no [[Construct]] internal method, a\\n                  //   TypeError exception is thrown.\\n                  // 3. Let boundArgs be the value of F's [[BoundArgs]] internal\\n                  //   property.\\n                  // 4. Let args be a new list containing the same values as the\\n                  //   list boundArgs in the same order followed by the same\\n                  //   values as the list ExtraArgs in the same order.\\n                  // 5. Return the result of calling the [[Construct]] internal\\n                  //   method of target providing args as the arguments.\\n\\n                  var result = target.apply(\\n                      this,\\n                      array_concat.call(args, array_slice.call(arguments))\\n                  );\\n                  if ($Object(result) === result) {\\n                      return result;\\n                  }\\n                  return this;\\n\\n              } else {\\n                  // 15.3.4.5.1 [[Call]]\\n                  // When the [[Call]] internal method of a function object, F,\\n                  // which was created using the bind function is called with a\\n                  // this value and a list of arguments ExtraArgs, the following\\n                  // steps are taken:\\n                  // 1. Let boundArgs be the value of F's [[BoundArgs]] internal\\n                  //   property.\\n                  // 2. Let boundThis be the value of F's [[BoundThis]] internal\\n                  //   property.\\n                  // 3. Let target be the value of F's [[TargetFunction]] internal\\n                  //   property.\\n                  // 4. Let args be a new list containing the same values as the\\n                  //   list boundArgs in the same order followed by the same\\n                  //   values as the list ExtraArgs in the same order.\\n                  // 5. Return the result of calling the [[Call]] internal method\\n                  //   of target providing boundThis as the this value and\\n                  //   providing args as the arguments.\\n\\n                  // equiv: target.call(this, ...boundArgs, ...args)\\n                  return target.apply(\\n                      that,\\n                      array_concat.call(args, array_slice.call(arguments))\\n                  );\\n\\n              }\\n\\n          };\\n\\n          // 15. If the [[Class]] internal property of Target is \\\"Function\\\", then\\n          //     a. Let L be the length property of Target minus the length of A.\\n          //     b. Set the length own property of F to either 0 or L, whichever is\\n          //       larger.\\n          // 16. Else set the length own property of F to 0.\\n\\n          var boundLength = max(0, target.length - args.length);\\n\\n          // 17. Set the attributes of the length own property of F to the values\\n          //   specified in 15.3.5.1.\\n          var boundArgs = [];\\n          for (var i = 0; i < boundLength; i++) {\\n              array_push.call(boundArgs, '$' + i);\\n          }\\n\\n          // XXX Build a dynamic function with desired amount of arguments is the only\\n          // way to set the length property of a function.\\n          // In environments where Content Security Policies enabled (Chrome extensions,\\n          // for ex.) all use of eval or Function costructor throws an exception.\\n          // However in all of these environments Function.prototype.bind exists\\n          // and so this code will never be executed.\\n          bound = Function('binder', 'return function (' + boundArgs.join(',') + '){ return binder.apply(this, arguments); }')(binder);\\n\\n          if (target.prototype) {\\n              Empty.prototype = target.prototype;\\n              bound.prototype = new Empty();\\n              // Clean up dangling references.\\n              Empty.prototype = null;\\n          }\\n\\n          // TODO\\n          // 18. Set the [[Extensible]] internal property of F to true.\\n\\n          // TODO\\n          // 19. Let thrower be the [[ThrowTypeError]] function Object (13.2.3).\\n          // 20. Call the [[DefineOwnProperty]] internal method of F with\\n          //   arguments \\\"caller\\\", PropertyDescriptor {[[Get]]: thrower, [[Set]]:\\n          //   thrower, [[Enumerable]]: false, [[Configurable]]: false}, and\\n          //   false.\\n          // 21. Call the [[DefineOwnProperty]] internal method of F with\\n          //   arguments \\\"arguments\\\", PropertyDescriptor {[[Get]]: thrower,\\n          //   [[Set]]: thrower, [[Enumerable]]: false, [[Configurable]]: false},\\n          //   and false.\\n\\n          // TODO\\n          // NOTE Function objects created using Function.prototype.bind do not\\n          // have a prototype property or the [[Code]], [[FormalParameters]], and\\n          // [[Scope]] internal properties.\\n          // XXX can't delete prototype in pure-js.\\n\\n          // 22. Return F.\\n          return bound;\\n      }\\n  });\\n})\\n.call('object' === typeof window && window || 'object' === typeof self && self || 'object' === typeof global && global || {});\\n\\n(function(undefined) {\\n\\n    // Detection from https://raw.githubusercontent.com/Financial-Times/polyfill-service/master/packages/polyfill-library/polyfills/DOMTokenList/detect.js\\n    var detect = (\\n      'DOMTokenList' in this && (function (x) {\\n        return 'classList' in x ? !x.classList.toggle('x', false) && !x.className : true;\\n      })(document.createElement('x'))\\n    );\\n\\n    if (detect) return\\n\\n    // Polyfill from https://raw.githubusercontent.com/Financial-Times/polyfill-service/master/packages/polyfill-library/polyfills/DOMTokenList/polyfill.js\\n    (function (global) {\\n      var nativeImpl = \\\"DOMTokenList\\\" in global && global.DOMTokenList;\\n\\n      if (\\n          !nativeImpl ||\\n          (\\n            !!document.createElementNS &&\\n            !!document.createElementNS('http://www.w3.org/2000/svg', 'svg') &&\\n            !(document.createElementNS(\\\"http://www.w3.org/2000/svg\\\", \\\"svg\\\").classList instanceof DOMTokenList)\\n          )\\n        ) {\\n        global.DOMTokenList = (function() { // eslint-disable-line no-unused-vars\\n          var dpSupport = true;\\n          var defineGetter = function (object, name, fn, configurable) {\\n            if (Object.defineProperty)\\n              Object.defineProperty(object, name, {\\n                configurable: false === dpSupport ? true : !!configurable,\\n                get: fn\\n              });\\n\\n            else object.__defineGetter__(name, fn);\\n          };\\n\\n          /** Ensure the browser allows Object.defineProperty to be used on native JavaScript objects. */\\n          try {\\n            defineGetter({}, \\\"support\\\");\\n          }\\n          catch (e) {\\n            dpSupport = false;\\n          }\\n\\n\\n          var _DOMTokenList = function (el, prop) {\\n            var that = this;\\n            var tokens = [];\\n            var tokenMap = {};\\n            var length = 0;\\n            var maxLength = 0;\\n            var addIndexGetter = function (i) {\\n              defineGetter(that, i, function () {\\n                preop();\\n                return tokens[i];\\n              }, false);\\n\\n            };\\n            var reindex = function () {\\n\\n              /** Define getter functions for array-like access to the tokenList's contents. */\\n              if (length >= maxLength)\\n                for (; maxLength < length; ++maxLength) {\\n                  addIndexGetter(maxLength);\\n                }\\n            };\\n\\n            /** Helper function called at the start of each class method. Internal use only. */\\n            var preop = function () {\\n              var error;\\n              var i;\\n              var args = arguments;\\n              var rSpace = /\\\\s+/;\\n\\n              /** Validate the token/s passed to an instance method, if any. */\\n              if (args.length)\\n                for (i = 0; i < args.length; ++i)\\n                  if (rSpace.test(args[i])) {\\n                    error = new SyntaxError('String \\\"' + args[i] + '\\\" ' + \\\"contains\\\" + ' an invalid character');\\n                    error.code = 5;\\n                    error.name = \\\"InvalidCharacterError\\\";\\n                    throw error;\\n                  }\\n\\n\\n              /** Split the new value apart by whitespace*/\\n              if (typeof el[prop] === \\\"object\\\") {\\n                tokens = (\\\"\\\" + el[prop].baseVal).replace(/^\\\\s+|\\\\s+$/g, \\\"\\\").split(rSpace);\\n              } else {\\n                tokens = (\\\"\\\" + el[prop]).replace(/^\\\\s+|\\\\s+$/g, \\\"\\\").split(rSpace);\\n              }\\n\\n              /** Avoid treating blank strings as single-item token lists */\\n              if (\\\"\\\" === tokens[0]) tokens = [];\\n\\n              /** Repopulate the internal token lists */\\n              tokenMap = {};\\n              for (i = 0; i < tokens.length; ++i)\\n                tokenMap[tokens[i]] = true;\\n              length = tokens.length;\\n              reindex();\\n            };\\n\\n            /** Populate our internal token list if the targeted attribute of the subject element isn't empty. */\\n            preop();\\n\\n            /** Return the number of tokens in the underlying string. Read-only. */\\n            defineGetter(that, \\\"length\\\", function () {\\n              preop();\\n              return length;\\n            });\\n\\n            /** Override the default toString/toLocaleString methods to return a space-delimited list of tokens when typecast. */\\n            that.toLocaleString =\\n              that.toString = function () {\\n                preop();\\n                return tokens.join(\\\" \\\");\\n              };\\n\\n            that.item = function (idx) {\\n              preop();\\n              return tokens[idx];\\n            };\\n\\n            that.contains = function (token) {\\n              preop();\\n              return !!tokenMap[token];\\n            };\\n\\n            that.add = function () {\\n              preop.apply(that, args = arguments);\\n\\n              for (var args, token, i = 0, l = args.length; i < l; ++i) {\\n                token = args[i];\\n                if (!tokenMap[token]) {\\n                  tokens.push(token);\\n                  tokenMap[token] = true;\\n                }\\n              }\\n\\n              /** Update the targeted attribute of the attached element if the token list's changed. */\\n              if (length !== tokens.length) {\\n                length = tokens.length >>> 0;\\n                if (typeof el[prop] === \\\"object\\\") {\\n                  el[prop].baseVal = tokens.join(\\\" \\\");\\n                } else {\\n                  el[prop] = tokens.join(\\\" \\\");\\n                }\\n                reindex();\\n              }\\n            };\\n\\n            that.remove = function () {\\n              preop.apply(that, args = arguments);\\n\\n              /** Build a hash of token names to compare against when recollecting our token list. */\\n              for (var args, ignore = {}, i = 0, t = []; i < args.length; ++i) {\\n                ignore[args[i]] = true;\\n                delete tokenMap[args[i]];\\n              }\\n\\n              /** Run through our tokens list and reassign only those that aren't defined in the hash declared above. */\\n              for (i = 0; i < tokens.length; ++i)\\n                if (!ignore[tokens[i]]) t.push(tokens[i]);\\n\\n              tokens = t;\\n              length = t.length >>> 0;\\n\\n              /** Update the targeted attribute of the attached element. */\\n              if (typeof el[prop] === \\\"object\\\") {\\n                el[prop].baseVal = tokens.join(\\\" \\\");\\n              } else {\\n                el[prop] = tokens.join(\\\" \\\");\\n              }\\n              reindex();\\n            };\\n\\n            that.toggle = function (token, force) {\\n              preop.apply(that, [token]);\\n\\n              /** Token state's being forced. */\\n              if (undefined !== force) {\\n                if (force) {\\n                  that.add(token);\\n                  return true;\\n                } else {\\n                  that.remove(token);\\n                  return false;\\n                }\\n              }\\n\\n              /** Token already exists in tokenList. Remove it, and return FALSE. */\\n              if (tokenMap[token]) {\\n                that.remove(token);\\n                return false;\\n              }\\n\\n              /** Otherwise, add the token and return TRUE. */\\n              that.add(token);\\n              return true;\\n            };\\n\\n            return that;\\n          };\\n\\n          return _DOMTokenList;\\n        }());\\n      }\\n\\n      // Add second argument to native DOMTokenList.toggle() if necessary\\n      (function () {\\n        var e = document.createElement('span');\\n        if (!('classList' in e)) return;\\n        e.classList.toggle('x', false);\\n        if (!e.classList.contains('x')) return;\\n        e.classList.constructor.prototype.toggle = function toggle(token /*, force*/) {\\n          var force = arguments[1];\\n          if (force === undefined) {\\n            var add = !this.contains(token);\\n            this[add ? 'add' : 'remove'](token);\\n            return add;\\n          }\\n          force = !!force;\\n          this[force ? 'add' : 'remove'](token);\\n          return force;\\n        };\\n      }());\\n\\n      // Add multiple arguments to native DOMTokenList.add() if necessary\\n      (function () {\\n        var e = document.createElement('span');\\n        if (!('classList' in e)) return;\\n        e.classList.add('a', 'b');\\n        if (e.classList.contains('b')) return;\\n        var native = e.classList.constructor.prototype.add;\\n        e.classList.constructor.prototype.add = function () {\\n          var args = arguments;\\n          var l = arguments.length;\\n          for (var i = 0; i < l; i++) {\\n            native.call(this, args[i]);\\n          }\\n        };\\n      }());\\n\\n      // Add multiple arguments to native DOMTokenList.remove() if necessary\\n      (function () {\\n        var e = document.createElement('span');\\n        if (!('classList' in e)) return;\\n        e.classList.add('a');\\n        e.classList.add('b');\\n        e.classList.remove('a', 'b');\\n        if (!e.classList.contains('b')) return;\\n        var native = e.classList.constructor.prototype.remove;\\n        e.classList.constructor.prototype.remove = function () {\\n          var args = arguments;\\n          var l = arguments.length;\\n          for (var i = 0; i < l; i++) {\\n            native.call(this, args[i]);\\n          }\\n        };\\n      }());\\n\\n    }(this));\\n\\n}).call('object' === typeof window && window || 'object' === typeof self && self || 'object' === typeof global && global || {});\\n\\n(function(undefined) {\\n\\n// Detection from https://github.com/Financial-Times/polyfill-service/blob/master/packages/polyfill-library/polyfills/Document/detect.js\\nvar detect = (\\\"Document\\\" in this);\\n\\nif (detect) return\\n\\n// Polyfill from https://cdn.polyfill.io/v2/polyfill.js?features=Document&flags=always\\nif ((typeof WorkerGlobalScope === \\\"undefined\\\") && (typeof importScripts !== \\\"function\\\")) {\\n\\n\\tif (this.HTMLDocument) { // IE8\\n\\n\\t\\t// HTMLDocument is an extension of Document.  If the browser has HTMLDocument but not Document, the former will suffice as an alias for the latter.\\n\\t\\tthis.Document = this.HTMLDocument;\\n\\n\\t} else {\\n\\n\\t\\t// Create an empty function to act as the missing constructor for the document object, attach the document object as its prototype.  The function needs to be anonymous else it is hoisted and causes the feature detect to prematurely pass, preventing the assignments below being made.\\n\\t\\tthis.Document = this.HTMLDocument = document.constructor = (new Function('return function Document() {}')());\\n\\t\\tthis.Document.prototype = document;\\n\\t}\\n}\\n\\n\\n})\\n.call('object' === typeof window && window || 'object' === typeof self && self || 'object' === typeof global && global || {});\\n\\n(function(undefined) {\\n\\n// Detection from https://github.com/Financial-Times/polyfill-service/blob/master/packages/polyfill-library/polyfills/Element/detect.js\\nvar detect = ('Element' in this && 'HTMLElement' in this);\\n\\nif (detect) return\\n\\n// Polyfill from https://cdn.polyfill.io/v2/polyfill.js?features=Element&flags=always\\n(function () {\\n\\n\\t// IE8\\n\\tif (window.Element && !window.HTMLElement) {\\n\\t\\twindow.HTMLElement = window.Element;\\n\\t\\treturn;\\n\\t}\\n\\n\\t// create Element constructor\\n\\twindow.Element = window.HTMLElement = new Function('return function Element() {}')();\\n\\n\\t// generate sandboxed iframe\\n\\tvar vbody = document.appendChild(document.createElement('body'));\\n\\tvar frame = vbody.appendChild(document.createElement('iframe'));\\n\\n\\t// use sandboxed iframe to replicate Element functionality\\n\\tvar frameDocument = frame.contentWindow.document;\\n\\tvar prototype = Element.prototype = frameDocument.appendChild(frameDocument.createElement('*'));\\n\\tvar cache = {};\\n\\n\\t// polyfill Element.prototype on an element\\n\\tvar shiv = function (element, deep) {\\n\\t\\tvar\\n\\t\\tchildNodes = element.childNodes || [],\\n\\t\\tindex = -1,\\n\\t\\tkey, value, childNode;\\n\\n\\t\\tif (element.nodeType === 1 && element.constructor !== Element) {\\n\\t\\t\\telement.constructor = Element;\\n\\n\\t\\t\\tfor (key in cache) {\\n\\t\\t\\t\\tvalue = cache[key];\\n\\t\\t\\t\\telement[key] = value;\\n\\t\\t\\t}\\n\\t\\t}\\n\\n\\t\\twhile (childNode = deep && childNodes[++index]) {\\n\\t\\t\\tshiv(childNode, deep);\\n\\t\\t}\\n\\n\\t\\treturn element;\\n\\t};\\n\\n\\tvar elements = document.getElementsByTagName('*');\\n\\tvar nativeCreateElement = document.createElement;\\n\\tvar interval;\\n\\tvar loopLimit = 100;\\n\\n\\tprototype.attachEvent('onpropertychange', function (event) {\\n\\t\\tvar\\n\\t\\tpropertyName = event.propertyName,\\n\\t\\tnonValue = !cache.hasOwnProperty(propertyName),\\n\\t\\tnewValue = prototype[propertyName],\\n\\t\\toldValue = cache[propertyName],\\n\\t\\tindex = -1,\\n\\t\\telement;\\n\\n\\t\\twhile (element = elements[++index]) {\\n\\t\\t\\tif (element.nodeType === 1) {\\n\\t\\t\\t\\tif (nonValue || element[propertyName] === oldValue) {\\n\\t\\t\\t\\t\\telement[propertyName] = newValue;\\n\\t\\t\\t\\t}\\n\\t\\t\\t}\\n\\t\\t}\\n\\n\\t\\tcache[propertyName] = newValue;\\n\\t});\\n\\n\\tprototype.constructor = Element;\\n\\n\\tif (!prototype.hasAttribute) {\\n\\t\\t// <Element>.hasAttribute\\n\\t\\tprototype.hasAttribute = function hasAttribute(name) {\\n\\t\\t\\treturn this.getAttribute(name) !== null;\\n\\t\\t};\\n\\t}\\n\\n\\t// Apply Element prototype to the pre-existing DOM as soon as the body element appears.\\n\\tfunction bodyCheck() {\\n\\t\\tif (!(loopLimit--)) clearTimeout(interval);\\n\\t\\tif (document.body && !document.body.prototype && /(complete|interactive)/.test(document.readyState)) {\\n\\t\\t\\tshiv(document, true);\\n\\t\\t\\tif (interval && document.body.prototype) clearTimeout(interval);\\n\\t\\t\\treturn (!!document.body.prototype);\\n\\t\\t}\\n\\t\\treturn false;\\n\\t}\\n\\tif (!bodyCheck()) {\\n\\t\\tdocument.onreadystatechange = bodyCheck;\\n\\t\\tinterval = setInterval(bodyCheck, 25);\\n\\t}\\n\\n\\t// Apply to any new elements created after load\\n\\tdocument.createElement = function createElement(nodeName) {\\n\\t\\tvar element = nativeCreateElement(String(nodeName).toLowerCase());\\n\\t\\treturn shiv(element);\\n\\t};\\n\\n\\t// remove sandboxed iframe\\n\\tdocument.removeChild(vbody);\\n}());\\n\\n})\\n.call('object' === typeof window && window || 'object' === typeof self && self || 'object' === typeof global && global || {});\\n\\n(function(undefined) {\\n\\n    // Detection from https://raw.githubusercontent.com/Financial-Times/polyfill-service/8717a9e04ac7aff99b4980fbedead98036b0929a/packages/polyfill-library/polyfills/Element/prototype/classList/detect.js\\n    var detect = (\\n      'document' in this && \\\"classList\\\" in document.documentElement && 'Element' in this && 'classList' in Element.prototype && (function () {\\n        var e = document.createElement('span');\\n        e.classList.add('a', 'b');\\n        return e.classList.contains('b');\\n      }())\\n    );\\n\\n    if (detect) return\\n\\n    // Polyfill from https://cdn.polyfill.io/v2/polyfill.js?features=Element.prototype.classList&flags=always\\n    (function (global) {\\n      var dpSupport = true;\\n      var defineGetter = function (object, name, fn, configurable) {\\n        if (Object.defineProperty)\\n          Object.defineProperty(object, name, {\\n            configurable: false === dpSupport ? true : !!configurable,\\n            get: fn\\n          });\\n\\n        else object.__defineGetter__(name, fn);\\n      };\\n      /** Ensure the browser allows Object.defineProperty to be used on native JavaScript objects. */\\n      try {\\n        defineGetter({}, \\\"support\\\");\\n      }\\n      catch (e) {\\n        dpSupport = false;\\n      }\\n      /** Polyfills a property with a DOMTokenList */\\n      var addProp = function (o, name, attr) {\\n\\n        defineGetter(o.prototype, name, function () {\\n          var tokenList;\\n\\n          var THIS = this,\\n\\n          /** Prevent this from firing twice for some reason. What the hell, IE. */\\n          gibberishProperty = \\\"__defineGetter__\\\" + \\\"DEFINE_PROPERTY\\\" + name;\\n          if(THIS[gibberishProperty]) return tokenList;\\n          THIS[gibberishProperty] = true;\\n\\n          /**\\n           * IE8 can't define properties on native JavaScript objects, so we'll use a dumb hack instead.\\n           *\\n           * What this is doing is creating a dummy element (\\\"reflection\\\") inside a detached phantom node (\\\"mirror\\\")\\n           * that serves as the target of Object.defineProperty instead. While we could simply use the subject HTML\\n           * element instead, this would conflict with element types which use indexed properties (such as forms and\\n           * select lists).\\n           */\\n          if (false === dpSupport) {\\n\\n            var visage;\\n            var mirror = addProp.mirror || document.createElement(\\\"div\\\");\\n            var reflections = mirror.childNodes;\\n            var l = reflections.length;\\n\\n            for (var i = 0; i < l; ++i)\\n              if (reflections[i]._R === THIS) {\\n                visage = reflections[i];\\n                break;\\n              }\\n\\n            /** Couldn't find an element's reflection inside the mirror. Materialise one. */\\n            visage || (visage = mirror.appendChild(document.createElement(\\\"div\\\")));\\n\\n            tokenList = DOMTokenList.call(visage, THIS, attr);\\n          } else tokenList = new DOMTokenList(THIS, attr);\\n\\n          defineGetter(THIS, name, function () {\\n            return tokenList;\\n          });\\n          delete THIS[gibberishProperty];\\n\\n          return tokenList;\\n        }, true);\\n      };\\n\\n      addProp(global.Element, \\\"classList\\\", \\\"className\\\");\\n      addProp(global.HTMLElement, \\\"classList\\\", \\\"className\\\");\\n      addProp(global.HTMLLinkElement, \\\"relList\\\", \\\"rel\\\");\\n      addProp(global.HTMLAnchorElement, \\\"relList\\\", \\\"rel\\\");\\n      addProp(global.HTMLAreaElement, \\\"relList\\\", \\\"rel\\\");\\n    }(this));\\n\\n}).call('object' === typeof window && window || 'object' === typeof self && self || 'object' === typeof global && global || {});\\n\\nfunction Accordion ($module) {\\n  this.$module = $module;\\n  this.moduleId = $module.getAttribute('id');\\n  this.$sections = $module.querySelectorAll('.govuk-accordion__section');\\n  this.$openAllButton = '';\\n  this.browserSupportsSessionStorage = helper.checkForSessionStorage();\\n\\n  this.controlsClass = 'govuk-accordion__controls';\\n  this.openAllClass = 'govuk-accordion__open-all';\\n  this.iconClass = 'govuk-accordion__icon';\\n\\n  this.sectionHeaderClass = 'govuk-accordion__section-header';\\n  this.sectionHeaderFocusedClass = 'govuk-accordion__section-header--focused';\\n  this.sectionHeadingClass = 'govuk-accordion__section-heading';\\n  this.sectionSummaryClass = 'govuk-accordion__section-summary';\\n  this.sectionButtonClass = 'govuk-accordion__section-button';\\n  this.sectionExpandedClass = 'govuk-accordion__section--expanded';\\n}\\n\\n// Initialize component\\nAccordion.prototype.init = function () {\\n  // Check for module\\n  if (!this.$module) {\\n    return\\n  }\\n\\n  this.initControls();\\n\\n  this.initSectionHeaders();\\n\\n  // See if \\\"Open all\\\" button text should be updated\\n  var areAllSectionsOpen = this.checkIfAllSectionsOpen();\\n  this.updateOpenAllButton(areAllSectionsOpen);\\n};\\n\\n// Initialise controls and set attributes\\nAccordion.prototype.initControls = function () {\\n  // Create \\\"Open all\\\" button and set attributes\\n  this.$openAllButton = document.createElement('button');\\n  this.$openAllButton.setAttribute('type', 'button');\\n  this.$openAllButton.innerHTML = 'Open all <span class=\\\"govuk-visually-hidden\\\">sections</span>';\\n  this.$openAllButton.setAttribute('class', this.openAllClass);\\n  this.$openAllButton.setAttribute('aria-expanded', 'false');\\n  this.$openAllButton.setAttribute('type', 'button');\\n\\n  // Create control wrapper and add controls to it\\n  var accordionControls = document.createElement('div');\\n  accordionControls.setAttribute('class', this.controlsClass);\\n  accordionControls.appendChild(this.$openAllButton);\\n  this.$module.insertBefore(accordionControls, this.$module.firstChild);\\n\\n  // Handle events for the controls\\n  this.$openAllButton.addEventListener('click', this.onOpenOrCloseAllToggle.bind(this));\\n};\\n\\n// Initialise section headers\\nAccordion.prototype.initSectionHeaders = function () {\\n  // Loop through section headers\\n  nodeListForEach(this.$sections, function ($section, i) {\\n    // Set header attributes\\n    var header = $section.querySelector('.' + this.sectionHeaderClass);\\n    this.initHeaderAttributes(header, i);\\n\\n    this.setExpanded(this.isExpanded($section), $section);\\n\\n    // Handle events\\n    header.addEventListener('click', this.onSectionToggle.bind(this, $section));\\n\\n    // See if there is any state stored in sessionStorage and set the sections to\\n    // open or closed.\\n    this.setInitialState($section);\\n  }.bind(this));\\n};\\n\\n// Set individual header attributes\\nAccordion.prototype.initHeaderAttributes = function ($headerWrapper, index) {\\n  var $module = this;\\n  var $span = $headerWrapper.querySelector('.' + this.sectionButtonClass);\\n  var $heading = $headerWrapper.querySelector('.' + this.sectionHeadingClass);\\n  var $summary = $headerWrapper.querySelector('.' + this.sectionSummaryClass);\\n\\n  // Copy existing span element to an actual button element, for improved accessibility.\\n  var $button = document.createElement('button');\\n  $button.setAttribute('type', 'button');\\n  $button.setAttribute('id', this.moduleId + '-heading-' + (index + 1));\\n  $button.setAttribute('aria-controls', this.moduleId + '-content-' + (index + 1));\\n\\n  // Copy all attributes (https://developer.mozilla.org/en-US/docs/Web/API/Element/attributes) from $span to $button\\n  for (var i = 0; i < $span.attributes.length; i++) {\\n    var attr = $span.attributes.item(i);\\n    $button.setAttribute(attr.nodeName, attr.nodeValue);\\n  }\\n\\n  $button.addEventListener('focusin', function (e) {\\n    if (!$headerWrapper.classList.contains($module.sectionHeaderFocusedClass)) {\\n      $headerWrapper.className += ' ' + $module.sectionHeaderFocusedClass;\\n    }\\n  });\\n\\n  $button.addEventListener('blur', function (e) {\\n    $headerWrapper.classList.remove($module.sectionHeaderFocusedClass);\\n  });\\n\\n  if (typeof ($summary) !== 'undefined' && $summary !== null) {\\n    $button.setAttribute('aria-describedby', this.moduleId + '-summary-' + (index + 1));\\n  }\\n\\n  // $span could contain HTML elements (see https://www.w3.org/TR/2011/WD-html5-20110525/content-models.html#phrasing-content)\\n  $button.innerHTML = $span.innerHTML;\\n\\n  $heading.removeChild($span);\\n  $heading.appendChild($button);\\n\\n  // Add \\\"+/-\\\" icon\\n  var icon = document.createElement('span');\\n  icon.className = this.iconClass;\\n  icon.setAttribute('aria-hidden', 'true');\\n\\n  $heading.appendChild(icon);\\n};\\n\\n// When section toggled, set and store state\\nAccordion.prototype.onSectionToggle = function ($section) {\\n  var expanded = this.isExpanded($section);\\n  this.setExpanded(!expanded, $section);\\n\\n  // Store the state in sessionStorage when a change is triggered\\n  this.storeState($section);\\n};\\n\\n// When Open/Close All toggled, set and store state\\nAccordion.prototype.onOpenOrCloseAllToggle = function () {\\n  var $module = this;\\n  var $sections = this.$sections;\\n\\n  var nowExpanded = !this.checkIfAllSectionsOpen();\\n\\n  nodeListForEach($sections, function ($section) {\\n    $module.setExpanded(nowExpanded, $section);\\n    // Store the state in sessionStorage when a change is triggered\\n    $module.storeState($section);\\n  });\\n\\n  $module.updateOpenAllButton(nowExpanded);\\n};\\n\\n// Set section attributes when opened/closed\\nAccordion.prototype.setExpanded = function (expanded, $section) {\\n  var $button = $section.querySelector('.' + this.sectionButtonClass);\\n  $button.setAttribute('aria-expanded', expanded);\\n\\n  if (expanded) {\\n    $section.classList.add(this.sectionExpandedClass);\\n  } else {\\n    $section.classList.remove(this.sectionExpandedClass);\\n  }\\n\\n  // See if \\\"Open all\\\" button text should be updated\\n  var areAllSectionsOpen = this.checkIfAllSectionsOpen();\\n  this.updateOpenAllButton(areAllSectionsOpen);\\n};\\n\\n// Get state of section\\nAccordion.prototype.isExpanded = function ($section) {\\n  return $section.classList.contains(this.sectionExpandedClass)\\n};\\n\\n// Check if all sections are open\\nAccordion.prototype.checkIfAllSectionsOpen = function () {\\n  // Get a count of all the Accordion sections\\n  var sectionsCount = this.$sections.length;\\n  // Get a count of all Accordion sections that are expanded\\n  var expandedSectionCount = this.$module.querySelectorAll('.' + this.sectionExpandedClass).length;\\n  var areAllSectionsOpen = sectionsCount === expandedSectionCount;\\n\\n  return areAllSectionsOpen\\n};\\n\\n// Update \\\"Open all\\\" button\\nAccordion.prototype.updateOpenAllButton = function (expanded) {\\n  var newButtonText = expanded ? 'Close all' : 'Open all';\\n  newButtonText += '<span class=\\\"govuk-visually-hidden\\\"> sections</span>';\\n  this.$openAllButton.setAttribute('aria-expanded', expanded);\\n  this.$openAllButton.innerHTML = newButtonText;\\n};\\n\\n// Check for `window.sessionStorage`, and that it actually works.\\nvar helper = {\\n  checkForSessionStorage: function () {\\n    var testString = 'this is the test string';\\n    var result;\\n    try {\\n      window.sessionStorage.setItem(testString, testString);\\n      result = window.sessionStorage.getItem(testString) === testString.toString();\\n      window.sessionStorage.removeItem(testString);\\n      return result\\n    } catch (exception) {\\n      if ((typeof console === 'undefined' || typeof console.log === 'undefined')) {\\n        console.log('Notice: sessionStorage not available.');\\n      }\\n    }\\n  }\\n};\\n\\n// Set the state of the accordions in sessionStorage\\nAccordion.prototype.storeState = function ($section) {\\n  if (this.browserSupportsSessionStorage) {\\n    // We need a unique way of identifying each content in the accordion. Since\\n    // an `#id` should be unique and an `id` is required for `aria-` attributes\\n    // `id` can be safely used.\\n    var $button = $section.querySelector('.' + this.sectionButtonClass);\\n\\n    if ($button) {\\n      var contentId = $button.getAttribute('aria-controls');\\n      var contentState = $button.getAttribute('aria-expanded');\\n\\n      if (typeof contentId === 'undefined' && (typeof console === 'undefined' || typeof console.log === 'undefined')) {\\n        console.error(new Error('No aria controls present in accordion section heading.'));\\n      }\\n\\n      if (typeof contentState === 'undefined' && (typeof console === 'undefined' || typeof console.log === 'undefined')) {\\n        console.error(new Error('No aria expanded present in accordion section heading.'));\\n      }\\n\\n      // Only set the state when both `contentId` and `contentState` are taken from the DOM.\\n      if (contentId && contentState) {\\n        window.sessionStorage.setItem(contentId, contentState);\\n      }\\n    }\\n  }\\n};\\n\\n// Read the state of the accordions from sessionStorage\\nAccordion.prototype.setInitialState = function ($section) {\\n  if (this.browserSupportsSessionStorage) {\\n    var $button = $section.querySelector('.' + this.sectionButtonClass);\\n\\n    if ($button) {\\n      var contentId = $button.getAttribute('aria-controls');\\n      var contentState = contentId ? window.sessionStorage.getItem(contentId) : null;\\n\\n      if (contentState !== null) {\\n        this.setExpanded(contentState === 'true', $section);\\n      }\\n    }\\n  }\\n};\\n\\nreturn Accordion;\\n\\n})));\\n\\n/* WEBPACK VAR INJECTION */}.call(this, __webpack_require__(/*! ./../../../../webpack/buildin/global.js */ \\\"./node_modules/webpack/buildin/global.js\\\")))\\n\\n//# sourceURL=webpack://LBHFrontend/./node_modules/govuk-frontend/govuk/components/accordion/accordion.js?\");\n\n/***/ }),\n\n/***/ \"./node_modules/govuk-frontend/govuk/components/button/button.js\":\n/*!***********************************************************************!*\\\n  !*** ./node_modules/govuk-frontend/govuk/components/button/button.js ***!\n  \\***********************************************************************/\n/*! no static exports found */\n/***/ (function(module, exports, __webpack_require__) {\n\neval(\"/* WEBPACK VAR INJECTION */(function(global) {(function (global, factory) {\\n\\t true ? module.exports = factory() :\\n\\tundefined;\\n}(this, (function () { 'use strict';\\n\\n(function(undefined) {\\n\\n// Detection from https://github.com/Financial-Times/polyfill-service/blob/master/packages/polyfill-library/polyfills/Window/detect.js\\nvar detect = ('Window' in this);\\n\\nif (detect) return\\n\\n// Polyfill from https://cdn.polyfill.io/v2/polyfill.js?features=Window&flags=always\\nif ((typeof WorkerGlobalScope === \\\"undefined\\\") && (typeof importScripts !== \\\"function\\\")) {\\n\\t(function (global) {\\n\\t\\tif (global.constructor) {\\n\\t\\t\\tglobal.Window = global.constructor;\\n\\t\\t} else {\\n\\t\\t\\t(global.Window = global.constructor = new Function('return function Window() {}')()).prototype = this;\\n\\t\\t}\\n\\t}(this));\\n}\\n\\n})\\n.call('object' === typeof window && window || 'object' === typeof self && self || 'object' === typeof global && global || {});\\n\\n(function(undefined) {\\n\\n// Detection from https://github.com/Financial-Times/polyfill-service/blob/master/packages/polyfill-library/polyfills/Document/detect.js\\nvar detect = (\\\"Document\\\" in this);\\n\\nif (detect) return\\n\\n// Polyfill from https://cdn.polyfill.io/v2/polyfill.js?features=Document&flags=always\\nif ((typeof WorkerGlobalScope === \\\"undefined\\\") && (typeof importScripts !== \\\"function\\\")) {\\n\\n\\tif (this.HTMLDocument) { // IE8\\n\\n\\t\\t// HTMLDocument is an extension of Document.  If the browser has HTMLDocument but not Document, the former will suffice as an alias for the latter.\\n\\t\\tthis.Document = this.HTMLDocument;\\n\\n\\t} else {\\n\\n\\t\\t// Create an empty function to act as the missing constructor for the document object, attach the document object as its prototype.  The function needs to be anonymous else it is hoisted and causes the feature detect to prematurely pass, preventing the assignments below being made.\\n\\t\\tthis.Document = this.HTMLDocument = document.constructor = (new Function('return function Document() {}')());\\n\\t\\tthis.Document.prototype = document;\\n\\t}\\n}\\n\\n\\n})\\n.call('object' === typeof window && window || 'object' === typeof self && self || 'object' === typeof global && global || {});\\n\\n(function(undefined) {\\n\\n// Detection from https://github.com/Financial-Times/polyfill-service/blob/master/packages/polyfill-library/polyfills/Element/detect.js\\nvar detect = ('Element' in this && 'HTMLElement' in this);\\n\\nif (detect) return\\n\\n// Polyfill from https://cdn.polyfill.io/v2/polyfill.js?features=Element&flags=always\\n(function () {\\n\\n\\t// IE8\\n\\tif (window.Element && !window.HTMLElement) {\\n\\t\\twindow.HTMLElement = window.Element;\\n\\t\\treturn;\\n\\t}\\n\\n\\t// create Element constructor\\n\\twindow.Element = window.HTMLElement = new Function('return function Element() {}')();\\n\\n\\t// generate sandboxed iframe\\n\\tvar vbody = document.appendChild(document.createElement('body'));\\n\\tvar frame = vbody.appendChild(document.createElement('iframe'));\\n\\n\\t// use sandboxed iframe to replicate Element functionality\\n\\tvar frameDocument = frame.contentWindow.document;\\n\\tvar prototype = Element.prototype = frameDocument.appendChild(frameDocument.createElement('*'));\\n\\tvar cache = {};\\n\\n\\t// polyfill Element.prototype on an element\\n\\tvar shiv = function (element, deep) {\\n\\t\\tvar\\n\\t\\tchildNodes = element.childNodes || [],\\n\\t\\tindex = -1,\\n\\t\\tkey, value, childNode;\\n\\n\\t\\tif (element.nodeType === 1 && element.constructor !== Element) {\\n\\t\\t\\telement.constructor = Element;\\n\\n\\t\\t\\tfor (key in cache) {\\n\\t\\t\\t\\tvalue = cache[key];\\n\\t\\t\\t\\telement[key] = value;\\n\\t\\t\\t}\\n\\t\\t}\\n\\n\\t\\twhile (childNode = deep && childNodes[++index]) {\\n\\t\\t\\tshiv(childNode, deep);\\n\\t\\t}\\n\\n\\t\\treturn element;\\n\\t};\\n\\n\\tvar elements = document.getElementsByTagName('*');\\n\\tvar nativeCreateElement = document.createElement;\\n\\tvar interval;\\n\\tvar loopLimit = 100;\\n\\n\\tprototype.attachEvent('onpropertychange', function (event) {\\n\\t\\tvar\\n\\t\\tpropertyName = event.propertyName,\\n\\t\\tnonValue = !cache.hasOwnProperty(propertyName),\\n\\t\\tnewValue = prototype[propertyName],\\n\\t\\toldValue = cache[propertyName],\\n\\t\\tindex = -1,\\n\\t\\telement;\\n\\n\\t\\twhile (element = elements[++index]) {\\n\\t\\t\\tif (element.nodeType === 1) {\\n\\t\\t\\t\\tif (nonValue || element[propertyName] === oldValue) {\\n\\t\\t\\t\\t\\telement[propertyName] = newValue;\\n\\t\\t\\t\\t}\\n\\t\\t\\t}\\n\\t\\t}\\n\\n\\t\\tcache[propertyName] = newValue;\\n\\t});\\n\\n\\tprototype.constructor = Element;\\n\\n\\tif (!prototype.hasAttribute) {\\n\\t\\t// <Element>.hasAttribute\\n\\t\\tprototype.hasAttribute = function hasAttribute(name) {\\n\\t\\t\\treturn this.getAttribute(name) !== null;\\n\\t\\t};\\n\\t}\\n\\n\\t// Apply Element prototype to the pre-existing DOM as soon as the body element appears.\\n\\tfunction bodyCheck() {\\n\\t\\tif (!(loopLimit--)) clearTimeout(interval);\\n\\t\\tif (document.body && !document.body.prototype && /(complete|interactive)/.test(document.readyState)) {\\n\\t\\t\\tshiv(document, true);\\n\\t\\t\\tif (interval && document.body.prototype) clearTimeout(interval);\\n\\t\\t\\treturn (!!document.body.prototype);\\n\\t\\t}\\n\\t\\treturn false;\\n\\t}\\n\\tif (!bodyCheck()) {\\n\\t\\tdocument.onreadystatechange = bodyCheck;\\n\\t\\tinterval = setInterval(bodyCheck, 25);\\n\\t}\\n\\n\\t// Apply to any new elements created after load\\n\\tdocument.createElement = function createElement(nodeName) {\\n\\t\\tvar element = nativeCreateElement(String(nodeName).toLowerCase());\\n\\t\\treturn shiv(element);\\n\\t};\\n\\n\\t// remove sandboxed iframe\\n\\tdocument.removeChild(vbody);\\n}());\\n\\n})\\n.call('object' === typeof window && window || 'object' === typeof self && self || 'object' === typeof global && global || {});\\n\\n(function(undefined) {\\n\\n// Detection from https://github.com/Financial-Times/polyfill-service/blob/master/packages/polyfill-library/polyfills/Object/defineProperty/detect.js\\nvar detect = (\\n  // In IE8, defineProperty could only act on DOM elements, so full support\\n  // for the feature requires the ability to set a property on an arbitrary object\\n  'defineProperty' in Object && (function() {\\n  \\ttry {\\n  \\t\\tvar a = {};\\n  \\t\\tObject.defineProperty(a, 'test', {value:42});\\n  \\t\\treturn true;\\n  \\t} catch(e) {\\n  \\t\\treturn false\\n  \\t}\\n  }())\\n);\\n\\nif (detect) return\\n\\n// Polyfill from https://cdn.polyfill.io/v2/polyfill.js?features=Object.defineProperty&flags=always\\n(function (nativeDefineProperty) {\\n\\n\\tvar supportsAccessors = Object.prototype.hasOwnProperty('__defineGetter__');\\n\\tvar ERR_ACCESSORS_NOT_SUPPORTED = 'Getters & setters cannot be defined on this javascript engine';\\n\\tvar ERR_VALUE_ACCESSORS = 'A property cannot both have accessors and be writable or have a value';\\n\\n\\tObject.defineProperty = function defineProperty(object, property, descriptor) {\\n\\n\\t\\t// Where native support exists, assume it\\n\\t\\tif (nativeDefineProperty && (object === window || object === document || object === Element.prototype || object instanceof Element)) {\\n\\t\\t\\treturn nativeDefineProperty(object, property, descriptor);\\n\\t\\t}\\n\\n\\t\\tif (object === null || !(object instanceof Object || typeof object === 'object')) {\\n\\t\\t\\tthrow new TypeError('Object.defineProperty called on non-object');\\n\\t\\t}\\n\\n\\t\\tif (!(descriptor instanceof Object)) {\\n\\t\\t\\tthrow new TypeError('Property description must be an object');\\n\\t\\t}\\n\\n\\t\\tvar propertyString = String(property);\\n\\t\\tvar hasValueOrWritable = 'value' in descriptor || 'writable' in descriptor;\\n\\t\\tvar getterType = 'get' in descriptor && typeof descriptor.get;\\n\\t\\tvar setterType = 'set' in descriptor && typeof descriptor.set;\\n\\n\\t\\t// handle descriptor.get\\n\\t\\tif (getterType) {\\n\\t\\t\\tif (getterType !== 'function') {\\n\\t\\t\\t\\tthrow new TypeError('Getter must be a function');\\n\\t\\t\\t}\\n\\t\\t\\tif (!supportsAccessors) {\\n\\t\\t\\t\\tthrow new TypeError(ERR_ACCESSORS_NOT_SUPPORTED);\\n\\t\\t\\t}\\n\\t\\t\\tif (hasValueOrWritable) {\\n\\t\\t\\t\\tthrow new TypeError(ERR_VALUE_ACCESSORS);\\n\\t\\t\\t}\\n\\t\\t\\tObject.__defineGetter__.call(object, propertyString, descriptor.get);\\n\\t\\t} else {\\n\\t\\t\\tobject[propertyString] = descriptor.value;\\n\\t\\t}\\n\\n\\t\\t// handle descriptor.set\\n\\t\\tif (setterType) {\\n\\t\\t\\tif (setterType !== 'function') {\\n\\t\\t\\t\\tthrow new TypeError('Setter must be a function');\\n\\t\\t\\t}\\n\\t\\t\\tif (!supportsAccessors) {\\n\\t\\t\\t\\tthrow new TypeError(ERR_ACCESSORS_NOT_SUPPORTED);\\n\\t\\t\\t}\\n\\t\\t\\tif (hasValueOrWritable) {\\n\\t\\t\\t\\tthrow new TypeError(ERR_VALUE_ACCESSORS);\\n\\t\\t\\t}\\n\\t\\t\\tObject.__defineSetter__.call(object, propertyString, descriptor.set);\\n\\t\\t}\\n\\n\\t\\t// OK to define value unconditionally - if a getter has been specified as well, an error would be thrown above\\n\\t\\tif ('value' in descriptor) {\\n\\t\\t\\tobject[propertyString] = descriptor.value;\\n\\t\\t}\\n\\n\\t\\treturn object;\\n\\t};\\n}(Object.defineProperty));\\n})\\n.call('object' === typeof window && window || 'object' === typeof self && self || 'object' === typeof global && global || {});\\n\\n(function(undefined) {\\n\\n// Detection from https://github.com/Financial-Times/polyfill-service/blob/master/packages/polyfill-library/polyfills/Event/detect.js\\nvar detect = (\\n  (function(global) {\\n\\n  \\tif (!('Event' in global)) return false;\\n  \\tif (typeof global.Event === 'function') return true;\\n\\n  \\ttry {\\n\\n  \\t\\t// In IE 9-11, the Event object exists but cannot be instantiated\\n  \\t\\tnew Event('click');\\n  \\t\\treturn true;\\n  \\t} catch(e) {\\n  \\t\\treturn false;\\n  \\t}\\n  }(this))\\n);\\n\\nif (detect) return\\n\\n// Polyfill from https://cdn.polyfill.io/v2/polyfill.js?features=Event&flags=always\\n(function () {\\n\\tvar unlistenableWindowEvents = {\\n\\t\\tclick: 1,\\n\\t\\tdblclick: 1,\\n\\t\\tkeyup: 1,\\n\\t\\tkeypress: 1,\\n\\t\\tkeydown: 1,\\n\\t\\tmousedown: 1,\\n\\t\\tmouseup: 1,\\n\\t\\tmousemove: 1,\\n\\t\\tmouseover: 1,\\n\\t\\tmouseenter: 1,\\n\\t\\tmouseleave: 1,\\n\\t\\tmouseout: 1,\\n\\t\\tstorage: 1,\\n\\t\\tstoragecommit: 1,\\n\\t\\ttextinput: 1\\n\\t};\\n\\n\\t// This polyfill depends on availability of `document` so will not run in a worker\\n\\t// However, we asssume there are no browsers with worker support that lack proper\\n\\t// support for `Event` within the worker\\n\\tif (typeof document === 'undefined' || typeof window === 'undefined') return;\\n\\n\\tfunction indexOf(array, element) {\\n\\t\\tvar\\n\\t\\tindex = -1,\\n\\t\\tlength = array.length;\\n\\n\\t\\twhile (++index < length) {\\n\\t\\t\\tif (index in array && array[index] === element) {\\n\\t\\t\\t\\treturn index;\\n\\t\\t\\t}\\n\\t\\t}\\n\\n\\t\\treturn -1;\\n\\t}\\n\\n\\tvar existingProto = (window.Event && window.Event.prototype) || null;\\n\\twindow.Event = Window.prototype.Event = function Event(type, eventInitDict) {\\n\\t\\tif (!type) {\\n\\t\\t\\tthrow new Error('Not enough arguments');\\n\\t\\t}\\n\\n\\t\\tvar event;\\n\\t\\t// Shortcut if browser supports createEvent\\n\\t\\tif ('createEvent' in document) {\\n\\t\\t\\tevent = document.createEvent('Event');\\n\\t\\t\\tvar bubbles = eventInitDict && eventInitDict.bubbles !== undefined ? eventInitDict.bubbles : false;\\n\\t\\t\\tvar cancelable = eventInitDict && eventInitDict.cancelable !== undefined ? eventInitDict.cancelable : false;\\n\\n\\t\\t\\tevent.initEvent(type, bubbles, cancelable);\\n\\n\\t\\t\\treturn event;\\n\\t\\t}\\n\\n\\t\\tevent = document.createEventObject();\\n\\n\\t\\tevent.type = type;\\n\\t\\tevent.bubbles = eventInitDict && eventInitDict.bubbles !== undefined ? eventInitDict.bubbles : false;\\n\\t\\tevent.cancelable = eventInitDict && eventInitDict.cancelable !== undefined ? eventInitDict.cancelable : false;\\n\\n\\t\\treturn event;\\n\\t};\\n\\tif (existingProto) {\\n\\t\\tObject.defineProperty(window.Event, 'prototype', {\\n\\t\\t\\tconfigurable: false,\\n\\t\\t\\tenumerable: false,\\n\\t\\t\\twritable: true,\\n\\t\\t\\tvalue: existingProto\\n\\t\\t});\\n\\t}\\n\\n\\tif (!('createEvent' in document)) {\\n\\t\\twindow.addEventListener = Window.prototype.addEventListener = Document.prototype.addEventListener = Element.prototype.addEventListener = function addEventListener() {\\n\\t\\t\\tvar\\n\\t\\t\\telement = this,\\n\\t\\t\\ttype = arguments[0],\\n\\t\\t\\tlistener = arguments[1];\\n\\n\\t\\t\\tif (element === window && type in unlistenableWindowEvents) {\\n\\t\\t\\t\\tthrow new Error('In IE8 the event: ' + type + ' is not available on the window object. Please see https://github.com/Financial-Times/polyfill-service/issues/317 for more information.');\\n\\t\\t\\t}\\n\\n\\t\\t\\tif (!element._events) {\\n\\t\\t\\t\\telement._events = {};\\n\\t\\t\\t}\\n\\n\\t\\t\\tif (!element._events[type]) {\\n\\t\\t\\t\\telement._events[type] = function (event) {\\n\\t\\t\\t\\t\\tvar\\n\\t\\t\\t\\t\\tlist = element._events[event.type].list,\\n\\t\\t\\t\\t\\tevents = list.slice(),\\n\\t\\t\\t\\t\\tindex = -1,\\n\\t\\t\\t\\t\\tlength = events.length,\\n\\t\\t\\t\\t\\teventElement;\\n\\n\\t\\t\\t\\t\\tevent.preventDefault = function preventDefault() {\\n\\t\\t\\t\\t\\t\\tif (event.cancelable !== false) {\\n\\t\\t\\t\\t\\t\\t\\tevent.returnValue = false;\\n\\t\\t\\t\\t\\t\\t}\\n\\t\\t\\t\\t\\t};\\n\\n\\t\\t\\t\\t\\tevent.stopPropagation = function stopPropagation() {\\n\\t\\t\\t\\t\\t\\tevent.cancelBubble = true;\\n\\t\\t\\t\\t\\t};\\n\\n\\t\\t\\t\\t\\tevent.stopImmediatePropagation = function stopImmediatePropagation() {\\n\\t\\t\\t\\t\\t\\tevent.cancelBubble = true;\\n\\t\\t\\t\\t\\t\\tevent.cancelImmediate = true;\\n\\t\\t\\t\\t\\t};\\n\\n\\t\\t\\t\\t\\tevent.currentTarget = element;\\n\\t\\t\\t\\t\\tevent.relatedTarget = event.fromElement || null;\\n\\t\\t\\t\\t\\tevent.target = event.target || event.srcElement || element;\\n\\t\\t\\t\\t\\tevent.timeStamp = new Date().getTime();\\n\\n\\t\\t\\t\\t\\tif (event.clientX) {\\n\\t\\t\\t\\t\\t\\tevent.pageX = event.clientX + document.documentElement.scrollLeft;\\n\\t\\t\\t\\t\\t\\tevent.pageY = event.clientY + document.documentElement.scrollTop;\\n\\t\\t\\t\\t\\t}\\n\\n\\t\\t\\t\\t\\twhile (++index < length && !event.cancelImmediate) {\\n\\t\\t\\t\\t\\t\\tif (index in events) {\\n\\t\\t\\t\\t\\t\\t\\teventElement = events[index];\\n\\n\\t\\t\\t\\t\\t\\t\\tif (indexOf(list, eventElement) !== -1 && typeof eventElement === 'function') {\\n\\t\\t\\t\\t\\t\\t\\t\\teventElement.call(element, event);\\n\\t\\t\\t\\t\\t\\t\\t}\\n\\t\\t\\t\\t\\t\\t}\\n\\t\\t\\t\\t\\t}\\n\\t\\t\\t\\t};\\n\\n\\t\\t\\t\\telement._events[type].list = [];\\n\\n\\t\\t\\t\\tif (element.attachEvent) {\\n\\t\\t\\t\\t\\telement.attachEvent('on' + type, element._events[type]);\\n\\t\\t\\t\\t}\\n\\t\\t\\t}\\n\\n\\t\\t\\telement._events[type].list.push(listener);\\n\\t\\t};\\n\\n\\t\\twindow.removeEventListener = Window.prototype.removeEventListener = Document.prototype.removeEventListener = Element.prototype.removeEventListener = function removeEventListener() {\\n\\t\\t\\tvar\\n\\t\\t\\telement = this,\\n\\t\\t\\ttype = arguments[0],\\n\\t\\t\\tlistener = arguments[1],\\n\\t\\t\\tindex;\\n\\n\\t\\t\\tif (element._events && element._events[type] && element._events[type].list) {\\n\\t\\t\\t\\tindex = indexOf(element._events[type].list, listener);\\n\\n\\t\\t\\t\\tif (index !== -1) {\\n\\t\\t\\t\\t\\telement._events[type].list.splice(index, 1);\\n\\n\\t\\t\\t\\t\\tif (!element._events[type].list.length) {\\n\\t\\t\\t\\t\\t\\tif (element.detachEvent) {\\n\\t\\t\\t\\t\\t\\t\\telement.detachEvent('on' + type, element._events[type]);\\n\\t\\t\\t\\t\\t\\t}\\n\\t\\t\\t\\t\\t\\tdelete element._events[type];\\n\\t\\t\\t\\t\\t}\\n\\t\\t\\t\\t}\\n\\t\\t\\t}\\n\\t\\t};\\n\\n\\t\\twindow.dispatchEvent = Window.prototype.dispatchEvent = Document.prototype.dispatchEvent = Element.prototype.dispatchEvent = function dispatchEvent(event) {\\n\\t\\t\\tif (!arguments.length) {\\n\\t\\t\\t\\tthrow new Error('Not enough arguments');\\n\\t\\t\\t}\\n\\n\\t\\t\\tif (!event || typeof event.type !== 'string') {\\n\\t\\t\\t\\tthrow new Error('DOM Events Exception 0');\\n\\t\\t\\t}\\n\\n\\t\\t\\tvar element = this, type = event.type;\\n\\n\\t\\t\\ttry {\\n\\t\\t\\t\\tif (!event.bubbles) {\\n\\t\\t\\t\\t\\tevent.cancelBubble = true;\\n\\n\\t\\t\\t\\t\\tvar cancelBubbleEvent = function (event) {\\n\\t\\t\\t\\t\\t\\tevent.cancelBubble = true;\\n\\n\\t\\t\\t\\t\\t\\t(element || window).detachEvent('on' + type, cancelBubbleEvent);\\n\\t\\t\\t\\t\\t};\\n\\n\\t\\t\\t\\t\\tthis.attachEvent('on' + type, cancelBubbleEvent);\\n\\t\\t\\t\\t}\\n\\n\\t\\t\\t\\tthis.fireEvent('on' + type, event);\\n\\t\\t\\t} catch (error) {\\n\\t\\t\\t\\tevent.target = element;\\n\\n\\t\\t\\t\\tdo {\\n\\t\\t\\t\\t\\tevent.currentTarget = element;\\n\\n\\t\\t\\t\\t\\tif ('_events' in element && typeof element._events[type] === 'function') {\\n\\t\\t\\t\\t\\t\\telement._events[type].call(element, event);\\n\\t\\t\\t\\t\\t}\\n\\n\\t\\t\\t\\t\\tif (typeof element['on' + type] === 'function') {\\n\\t\\t\\t\\t\\t\\telement['on' + type].call(element, event);\\n\\t\\t\\t\\t\\t}\\n\\n\\t\\t\\t\\t\\telement = element.nodeType === 9 ? element.parentWindow : element.parentNode;\\n\\t\\t\\t\\t} while (element && !event.cancelBubble);\\n\\t\\t\\t}\\n\\n\\t\\t\\treturn true;\\n\\t\\t};\\n\\n\\t\\t// Add the DOMContentLoaded Event\\n\\t\\tdocument.attachEvent('onreadystatechange', function() {\\n\\t\\t\\tif (document.readyState === 'complete') {\\n\\t\\t\\t\\tdocument.dispatchEvent(new Event('DOMContentLoaded', {\\n\\t\\t\\t\\t\\tbubbles: true\\n\\t\\t\\t\\t}));\\n\\t\\t\\t}\\n\\t\\t});\\n\\t}\\n}());\\n\\n})\\n.call('object' === typeof window && window || 'object' === typeof self && self || 'object' === typeof global && global || {});\\n\\n(function(undefined) {\\n  // Detection from https://github.com/Financial-Times/polyfill-service/blob/master/packages/polyfill-library/polyfills/Function/prototype/bind/detect.js\\n  var detect = 'bind' in Function.prototype;\\n\\n  if (detect) return\\n\\n  // Polyfill from https://cdn.polyfill.io/v2/polyfill.js?features=Function.prototype.bind&flags=always\\n  Object.defineProperty(Function.prototype, 'bind', {\\n      value: function bind(that) { // .length is 1\\n          // add necessary es5-shim utilities\\n          var $Array = Array;\\n          var $Object = Object;\\n          var ObjectPrototype = $Object.prototype;\\n          var ArrayPrototype = $Array.prototype;\\n          var Empty = function Empty() {};\\n          var to_string = ObjectPrototype.toString;\\n          var hasToStringTag = typeof Symbol === 'function' && typeof Symbol.toStringTag === 'symbol';\\n          var isCallable; /* inlined from https://npmjs.com/is-callable */ var fnToStr = Function.prototype.toString, tryFunctionObject = function tryFunctionObject(value) { try { fnToStr.call(value); return true; } catch (e) { return false; } }, fnClass = '[object Function]', genClass = '[object GeneratorFunction]'; isCallable = function isCallable(value) { if (typeof value !== 'function') { return false; } if (hasToStringTag) { return tryFunctionObject(value); } var strClass = to_string.call(value); return strClass === fnClass || strClass === genClass; };\\n          var array_slice = ArrayPrototype.slice;\\n          var array_concat = ArrayPrototype.concat;\\n          var array_push = ArrayPrototype.push;\\n          var max = Math.max;\\n          // /add necessary es5-shim utilities\\n\\n          // 1. Let Target be the this value.\\n          var target = this;\\n          // 2. If IsCallable(Target) is false, throw a TypeError exception.\\n          if (!isCallable(target)) {\\n              throw new TypeError('Function.prototype.bind called on incompatible ' + target);\\n          }\\n          // 3. Let A be a new (possibly empty) internal list of all of the\\n          //   argument values provided after thisArg (arg1, arg2 etc), in order.\\n          // XXX slicedArgs will stand in for \\\"A\\\" if used\\n          var args = array_slice.call(arguments, 1); // for normal call\\n          // 4. Let F be a new native ECMAScript object.\\n          // 11. Set the [[Prototype]] internal property of F to the standard\\n          //   built-in Function prototype object as specified in 15.3.3.1.\\n          // 12. Set the [[Call]] internal property of F as described in\\n          //   15.3.4.5.1.\\n          // 13. Set the [[Construct]] internal property of F as described in\\n          //   15.3.4.5.2.\\n          // 14. Set the [[HasInstance]] internal property of F as described in\\n          //   15.3.4.5.3.\\n          var bound;\\n          var binder = function () {\\n\\n              if (this instanceof bound) {\\n                  // 15.3.4.5.2 [[Construct]]\\n                  // When the [[Construct]] internal method of a function object,\\n                  // F that was created using the bind function is called with a\\n                  // list of arguments ExtraArgs, the following steps are taken:\\n                  // 1. Let target be the value of F's [[TargetFunction]]\\n                  //   internal property.\\n                  // 2. If target has no [[Construct]] internal method, a\\n                  //   TypeError exception is thrown.\\n                  // 3. Let boundArgs be the value of F's [[BoundArgs]] internal\\n                  //   property.\\n                  // 4. Let args be a new list containing the same values as the\\n                  //   list boundArgs in the same order followed by the same\\n                  //   values as the list ExtraArgs in the same order.\\n                  // 5. Return the result of calling the [[Construct]] internal\\n                  //   method of target providing args as the arguments.\\n\\n                  var result = target.apply(\\n                      this,\\n                      array_concat.call(args, array_slice.call(arguments))\\n                  );\\n                  if ($Object(result) === result) {\\n                      return result;\\n                  }\\n                  return this;\\n\\n              } else {\\n                  // 15.3.4.5.1 [[Call]]\\n                  // When the [[Call]] internal method of a function object, F,\\n                  // which was created using the bind function is called with a\\n                  // this value and a list of arguments ExtraArgs, the following\\n                  // steps are taken:\\n                  // 1. Let boundArgs be the value of F's [[BoundArgs]] internal\\n                  //   property.\\n                  // 2. Let boundThis be the value of F's [[BoundThis]] internal\\n                  //   property.\\n                  // 3. Let target be the value of F's [[TargetFunction]] internal\\n                  //   property.\\n                  // 4. Let args be a new list containing the same values as the\\n                  //   list boundArgs in the same order followed by the same\\n                  //   values as the list ExtraArgs in the same order.\\n                  // 5. Return the result of calling the [[Call]] internal method\\n                  //   of target providing boundThis as the this value and\\n                  //   providing args as the arguments.\\n\\n                  // equiv: target.call(this, ...boundArgs, ...args)\\n                  return target.apply(\\n                      that,\\n                      array_concat.call(args, array_slice.call(arguments))\\n                  );\\n\\n              }\\n\\n          };\\n\\n          // 15. If the [[Class]] internal property of Target is \\\"Function\\\", then\\n          //     a. Let L be the length property of Target minus the length of A.\\n          //     b. Set the length own property of F to either 0 or L, whichever is\\n          //       larger.\\n          // 16. Else set the length own property of F to 0.\\n\\n          var boundLength = max(0, target.length - args.length);\\n\\n          // 17. Set the attributes of the length own property of F to the values\\n          //   specified in 15.3.5.1.\\n          var boundArgs = [];\\n          for (var i = 0; i < boundLength; i++) {\\n              array_push.call(boundArgs, '$' + i);\\n          }\\n\\n          // XXX Build a dynamic function with desired amount of arguments is the only\\n          // way to set the length property of a function.\\n          // In environments where Content Security Policies enabled (Chrome extensions,\\n          // for ex.) all use of eval or Function costructor throws an exception.\\n          // However in all of these environments Function.prototype.bind exists\\n          // and so this code will never be executed.\\n          bound = Function('binder', 'return function (' + boundArgs.join(',') + '){ return binder.apply(this, arguments); }')(binder);\\n\\n          if (target.prototype) {\\n              Empty.prototype = target.prototype;\\n              bound.prototype = new Empty();\\n              // Clean up dangling references.\\n              Empty.prototype = null;\\n          }\\n\\n          // TODO\\n          // 18. Set the [[Extensible]] internal property of F to true.\\n\\n          // TODO\\n          // 19. Let thrower be the [[ThrowTypeError]] function Object (13.2.3).\\n          // 20. Call the [[DefineOwnProperty]] internal method of F with\\n          //   arguments \\\"caller\\\", PropertyDescriptor {[[Get]]: thrower, [[Set]]:\\n          //   thrower, [[Enumerable]]: false, [[Configurable]]: false}, and\\n          //   false.\\n          // 21. Call the [[DefineOwnProperty]] internal method of F with\\n          //   arguments \\\"arguments\\\", PropertyDescriptor {[[Get]]: thrower,\\n          //   [[Set]]: thrower, [[Enumerable]]: false, [[Configurable]]: false},\\n          //   and false.\\n\\n          // TODO\\n          // NOTE Function objects created using Function.prototype.bind do not\\n          // have a prototype property or the [[Code]], [[FormalParameters]], and\\n          // [[Scope]] internal properties.\\n          // XXX can't delete prototype in pure-js.\\n\\n          // 22. Return F.\\n          return bound;\\n      }\\n  });\\n})\\n.call('object' === typeof window && window || 'object' === typeof self && self || 'object' === typeof global && global || {});\\n\\nvar KEY_SPACE = 32;\\nvar DEBOUNCE_TIMEOUT_IN_SECONDS = 1;\\n\\nfunction Button ($module) {\\n  this.$module = $module;\\n  this.debounceFormSubmitTimer = null;\\n}\\n\\n/**\\n* JavaScript 'shim' to trigger the click event of element(s) when the space key is pressed.\\n*\\n* Created since some Assistive Technologies (for example some Screenreaders)\\n* will tell a user to press space on a 'button', so this functionality needs to be shimmed\\n* See https://github.com/alphagov/govuk_elements/pull/272#issuecomment-233028270\\n*\\n* @param {object} event event\\n*/\\nButton.prototype.handleKeyDown = function (event) {\\n  // get the target element\\n  var target = event.target;\\n  // if the element has a role='button' and the pressed key is a space, we'll simulate a click\\n  if (target.getAttribute('role') === 'button' && event.keyCode === KEY_SPACE) {\\n    event.preventDefault();\\n    // trigger the target's click event\\n    target.click();\\n  }\\n};\\n\\n/**\\n* If the click quickly succeeds a previous click then nothing will happen.\\n* This stops people accidentally causing multiple form submissions by\\n* double clicking buttons.\\n*/\\nButton.prototype.debounce = function (event) {\\n  var target = event.target;\\n  // Check the button that is clicked on has the preventDoubleClick feature enabled\\n  if (target.getAttribute('data-prevent-double-click') !== 'true') {\\n    return\\n  }\\n\\n  // If the timer is still running then we want to prevent the click from submitting the form\\n  if (this.debounceFormSubmitTimer) {\\n    event.preventDefault();\\n    return false\\n  }\\n\\n  this.debounceFormSubmitTimer = setTimeout(function () {\\n    this.debounceFormSubmitTimer = null;\\n  }.bind(this), DEBOUNCE_TIMEOUT_IN_SECONDS * 1000);\\n};\\n\\n/**\\n* Initialise an event listener for keydown at document level\\n* this will help listening for later inserted elements with a role=\\\"button\\\"\\n*/\\nButton.prototype.init = function () {\\n  this.$module.addEventListener('keydown', this.handleKeyDown);\\n  this.$module.addEventListener('click', this.debounce);\\n};\\n\\nreturn Button;\\n\\n})));\\n\\n/* WEBPACK VAR INJECTION */}.call(this, __webpack_require__(/*! ./../../../../webpack/buildin/global.js */ \\\"./node_modules/webpack/buildin/global.js\\\")))\\n\\n//# sourceURL=webpack://LBHFrontend/./node_modules/govuk-frontend/govuk/components/button/button.js?\");\n\n/***/ }),\n\n/***/ \"./node_modules/govuk-frontend/govuk/components/character-count/character-count.js\":\n/*!*****************************************************************************************!*\\\n  !*** ./node_modules/govuk-frontend/govuk/components/character-count/character-count.js ***!\n  \\*****************************************************************************************/\n/*! no static exports found */\n/***/ (function(module, exports, __webpack_require__) {\n\neval(\"/* WEBPACK VAR INJECTION */(function(global) {(function (global, factory) {\\n\\t true ? module.exports = factory() :\\n\\tundefined;\\n}(this, (function () { 'use strict';\\n\\n(function(undefined) {\\n\\n// Detection from https://github.com/Financial-Times/polyfill-service/blob/master/packages/polyfill-library/polyfills/Object/defineProperty/detect.js\\nvar detect = (\\n  // In IE8, defineProperty could only act on DOM elements, so full support\\n  // for the feature requires the ability to set a property on an arbitrary object\\n  'defineProperty' in Object && (function() {\\n  \\ttry {\\n  \\t\\tvar a = {};\\n  \\t\\tObject.defineProperty(a, 'test', {value:42});\\n  \\t\\treturn true;\\n  \\t} catch(e) {\\n  \\t\\treturn false\\n  \\t}\\n  }())\\n);\\n\\nif (detect) return\\n\\n// Polyfill from https://cdn.polyfill.io/v2/polyfill.js?features=Object.defineProperty&flags=always\\n(function (nativeDefineProperty) {\\n\\n\\tvar supportsAccessors = Object.prototype.hasOwnProperty('__defineGetter__');\\n\\tvar ERR_ACCESSORS_NOT_SUPPORTED = 'Getters & setters cannot be defined on this javascript engine';\\n\\tvar ERR_VALUE_ACCESSORS = 'A property cannot both have accessors and be writable or have a value';\\n\\n\\tObject.defineProperty = function defineProperty(object, property, descriptor) {\\n\\n\\t\\t// Where native support exists, assume it\\n\\t\\tif (nativeDefineProperty && (object === window || object === document || object === Element.prototype || object instanceof Element)) {\\n\\t\\t\\treturn nativeDefineProperty(object, property, descriptor);\\n\\t\\t}\\n\\n\\t\\tif (object === null || !(object instanceof Object || typeof object === 'object')) {\\n\\t\\t\\tthrow new TypeError('Object.defineProperty called on non-object');\\n\\t\\t}\\n\\n\\t\\tif (!(descriptor instanceof Object)) {\\n\\t\\t\\tthrow new TypeError('Property description must be an object');\\n\\t\\t}\\n\\n\\t\\tvar propertyString = String(property);\\n\\t\\tvar hasValueOrWritable = 'value' in descriptor || 'writable' in descriptor;\\n\\t\\tvar getterType = 'get' in descriptor && typeof descriptor.get;\\n\\t\\tvar setterType = 'set' in descriptor && typeof descriptor.set;\\n\\n\\t\\t// handle descriptor.get\\n\\t\\tif (getterType) {\\n\\t\\t\\tif (getterType !== 'function') {\\n\\t\\t\\t\\tthrow new TypeError('Getter must be a function');\\n\\t\\t\\t}\\n\\t\\t\\tif (!supportsAccessors) {\\n\\t\\t\\t\\tthrow new TypeError(ERR_ACCESSORS_NOT_SUPPORTED);\\n\\t\\t\\t}\\n\\t\\t\\tif (hasValueOrWritable) {\\n\\t\\t\\t\\tthrow new TypeError(ERR_VALUE_ACCESSORS);\\n\\t\\t\\t}\\n\\t\\t\\tObject.__defineGetter__.call(object, propertyString, descriptor.get);\\n\\t\\t} else {\\n\\t\\t\\tobject[propertyString] = descriptor.value;\\n\\t\\t}\\n\\n\\t\\t// handle descriptor.set\\n\\t\\tif (setterType) {\\n\\t\\t\\tif (setterType !== 'function') {\\n\\t\\t\\t\\tthrow new TypeError('Setter must be a function');\\n\\t\\t\\t}\\n\\t\\t\\tif (!supportsAccessors) {\\n\\t\\t\\t\\tthrow new TypeError(ERR_ACCESSORS_NOT_SUPPORTED);\\n\\t\\t\\t}\\n\\t\\t\\tif (hasValueOrWritable) {\\n\\t\\t\\t\\tthrow new TypeError(ERR_VALUE_ACCESSORS);\\n\\t\\t\\t}\\n\\t\\t\\tObject.__defineSetter__.call(object, propertyString, descriptor.set);\\n\\t\\t}\\n\\n\\t\\t// OK to define value unconditionally - if a getter has been specified as well, an error would be thrown above\\n\\t\\tif ('value' in descriptor) {\\n\\t\\t\\tobject[propertyString] = descriptor.value;\\n\\t\\t}\\n\\n\\t\\treturn object;\\n\\t};\\n}(Object.defineProperty));\\n})\\n.call('object' === typeof window && window || 'object' === typeof self && self || 'object' === typeof global && global || {});\\n\\n(function(undefined) {\\n  // Detection from https://github.com/Financial-Times/polyfill-service/blob/master/packages/polyfill-library/polyfills/Function/prototype/bind/detect.js\\n  var detect = 'bind' in Function.prototype;\\n\\n  if (detect) return\\n\\n  // Polyfill from https://cdn.polyfill.io/v2/polyfill.js?features=Function.prototype.bind&flags=always\\n  Object.defineProperty(Function.prototype, 'bind', {\\n      value: function bind(that) { // .length is 1\\n          // add necessary es5-shim utilities\\n          var $Array = Array;\\n          var $Object = Object;\\n          var ObjectPrototype = $Object.prototype;\\n          var ArrayPrototype = $Array.prototype;\\n          var Empty = function Empty() {};\\n          var to_string = ObjectPrototype.toString;\\n          var hasToStringTag = typeof Symbol === 'function' && typeof Symbol.toStringTag === 'symbol';\\n          var isCallable; /* inlined from https://npmjs.com/is-callable */ var fnToStr = Function.prototype.toString, tryFunctionObject = function tryFunctionObject(value) { try { fnToStr.call(value); return true; } catch (e) { return false; } }, fnClass = '[object Function]', genClass = '[object GeneratorFunction]'; isCallable = function isCallable(value) { if (typeof value !== 'function') { return false; } if (hasToStringTag) { return tryFunctionObject(value); } var strClass = to_string.call(value); return strClass === fnClass || strClass === genClass; };\\n          var array_slice = ArrayPrototype.slice;\\n          var array_concat = ArrayPrototype.concat;\\n          var array_push = ArrayPrototype.push;\\n          var max = Math.max;\\n          // /add necessary es5-shim utilities\\n\\n          // 1. Let Target be the this value.\\n          var target = this;\\n          // 2. If IsCallable(Target) is false, throw a TypeError exception.\\n          if (!isCallable(target)) {\\n              throw new TypeError('Function.prototype.bind called on incompatible ' + target);\\n          }\\n          // 3. Let A be a new (possibly empty) internal list of all of the\\n          //   argument values provided after thisArg (arg1, arg2 etc), in order.\\n          // XXX slicedArgs will stand in for \\\"A\\\" if used\\n          var args = array_slice.call(arguments, 1); // for normal call\\n          // 4. Let F be a new native ECMAScript object.\\n          // 11. Set the [[Prototype]] internal property of F to the standard\\n          //   built-in Function prototype object as specified in 15.3.3.1.\\n          // 12. Set the [[Call]] internal property of F as described in\\n          //   15.3.4.5.1.\\n          // 13. Set the [[Construct]] internal property of F as described in\\n          //   15.3.4.5.2.\\n          // 14. Set the [[HasInstance]] internal property of F as described in\\n          //   15.3.4.5.3.\\n          var bound;\\n          var binder = function () {\\n\\n              if (this instanceof bound) {\\n                  // 15.3.4.5.2 [[Construct]]\\n                  // When the [[Construct]] internal method of a function object,\\n                  // F that was created using the bind function is called with a\\n                  // list of arguments ExtraArgs, the following steps are taken:\\n                  // 1. Let target be the value of F's [[TargetFunction]]\\n                  //   internal property.\\n                  // 2. If target has no [[Construct]] internal method, a\\n                  //   TypeError exception is thrown.\\n                  // 3. Let boundArgs be the value of F's [[BoundArgs]] internal\\n                  //   property.\\n                  // 4. Let args be a new list containing the same values as the\\n                  //   list boundArgs in the same order followed by the same\\n                  //   values as the list ExtraArgs in the same order.\\n                  // 5. Return the result of calling the [[Construct]] internal\\n                  //   method of target providing args as the arguments.\\n\\n                  var result = target.apply(\\n                      this,\\n                      array_concat.call(args, array_slice.call(arguments))\\n                  );\\n                  if ($Object(result) === result) {\\n                      return result;\\n                  }\\n                  return this;\\n\\n              } else {\\n                  // 15.3.4.5.1 [[Call]]\\n                  // When the [[Call]] internal method of a function object, F,\\n                  // which was created using the bind function is called with a\\n                  // this value and a list of arguments ExtraArgs, the following\\n                  // steps are taken:\\n                  // 1. Let boundArgs be the value of F's [[BoundArgs]] internal\\n                  //   property.\\n                  // 2. Let boundThis be the value of F's [[BoundThis]] internal\\n                  //   property.\\n                  // 3. Let target be the value of F's [[TargetFunction]] internal\\n                  //   property.\\n                  // 4. Let args be a new list containing the same values as the\\n                  //   list boundArgs in the same order followed by the same\\n                  //   values as the list ExtraArgs in the same order.\\n                  // 5. Return the result of calling the [[Call]] internal method\\n                  //   of target providing boundThis as the this value and\\n                  //   providing args as the arguments.\\n\\n                  // equiv: target.call(this, ...boundArgs, ...args)\\n                  return target.apply(\\n                      that,\\n                      array_concat.call(args, array_slice.call(arguments))\\n                  );\\n\\n              }\\n\\n          };\\n\\n          // 15. If the [[Class]] internal property of Target is \\\"Function\\\", then\\n          //     a. Let L be the length property of Target minus the length of A.\\n          //     b. Set the length own property of F to either 0 or L, whichever is\\n          //       larger.\\n          // 16. Else set the length own property of F to 0.\\n\\n          var boundLength = max(0, target.length - args.length);\\n\\n          // 17. Set the attributes of the length own property of F to the values\\n          //   specified in 15.3.5.1.\\n          var boundArgs = [];\\n          for (var i = 0; i < boundLength; i++) {\\n              array_push.call(boundArgs, '$' + i);\\n          }\\n\\n          // XXX Build a dynamic function with desired amount of arguments is the only\\n          // way to set the length property of a function.\\n          // In environments where Content Security Policies enabled (Chrome extensions,\\n          // for ex.) all use of eval or Function costructor throws an exception.\\n          // However in all of these environments Function.prototype.bind exists\\n          // and so this code will never be executed.\\n          bound = Function('binder', 'return function (' + boundArgs.join(',') + '){ return binder.apply(this, arguments); }')(binder);\\n\\n          if (target.prototype) {\\n              Empty.prototype = target.prototype;\\n              bound.prototype = new Empty();\\n              // Clean up dangling references.\\n              Empty.prototype = null;\\n          }\\n\\n          // TODO\\n          // 18. Set the [[Extensible]] internal property of F to true.\\n\\n          // TODO\\n          // 19. Let thrower be the [[ThrowTypeError]] function Object (13.2.3).\\n          // 20. Call the [[DefineOwnProperty]] internal method of F with\\n          //   arguments \\\"caller\\\", PropertyDescriptor {[[Get]]: thrower, [[Set]]:\\n          //   thrower, [[Enumerable]]: false, [[Configurable]]: false}, and\\n          //   false.\\n          // 21. Call the [[DefineOwnProperty]] internal method of F with\\n          //   arguments \\\"arguments\\\", PropertyDescriptor {[[Get]]: thrower,\\n          //   [[Set]]: thrower, [[Enumerable]]: false, [[Configurable]]: false},\\n          //   and false.\\n\\n          // TODO\\n          // NOTE Function objects created using Function.prototype.bind do not\\n          // have a prototype property or the [[Code]], [[FormalParameters]], and\\n          // [[Scope]] internal properties.\\n          // XXX can't delete prototype in pure-js.\\n\\n          // 22. Return F.\\n          return bound;\\n      }\\n  });\\n})\\n.call('object' === typeof window && window || 'object' === typeof self && self || 'object' === typeof global && global || {});\\n\\n(function(undefined) {\\n\\n// Detection from https://github.com/Financial-Times/polyfill-service/blob/master/packages/polyfill-library/polyfills/Window/detect.js\\nvar detect = ('Window' in this);\\n\\nif (detect) return\\n\\n// Polyfill from https://cdn.polyfill.io/v2/polyfill.js?features=Window&flags=always\\nif ((typeof WorkerGlobalScope === \\\"undefined\\\") && (typeof importScripts !== \\\"function\\\")) {\\n\\t(function (global) {\\n\\t\\tif (global.constructor) {\\n\\t\\t\\tglobal.Window = global.constructor;\\n\\t\\t} else {\\n\\t\\t\\t(global.Window = global.constructor = new Function('return function Window() {}')()).prototype = this;\\n\\t\\t}\\n\\t}(this));\\n}\\n\\n})\\n.call('object' === typeof window && window || 'object' === typeof self && self || 'object' === typeof global && global || {});\\n\\n(function(undefined) {\\n\\n// Detection from https://github.com/Financial-Times/polyfill-service/blob/master/packages/polyfill-library/polyfills/Document/detect.js\\nvar detect = (\\\"Document\\\" in this);\\n\\nif (detect) return\\n\\n// Polyfill from https://cdn.polyfill.io/v2/polyfill.js?features=Document&flags=always\\nif ((typeof WorkerGlobalScope === \\\"undefined\\\") && (typeof importScripts !== \\\"function\\\")) {\\n\\n\\tif (this.HTMLDocument) { // IE8\\n\\n\\t\\t// HTMLDocument is an extension of Document.  If the browser has HTMLDocument but not Document, the former will suffice as an alias for the latter.\\n\\t\\tthis.Document = this.HTMLDocument;\\n\\n\\t} else {\\n\\n\\t\\t// Create an empty function to act as the missing constructor for the document object, attach the document object as its prototype.  The function needs to be anonymous else it is hoisted and causes the feature detect to prematurely pass, preventing the assignments below being made.\\n\\t\\tthis.Document = this.HTMLDocument = document.constructor = (new Function('return function Document() {}')());\\n\\t\\tthis.Document.prototype = document;\\n\\t}\\n}\\n\\n\\n})\\n.call('object' === typeof window && window || 'object' === typeof self && self || 'object' === typeof global && global || {});\\n\\n(function(undefined) {\\n\\n// Detection from https://github.com/Financial-Times/polyfill-service/blob/master/packages/polyfill-library/polyfills/Element/detect.js\\nvar detect = ('Element' in this && 'HTMLElement' in this);\\n\\nif (detect) return\\n\\n// Polyfill from https://cdn.polyfill.io/v2/polyfill.js?features=Element&flags=always\\n(function () {\\n\\n\\t// IE8\\n\\tif (window.Element && !window.HTMLElement) {\\n\\t\\twindow.HTMLElement = window.Element;\\n\\t\\treturn;\\n\\t}\\n\\n\\t// create Element constructor\\n\\twindow.Element = window.HTMLElement = new Function('return function Element() {}')();\\n\\n\\t// generate sandboxed iframe\\n\\tvar vbody = document.appendChild(document.createElement('body'));\\n\\tvar frame = vbody.appendChild(document.createElement('iframe'));\\n\\n\\t// use sandboxed iframe to replicate Element functionality\\n\\tvar frameDocument = frame.contentWindow.document;\\n\\tvar prototype = Element.prototype = frameDocument.appendChild(frameDocument.createElement('*'));\\n\\tvar cache = {};\\n\\n\\t// polyfill Element.prototype on an element\\n\\tvar shiv = function (element, deep) {\\n\\t\\tvar\\n\\t\\tchildNodes = element.childNodes || [],\\n\\t\\tindex = -1,\\n\\t\\tkey, value, childNode;\\n\\n\\t\\tif (element.nodeType === 1 && element.constructor !== Element) {\\n\\t\\t\\telement.constructor = Element;\\n\\n\\t\\t\\tfor (key in cache) {\\n\\t\\t\\t\\tvalue = cache[key];\\n\\t\\t\\t\\telement[key] = value;\\n\\t\\t\\t}\\n\\t\\t}\\n\\n\\t\\twhile (childNode = deep && childNodes[++index]) {\\n\\t\\t\\tshiv(childNode, deep);\\n\\t\\t}\\n\\n\\t\\treturn element;\\n\\t};\\n\\n\\tvar elements = document.getElementsByTagName('*');\\n\\tvar nativeCreateElement = document.createElement;\\n\\tvar interval;\\n\\tvar loopLimit = 100;\\n\\n\\tprototype.attachEvent('onpropertychange', function (event) {\\n\\t\\tvar\\n\\t\\tpropertyName = event.propertyName,\\n\\t\\tnonValue = !cache.hasOwnProperty(propertyName),\\n\\t\\tnewValue = prototype[propertyName],\\n\\t\\toldValue = cache[propertyName],\\n\\t\\tindex = -1,\\n\\t\\telement;\\n\\n\\t\\twhile (element = elements[++index]) {\\n\\t\\t\\tif (element.nodeType === 1) {\\n\\t\\t\\t\\tif (nonValue || element[propertyName] === oldValue) {\\n\\t\\t\\t\\t\\telement[propertyName] = newValue;\\n\\t\\t\\t\\t}\\n\\t\\t\\t}\\n\\t\\t}\\n\\n\\t\\tcache[propertyName] = newValue;\\n\\t});\\n\\n\\tprototype.constructor = Element;\\n\\n\\tif (!prototype.hasAttribute) {\\n\\t\\t// <Element>.hasAttribute\\n\\t\\tprototype.hasAttribute = function hasAttribute(name) {\\n\\t\\t\\treturn this.getAttribute(name) !== null;\\n\\t\\t};\\n\\t}\\n\\n\\t// Apply Element prototype to the pre-existing DOM as soon as the body element appears.\\n\\tfunction bodyCheck() {\\n\\t\\tif (!(loopLimit--)) clearTimeout(interval);\\n\\t\\tif (document.body && !document.body.prototype && /(complete|interactive)/.test(document.readyState)) {\\n\\t\\t\\tshiv(document, true);\\n\\t\\t\\tif (interval && document.body.prototype) clearTimeout(interval);\\n\\t\\t\\treturn (!!document.body.prototype);\\n\\t\\t}\\n\\t\\treturn false;\\n\\t}\\n\\tif (!bodyCheck()) {\\n\\t\\tdocument.onreadystatechange = bodyCheck;\\n\\t\\tinterval = setInterval(bodyCheck, 25);\\n\\t}\\n\\n\\t// Apply to any new elements created after load\\n\\tdocument.createElement = function createElement(nodeName) {\\n\\t\\tvar element = nativeCreateElement(String(nodeName).toLowerCase());\\n\\t\\treturn shiv(element);\\n\\t};\\n\\n\\t// remove sandboxed iframe\\n\\tdocument.removeChild(vbody);\\n}());\\n\\n})\\n.call('object' === typeof window && window || 'object' === typeof self && self || 'object' === typeof global && global || {});\\n\\n(function(undefined) {\\n\\n// Detection from https://github.com/Financial-Times/polyfill-service/blob/master/packages/polyfill-library/polyfills/Event/detect.js\\nvar detect = (\\n  (function(global) {\\n\\n  \\tif (!('Event' in global)) return false;\\n  \\tif (typeof global.Event === 'function') return true;\\n\\n  \\ttry {\\n\\n  \\t\\t// In IE 9-11, the Event object exists but cannot be instantiated\\n  \\t\\tnew Event('click');\\n  \\t\\treturn true;\\n  \\t} catch(e) {\\n  \\t\\treturn false;\\n  \\t}\\n  }(this))\\n);\\n\\nif (detect) return\\n\\n// Polyfill from https://cdn.polyfill.io/v2/polyfill.js?features=Event&flags=always\\n(function () {\\n\\tvar unlistenableWindowEvents = {\\n\\t\\tclick: 1,\\n\\t\\tdblclick: 1,\\n\\t\\tkeyup: 1,\\n\\t\\tkeypress: 1,\\n\\t\\tkeydown: 1,\\n\\t\\tmousedown: 1,\\n\\t\\tmouseup: 1,\\n\\t\\tmousemove: 1,\\n\\t\\tmouseover: 1,\\n\\t\\tmouseenter: 1,\\n\\t\\tmouseleave: 1,\\n\\t\\tmouseout: 1,\\n\\t\\tstorage: 1,\\n\\t\\tstoragecommit: 1,\\n\\t\\ttextinput: 1\\n\\t};\\n\\n\\t// This polyfill depends on availability of `document` so will not run in a worker\\n\\t// However, we asssume there are no browsers with worker support that lack proper\\n\\t// support for `Event` within the worker\\n\\tif (typeof document === 'undefined' || typeof window === 'undefined') return;\\n\\n\\tfunction indexOf(array, element) {\\n\\t\\tvar\\n\\t\\tindex = -1,\\n\\t\\tlength = array.length;\\n\\n\\t\\twhile (++index < length) {\\n\\t\\t\\tif (index in array && array[index] === element) {\\n\\t\\t\\t\\treturn index;\\n\\t\\t\\t}\\n\\t\\t}\\n\\n\\t\\treturn -1;\\n\\t}\\n\\n\\tvar existingProto = (window.Event && window.Event.prototype) || null;\\n\\twindow.Event = Window.prototype.Event = function Event(type, eventInitDict) {\\n\\t\\tif (!type) {\\n\\t\\t\\tthrow new Error('Not enough arguments');\\n\\t\\t}\\n\\n\\t\\tvar event;\\n\\t\\t// Shortcut if browser supports createEvent\\n\\t\\tif ('createEvent' in document) {\\n\\t\\t\\tevent = document.createEvent('Event');\\n\\t\\t\\tvar bubbles = eventInitDict && eventInitDict.bubbles !== undefined ? eventInitDict.bubbles : false;\\n\\t\\t\\tvar cancelable = eventInitDict && eventInitDict.cancelable !== undefined ? eventInitDict.cancelable : false;\\n\\n\\t\\t\\tevent.initEvent(type, bubbles, cancelable);\\n\\n\\t\\t\\treturn event;\\n\\t\\t}\\n\\n\\t\\tevent = document.createEventObject();\\n\\n\\t\\tevent.type = type;\\n\\t\\tevent.bubbles = eventInitDict && eventInitDict.bubbles !== undefined ? eventInitDict.bubbles : false;\\n\\t\\tevent.cancelable = eventInitDict && eventInitDict.cancelable !== undefined ? eventInitDict.cancelable : false;\\n\\n\\t\\treturn event;\\n\\t};\\n\\tif (existingProto) {\\n\\t\\tObject.defineProperty(window.Event, 'prototype', {\\n\\t\\t\\tconfigurable: false,\\n\\t\\t\\tenumerable: false,\\n\\t\\t\\twritable: true,\\n\\t\\t\\tvalue: existingProto\\n\\t\\t});\\n\\t}\\n\\n\\tif (!('createEvent' in document)) {\\n\\t\\twindow.addEventListener = Window.prototype.addEventListener = Document.prototype.addEventListener = Element.prototype.addEventListener = function addEventListener() {\\n\\t\\t\\tvar\\n\\t\\t\\telement = this,\\n\\t\\t\\ttype = arguments[0],\\n\\t\\t\\tlistener = arguments[1];\\n\\n\\t\\t\\tif (element === window && type in unlistenableWindowEvents) {\\n\\t\\t\\t\\tthrow new Error('In IE8 the event: ' + type + ' is not available on the window object. Please see https://github.com/Financial-Times/polyfill-service/issues/317 for more information.');\\n\\t\\t\\t}\\n\\n\\t\\t\\tif (!element._events) {\\n\\t\\t\\t\\telement._events = {};\\n\\t\\t\\t}\\n\\n\\t\\t\\tif (!element._events[type]) {\\n\\t\\t\\t\\telement._events[type] = function (event) {\\n\\t\\t\\t\\t\\tvar\\n\\t\\t\\t\\t\\tlist = element._events[event.type].list,\\n\\t\\t\\t\\t\\tevents = list.slice(),\\n\\t\\t\\t\\t\\tindex = -1,\\n\\t\\t\\t\\t\\tlength = events.length,\\n\\t\\t\\t\\t\\teventElement;\\n\\n\\t\\t\\t\\t\\tevent.preventDefault = function preventDefault() {\\n\\t\\t\\t\\t\\t\\tif (event.cancelable !== false) {\\n\\t\\t\\t\\t\\t\\t\\tevent.returnValue = false;\\n\\t\\t\\t\\t\\t\\t}\\n\\t\\t\\t\\t\\t};\\n\\n\\t\\t\\t\\t\\tevent.stopPropagation = function stopPropagation() {\\n\\t\\t\\t\\t\\t\\tevent.cancelBubble = true;\\n\\t\\t\\t\\t\\t};\\n\\n\\t\\t\\t\\t\\tevent.stopImmediatePropagation = function stopImmediatePropagation() {\\n\\t\\t\\t\\t\\t\\tevent.cancelBubble = true;\\n\\t\\t\\t\\t\\t\\tevent.cancelImmediate = true;\\n\\t\\t\\t\\t\\t};\\n\\n\\t\\t\\t\\t\\tevent.currentTarget = element;\\n\\t\\t\\t\\t\\tevent.relatedTarget = event.fromElement || null;\\n\\t\\t\\t\\t\\tevent.target = event.target || event.srcElement || element;\\n\\t\\t\\t\\t\\tevent.timeStamp = new Date().getTime();\\n\\n\\t\\t\\t\\t\\tif (event.clientX) {\\n\\t\\t\\t\\t\\t\\tevent.pageX = event.clientX + document.documentElement.scrollLeft;\\n\\t\\t\\t\\t\\t\\tevent.pageY = event.clientY + document.documentElement.scrollTop;\\n\\t\\t\\t\\t\\t}\\n\\n\\t\\t\\t\\t\\twhile (++index < length && !event.cancelImmediate) {\\n\\t\\t\\t\\t\\t\\tif (index in events) {\\n\\t\\t\\t\\t\\t\\t\\teventElement = events[index];\\n\\n\\t\\t\\t\\t\\t\\t\\tif (indexOf(list, eventElement) !== -1 && typeof eventElement === 'function') {\\n\\t\\t\\t\\t\\t\\t\\t\\teventElement.call(element, event);\\n\\t\\t\\t\\t\\t\\t\\t}\\n\\t\\t\\t\\t\\t\\t}\\n\\t\\t\\t\\t\\t}\\n\\t\\t\\t\\t};\\n\\n\\t\\t\\t\\telement._events[type].list = [];\\n\\n\\t\\t\\t\\tif (element.attachEvent) {\\n\\t\\t\\t\\t\\telement.attachEvent('on' + type, element._events[type]);\\n\\t\\t\\t\\t}\\n\\t\\t\\t}\\n\\n\\t\\t\\telement._events[type].list.push(listener);\\n\\t\\t};\\n\\n\\t\\twindow.removeEventListener = Window.prototype.removeEventListener = Document.prototype.removeEventListener = Element.prototype.removeEventListener = function removeEventListener() {\\n\\t\\t\\tvar\\n\\t\\t\\telement = this,\\n\\t\\t\\ttype = arguments[0],\\n\\t\\t\\tlistener = arguments[1],\\n\\t\\t\\tindex;\\n\\n\\t\\t\\tif (element._events && element._events[type] && element._events[type].list) {\\n\\t\\t\\t\\tindex = indexOf(element._events[type].list, listener);\\n\\n\\t\\t\\t\\tif (index !== -1) {\\n\\t\\t\\t\\t\\telement._events[type].list.splice(index, 1);\\n\\n\\t\\t\\t\\t\\tif (!element._events[type].list.length) {\\n\\t\\t\\t\\t\\t\\tif (element.detachEvent) {\\n\\t\\t\\t\\t\\t\\t\\telement.detachEvent('on' + type, element._events[type]);\\n\\t\\t\\t\\t\\t\\t}\\n\\t\\t\\t\\t\\t\\tdelete element._events[type];\\n\\t\\t\\t\\t\\t}\\n\\t\\t\\t\\t}\\n\\t\\t\\t}\\n\\t\\t};\\n\\n\\t\\twindow.dispatchEvent = Window.prototype.dispatchEvent = Document.prototype.dispatchEvent = Element.prototype.dispatchEvent = function dispatchEvent(event) {\\n\\t\\t\\tif (!arguments.length) {\\n\\t\\t\\t\\tthrow new Error('Not enough arguments');\\n\\t\\t\\t}\\n\\n\\t\\t\\tif (!event || typeof event.type !== 'string') {\\n\\t\\t\\t\\tthrow new Error('DOM Events Exception 0');\\n\\t\\t\\t}\\n\\n\\t\\t\\tvar element = this, type = event.type;\\n\\n\\t\\t\\ttry {\\n\\t\\t\\t\\tif (!event.bubbles) {\\n\\t\\t\\t\\t\\tevent.cancelBubble = true;\\n\\n\\t\\t\\t\\t\\tvar cancelBubbleEvent = function (event) {\\n\\t\\t\\t\\t\\t\\tevent.cancelBubble = true;\\n\\n\\t\\t\\t\\t\\t\\t(element || window).detachEvent('on' + type, cancelBubbleEvent);\\n\\t\\t\\t\\t\\t};\\n\\n\\t\\t\\t\\t\\tthis.attachEvent('on' + type, cancelBubbleEvent);\\n\\t\\t\\t\\t}\\n\\n\\t\\t\\t\\tthis.fireEvent('on' + type, event);\\n\\t\\t\\t} catch (error) {\\n\\t\\t\\t\\tevent.target = element;\\n\\n\\t\\t\\t\\tdo {\\n\\t\\t\\t\\t\\tevent.currentTarget = element;\\n\\n\\t\\t\\t\\t\\tif ('_events' in element && typeof element._events[type] === 'function') {\\n\\t\\t\\t\\t\\t\\telement._events[type].call(element, event);\\n\\t\\t\\t\\t\\t}\\n\\n\\t\\t\\t\\t\\tif (typeof element['on' + type] === 'function') {\\n\\t\\t\\t\\t\\t\\telement['on' + type].call(element, event);\\n\\t\\t\\t\\t\\t}\\n\\n\\t\\t\\t\\t\\telement = element.nodeType === 9 ? element.parentWindow : element.parentNode;\\n\\t\\t\\t\\t} while (element && !event.cancelBubble);\\n\\t\\t\\t}\\n\\n\\t\\t\\treturn true;\\n\\t\\t};\\n\\n\\t\\t// Add the DOMContentLoaded Event\\n\\t\\tdocument.attachEvent('onreadystatechange', function() {\\n\\t\\t\\tif (document.readyState === 'complete') {\\n\\t\\t\\t\\tdocument.dispatchEvent(new Event('DOMContentLoaded', {\\n\\t\\t\\t\\t\\tbubbles: true\\n\\t\\t\\t\\t}));\\n\\t\\t\\t}\\n\\t\\t});\\n\\t}\\n}());\\n\\n})\\n.call('object' === typeof window && window || 'object' === typeof self && self || 'object' === typeof global && global || {});\\n\\n(function(undefined) {\\n\\n    // Detection from https://raw.githubusercontent.com/Financial-Times/polyfill-service/master/packages/polyfill-library/polyfills/DOMTokenList/detect.js\\n    var detect = (\\n      'DOMTokenList' in this && (function (x) {\\n        return 'classList' in x ? !x.classList.toggle('x', false) && !x.className : true;\\n      })(document.createElement('x'))\\n    );\\n\\n    if (detect) return\\n\\n    // Polyfill from https://raw.githubusercontent.com/Financial-Times/polyfill-service/master/packages/polyfill-library/polyfills/DOMTokenList/polyfill.js\\n    (function (global) {\\n      var nativeImpl = \\\"DOMTokenList\\\" in global && global.DOMTokenList;\\n\\n      if (\\n          !nativeImpl ||\\n          (\\n            !!document.createElementNS &&\\n            !!document.createElementNS('http://www.w3.org/2000/svg', 'svg') &&\\n            !(document.createElementNS(\\\"http://www.w3.org/2000/svg\\\", \\\"svg\\\").classList instanceof DOMTokenList)\\n          )\\n        ) {\\n        global.DOMTokenList = (function() { // eslint-disable-line no-unused-vars\\n          var dpSupport = true;\\n          var defineGetter = function (object, name, fn, configurable) {\\n            if (Object.defineProperty)\\n              Object.defineProperty(object, name, {\\n                configurable: false === dpSupport ? true : !!configurable,\\n                get: fn\\n              });\\n\\n            else object.__defineGetter__(name, fn);\\n          };\\n\\n          /** Ensure the browser allows Object.defineProperty to be used on native JavaScript objects. */\\n          try {\\n            defineGetter({}, \\\"support\\\");\\n          }\\n          catch (e) {\\n            dpSupport = false;\\n          }\\n\\n\\n          var _DOMTokenList = function (el, prop) {\\n            var that = this;\\n            var tokens = [];\\n            var tokenMap = {};\\n            var length = 0;\\n            var maxLength = 0;\\n            var addIndexGetter = function (i) {\\n              defineGetter(that, i, function () {\\n                preop();\\n                return tokens[i];\\n              }, false);\\n\\n            };\\n            var reindex = function () {\\n\\n              /** Define getter functions for array-like access to the tokenList's contents. */\\n              if (length >= maxLength)\\n                for (; maxLength < length; ++maxLength) {\\n                  addIndexGetter(maxLength);\\n                }\\n            };\\n\\n            /** Helper function called at the start of each class method. Internal use only. */\\n            var preop = function () {\\n              var error;\\n              var i;\\n              var args = arguments;\\n              var rSpace = /\\\\s+/;\\n\\n              /** Validate the token/s passed to an instance method, if any. */\\n              if (args.length)\\n                for (i = 0; i < args.length; ++i)\\n                  if (rSpace.test(args[i])) {\\n                    error = new SyntaxError('String \\\"' + args[i] + '\\\" ' + \\\"contains\\\" + ' an invalid character');\\n                    error.code = 5;\\n                    error.name = \\\"InvalidCharacterError\\\";\\n                    throw error;\\n                  }\\n\\n\\n              /** Split the new value apart by whitespace*/\\n              if (typeof el[prop] === \\\"object\\\") {\\n                tokens = (\\\"\\\" + el[prop].baseVal).replace(/^\\\\s+|\\\\s+$/g, \\\"\\\").split(rSpace);\\n              } else {\\n                tokens = (\\\"\\\" + el[prop]).replace(/^\\\\s+|\\\\s+$/g, \\\"\\\").split(rSpace);\\n              }\\n\\n              /** Avoid treating blank strings as single-item token lists */\\n              if (\\\"\\\" === tokens[0]) tokens = [];\\n\\n              /** Repopulate the internal token lists */\\n              tokenMap = {};\\n              for (i = 0; i < tokens.length; ++i)\\n                tokenMap[tokens[i]] = true;\\n              length = tokens.length;\\n              reindex();\\n            };\\n\\n            /** Populate our internal token list if the targeted attribute of the subject element isn't empty. */\\n            preop();\\n\\n            /** Return the number of tokens in the underlying string. Read-only. */\\n            defineGetter(that, \\\"length\\\", function () {\\n              preop();\\n              return length;\\n            });\\n\\n            /** Override the default toString/toLocaleString methods to return a space-delimited list of tokens when typecast. */\\n            that.toLocaleString =\\n              that.toString = function () {\\n                preop();\\n                return tokens.join(\\\" \\\");\\n              };\\n\\n            that.item = function (idx) {\\n              preop();\\n              return tokens[idx];\\n            };\\n\\n            that.contains = function (token) {\\n              preop();\\n              return !!tokenMap[token];\\n            };\\n\\n            that.add = function () {\\n              preop.apply(that, args = arguments);\\n\\n              for (var args, token, i = 0, l = args.length; i < l; ++i) {\\n                token = args[i];\\n                if (!tokenMap[token]) {\\n                  tokens.push(token);\\n                  tokenMap[token] = true;\\n                }\\n              }\\n\\n              /** Update the targeted attribute of the attached element if the token list's changed. */\\n              if (length !== tokens.length) {\\n                length = tokens.length >>> 0;\\n                if (typeof el[prop] === \\\"object\\\") {\\n                  el[prop].baseVal = tokens.join(\\\" \\\");\\n                } else {\\n                  el[prop] = tokens.join(\\\" \\\");\\n                }\\n                reindex();\\n              }\\n            };\\n\\n            that.remove = function () {\\n              preop.apply(that, args = arguments);\\n\\n              /** Build a hash of token names to compare against when recollecting our token list. */\\n              for (var args, ignore = {}, i = 0, t = []; i < args.length; ++i) {\\n                ignore[args[i]] = true;\\n                delete tokenMap[args[i]];\\n              }\\n\\n              /** Run through our tokens list and reassign only those that aren't defined in the hash declared above. */\\n              for (i = 0; i < tokens.length; ++i)\\n                if (!ignore[tokens[i]]) t.push(tokens[i]);\\n\\n              tokens = t;\\n              length = t.length >>> 0;\\n\\n              /** Update the targeted attribute of the attached element. */\\n              if (typeof el[prop] === \\\"object\\\") {\\n                el[prop].baseVal = tokens.join(\\\" \\\");\\n              } else {\\n                el[prop] = tokens.join(\\\" \\\");\\n              }\\n              reindex();\\n            };\\n\\n            that.toggle = function (token, force) {\\n              preop.apply(that, [token]);\\n\\n              /** Token state's being forced. */\\n              if (undefined !== force) {\\n                if (force) {\\n                  that.add(token);\\n                  return true;\\n                } else {\\n                  that.remove(token);\\n                  return false;\\n                }\\n              }\\n\\n              /** Token already exists in tokenList. Remove it, and return FALSE. */\\n              if (tokenMap[token]) {\\n                that.remove(token);\\n                return false;\\n              }\\n\\n              /** Otherwise, add the token and return TRUE. */\\n              that.add(token);\\n              return true;\\n            };\\n\\n            return that;\\n          };\\n\\n          return _DOMTokenList;\\n        }());\\n      }\\n\\n      // Add second argument to native DOMTokenList.toggle() if necessary\\n      (function () {\\n        var e = document.createElement('span');\\n        if (!('classList' in e)) return;\\n        e.classList.toggle('x', false);\\n        if (!e.classList.contains('x')) return;\\n        e.classList.constructor.prototype.toggle = function toggle(token /*, force*/) {\\n          var force = arguments[1];\\n          if (force === undefined) {\\n            var add = !this.contains(token);\\n            this[add ? 'add' : 'remove'](token);\\n            return add;\\n          }\\n          force = !!force;\\n          this[force ? 'add' : 'remove'](token);\\n          return force;\\n        };\\n      }());\\n\\n      // Add multiple arguments to native DOMTokenList.add() if necessary\\n      (function () {\\n        var e = document.createElement('span');\\n        if (!('classList' in e)) return;\\n        e.classList.add('a', 'b');\\n        if (e.classList.contains('b')) return;\\n        var native = e.classList.constructor.prototype.add;\\n        e.classList.constructor.prototype.add = function () {\\n          var args = arguments;\\n          var l = arguments.length;\\n          for (var i = 0; i < l; i++) {\\n            native.call(this, args[i]);\\n          }\\n        };\\n      }());\\n\\n      // Add multiple arguments to native DOMTokenList.remove() if necessary\\n      (function () {\\n        var e = document.createElement('span');\\n        if (!('classList' in e)) return;\\n        e.classList.add('a');\\n        e.classList.add('b');\\n        e.classList.remove('a', 'b');\\n        if (!e.classList.contains('b')) return;\\n        var native = e.classList.constructor.prototype.remove;\\n        e.classList.constructor.prototype.remove = function () {\\n          var args = arguments;\\n          var l = arguments.length;\\n          for (var i = 0; i < l; i++) {\\n            native.call(this, args[i]);\\n          }\\n        };\\n      }());\\n\\n    }(this));\\n\\n}).call('object' === typeof window && window || 'object' === typeof self && self || 'object' === typeof global && global || {});\\n\\n(function(undefined) {\\n\\n    // Detection from https://raw.githubusercontent.com/Financial-Times/polyfill-service/8717a9e04ac7aff99b4980fbedead98036b0929a/packages/polyfill-library/polyfills/Element/prototype/classList/detect.js\\n    var detect = (\\n      'document' in this && \\\"classList\\\" in document.documentElement && 'Element' in this && 'classList' in Element.prototype && (function () {\\n        var e = document.createElement('span');\\n        e.classList.add('a', 'b');\\n        return e.classList.contains('b');\\n      }())\\n    );\\n\\n    if (detect) return\\n\\n    // Polyfill from https://cdn.polyfill.io/v2/polyfill.js?features=Element.prototype.classList&flags=always\\n    (function (global) {\\n      var dpSupport = true;\\n      var defineGetter = function (object, name, fn, configurable) {\\n        if (Object.defineProperty)\\n          Object.defineProperty(object, name, {\\n            configurable: false === dpSupport ? true : !!configurable,\\n            get: fn\\n          });\\n\\n        else object.__defineGetter__(name, fn);\\n      };\\n      /** Ensure the browser allows Object.defineProperty to be used on native JavaScript objects. */\\n      try {\\n        defineGetter({}, \\\"support\\\");\\n      }\\n      catch (e) {\\n        dpSupport = false;\\n      }\\n      /** Polyfills a property with a DOMTokenList */\\n      var addProp = function (o, name, attr) {\\n\\n        defineGetter(o.prototype, name, function () {\\n          var tokenList;\\n\\n          var THIS = this,\\n\\n          /** Prevent this from firing twice for some reason. What the hell, IE. */\\n          gibberishProperty = \\\"__defineGetter__\\\" + \\\"DEFINE_PROPERTY\\\" + name;\\n          if(THIS[gibberishProperty]) return tokenList;\\n          THIS[gibberishProperty] = true;\\n\\n          /**\\n           * IE8 can't define properties on native JavaScript objects, so we'll use a dumb hack instead.\\n           *\\n           * What this is doing is creating a dummy element (\\\"reflection\\\") inside a detached phantom node (\\\"mirror\\\")\\n           * that serves as the target of Object.defineProperty instead. While we could simply use the subject HTML\\n           * element instead, this would conflict with element types which use indexed properties (such as forms and\\n           * select lists).\\n           */\\n          if (false === dpSupport) {\\n\\n            var visage;\\n            var mirror = addProp.mirror || document.createElement(\\\"div\\\");\\n            var reflections = mirror.childNodes;\\n            var l = reflections.length;\\n\\n            for (var i = 0; i < l; ++i)\\n              if (reflections[i]._R === THIS) {\\n                visage = reflections[i];\\n                break;\\n              }\\n\\n            /** Couldn't find an element's reflection inside the mirror. Materialise one. */\\n            visage || (visage = mirror.appendChild(document.createElement(\\\"div\\\")));\\n\\n            tokenList = DOMTokenList.call(visage, THIS, attr);\\n          } else tokenList = new DOMTokenList(THIS, attr);\\n\\n          defineGetter(THIS, name, function () {\\n            return tokenList;\\n          });\\n          delete THIS[gibberishProperty];\\n\\n          return tokenList;\\n        }, true);\\n      };\\n\\n      addProp(global.Element, \\\"classList\\\", \\\"className\\\");\\n      addProp(global.HTMLElement, \\\"classList\\\", \\\"className\\\");\\n      addProp(global.HTMLLinkElement, \\\"relList\\\", \\\"rel\\\");\\n      addProp(global.HTMLAnchorElement, \\\"relList\\\", \\\"rel\\\");\\n      addProp(global.HTMLAreaElement, \\\"relList\\\", \\\"rel\\\");\\n    }(this));\\n\\n}).call('object' === typeof window && window || 'object' === typeof self && self || 'object' === typeof global && global || {});\\n\\nfunction CharacterCount ($module) {\\n  this.$module = $module;\\n  this.$textarea = $module.querySelector('.govuk-js-character-count');\\n  if (this.$textarea) {\\n    this.$countMessage = $module.querySelector('[id=' + this.$textarea.id + '-info]');\\n  }\\n}\\n\\nCharacterCount.prototype.defaults = {\\n  characterCountAttribute: 'data-maxlength',\\n  wordCountAttribute: 'data-maxwords'\\n};\\n\\n// Initialize component\\nCharacterCount.prototype.init = function () {\\n  // Check for module\\n  var $module = this.$module;\\n  var $textarea = this.$textarea;\\n  var $countMessage = this.$countMessage;\\n\\n  if (!$textarea || !$countMessage) {\\n    return\\n  }\\n\\n  // We move count message right after the field\\n  // Kept for backwards compatibility\\n  $textarea.insertAdjacentElement('afterend', $countMessage);\\n\\n  // Read options set using dataset ('data-' values)\\n  this.options = this.getDataset($module);\\n\\n  // Determine the limit attribute (characters or words)\\n  var countAttribute = this.defaults.characterCountAttribute;\\n  if (this.options.maxwords) {\\n    countAttribute = this.defaults.wordCountAttribute;\\n  }\\n\\n  // Save the element limit\\n  this.maxLength = $module.getAttribute(countAttribute);\\n\\n  // Check for limit\\n  if (!this.maxLength) {\\n    return\\n  }\\n\\n  // Remove hard limit if set\\n  $module.removeAttribute('maxlength');\\n\\n  // Bind event changes to the textarea\\n  var boundChangeEvents = this.bindChangeEvents.bind(this);\\n  boundChangeEvents();\\n\\n  // Update count message\\n  var boundUpdateCountMessage = this.updateCountMessage.bind(this);\\n  boundUpdateCountMessage();\\n};\\n\\n// Read data attributes\\nCharacterCount.prototype.getDataset = function (element) {\\n  var dataset = {};\\n  var attributes = element.attributes;\\n  if (attributes) {\\n    for (var i = 0; i < attributes.length; i++) {\\n      var attribute = attributes[i];\\n      var match = attribute.name.match(/^data-(.+)/);\\n      if (match) {\\n        dataset[match[1]] = attribute.value;\\n      }\\n    }\\n  }\\n  return dataset\\n};\\n\\n// Counts characters or words in text\\nCharacterCount.prototype.count = function (text) {\\n  var length;\\n  if (this.options.maxwords) {\\n    var tokens = text.match(/\\\\S+/g) || []; // Matches consecutive non-whitespace chars\\n    length = tokens.length;\\n  } else {\\n    length = text.length;\\n  }\\n  return length\\n};\\n\\n// Bind input propertychange to the elements and update based on the change\\nCharacterCount.prototype.bindChangeEvents = function () {\\n  var $textarea = this.$textarea;\\n  $textarea.addEventListener('keyup', this.checkIfValueChanged.bind(this));\\n\\n  // Bind focus/blur events to start/stop polling\\n  $textarea.addEventListener('focus', this.handleFocus.bind(this));\\n  $textarea.addEventListener('blur', this.handleBlur.bind(this));\\n};\\n\\n// Speech recognition software such as Dragon NaturallySpeaking will modify the\\n// fields by directly changing its `value`. These changes don't trigger events\\n// in JavaScript, so we need to poll to handle when and if they occur.\\nCharacterCount.prototype.checkIfValueChanged = function () {\\n  if (!this.$textarea.oldValue) this.$textarea.oldValue = '';\\n  if (this.$textarea.value !== this.$textarea.oldValue) {\\n    this.$textarea.oldValue = this.$textarea.value;\\n    var boundUpdateCountMessage = this.updateCountMessage.bind(this);\\n    boundUpdateCountMessage();\\n  }\\n};\\n\\n// Update message box\\nCharacterCount.prototype.updateCountMessage = function () {\\n  var countElement = this.$textarea;\\n  var options = this.options;\\n  var countMessage = this.$countMessage;\\n\\n  // Determine the remaining number of characters/words\\n  var currentLength = this.count(countElement.value);\\n  var maxLength = this.maxLength;\\n  var remainingNumber = maxLength - currentLength;\\n\\n  // Set threshold if presented in options\\n  var thresholdPercent = options.threshold ? options.threshold : 0;\\n  var thresholdValue = maxLength * thresholdPercent / 100;\\n  if (thresholdValue > currentLength) {\\n    countMessage.classList.add('govuk-character-count__message--disabled');\\n    // Ensure threshold is hidden for users of assistive technologies\\n    countMessage.setAttribute('aria-hidden', true);\\n  } else {\\n    countMessage.classList.remove('govuk-character-count__message--disabled');\\n    // Ensure threshold is visible for users of assistive technologies\\n    countMessage.removeAttribute('aria-hidden');\\n  }\\n\\n  // Update styles\\n  if (remainingNumber < 0) {\\n    countElement.classList.add('govuk-textarea--error');\\n    countMessage.classList.remove('govuk-hint');\\n    countMessage.classList.add('govuk-error-message');\\n  } else {\\n    countElement.classList.remove('govuk-textarea--error');\\n    countMessage.classList.remove('govuk-error-message');\\n    countMessage.classList.add('govuk-hint');\\n  }\\n\\n  // Update message\\n  var charVerb = 'remaining';\\n  var charNoun = 'character';\\n  var displayNumber = remainingNumber;\\n  if (options.maxwords) {\\n    charNoun = 'word';\\n  }\\n  charNoun = charNoun + ((remainingNumber === -1 || remainingNumber === 1) ? '' : 's');\\n\\n  charVerb = (remainingNumber < 0) ? 'too many' : 'remaining';\\n  displayNumber = Math.abs(remainingNumber);\\n\\n  countMessage.innerHTML = 'You have ' + displayNumber + ' ' + charNoun + ' ' + charVerb;\\n};\\n\\nCharacterCount.prototype.handleFocus = function () {\\n  // Check if value changed on focus\\n  this.valueChecker = setInterval(this.checkIfValueChanged.bind(this), 1000);\\n};\\n\\nCharacterCount.prototype.handleBlur = function () {\\n  // Cancel value checking on blur\\n  clearInterval(this.valueChecker);\\n};\\n\\nreturn CharacterCount;\\n\\n})));\\n\\n/* WEBPACK VAR INJECTION */}.call(this, __webpack_require__(/*! ./../../../../webpack/buildin/global.js */ \\\"./node_modules/webpack/buildin/global.js\\\")))\\n\\n//# sourceURL=webpack://LBHFrontend/./node_modules/govuk-frontend/govuk/components/character-count/character-count.js?\");\n\n/***/ }),\n\n/***/ \"./node_modules/govuk-frontend/govuk/components/checkboxes/checkboxes.js\":\n/*!*******************************************************************************!*\\\n  !*** ./node_modules/govuk-frontend/govuk/components/checkboxes/checkboxes.js ***!\n  \\*******************************************************************************/\n/*! no static exports found */\n/***/ (function(module, exports, __webpack_require__) {\n\neval(\"/* WEBPACK VAR INJECTION */(function(global) {(function (global, factory) {\\n\\t true ? module.exports = factory() :\\n\\tundefined;\\n}(this, (function () { 'use strict';\\n\\n(function(undefined) {\\n\\n// Detection from https://github.com/Financial-Times/polyfill-service/blob/master/packages/polyfill-library/polyfills/Object/defineProperty/detect.js\\nvar detect = (\\n  // In IE8, defineProperty could only act on DOM elements, so full support\\n  // for the feature requires the ability to set a property on an arbitrary object\\n  'defineProperty' in Object && (function() {\\n  \\ttry {\\n  \\t\\tvar a = {};\\n  \\t\\tObject.defineProperty(a, 'test', {value:42});\\n  \\t\\treturn true;\\n  \\t} catch(e) {\\n  \\t\\treturn false\\n  \\t}\\n  }())\\n);\\n\\nif (detect) return\\n\\n// Polyfill from https://cdn.polyfill.io/v2/polyfill.js?features=Object.defineProperty&flags=always\\n(function (nativeDefineProperty) {\\n\\n\\tvar supportsAccessors = Object.prototype.hasOwnProperty('__defineGetter__');\\n\\tvar ERR_ACCESSORS_NOT_SUPPORTED = 'Getters & setters cannot be defined on this javascript engine';\\n\\tvar ERR_VALUE_ACCESSORS = 'A property cannot both have accessors and be writable or have a value';\\n\\n\\tObject.defineProperty = function defineProperty(object, property, descriptor) {\\n\\n\\t\\t// Where native support exists, assume it\\n\\t\\tif (nativeDefineProperty && (object === window || object === document || object === Element.prototype || object instanceof Element)) {\\n\\t\\t\\treturn nativeDefineProperty(object, property, descriptor);\\n\\t\\t}\\n\\n\\t\\tif (object === null || !(object instanceof Object || typeof object === 'object')) {\\n\\t\\t\\tthrow new TypeError('Object.defineProperty called on non-object');\\n\\t\\t}\\n\\n\\t\\tif (!(descriptor instanceof Object)) {\\n\\t\\t\\tthrow new TypeError('Property description must be an object');\\n\\t\\t}\\n\\n\\t\\tvar propertyString = String(property);\\n\\t\\tvar hasValueOrWritable = 'value' in descriptor || 'writable' in descriptor;\\n\\t\\tvar getterType = 'get' in descriptor && typeof descriptor.get;\\n\\t\\tvar setterType = 'set' in descriptor && typeof descriptor.set;\\n\\n\\t\\t// handle descriptor.get\\n\\t\\tif (getterType) {\\n\\t\\t\\tif (getterType !== 'function') {\\n\\t\\t\\t\\tthrow new TypeError('Getter must be a function');\\n\\t\\t\\t}\\n\\t\\t\\tif (!supportsAccessors) {\\n\\t\\t\\t\\tthrow new TypeError(ERR_ACCESSORS_NOT_SUPPORTED);\\n\\t\\t\\t}\\n\\t\\t\\tif (hasValueOrWritable) {\\n\\t\\t\\t\\tthrow new TypeError(ERR_VALUE_ACCESSORS);\\n\\t\\t\\t}\\n\\t\\t\\tObject.__defineGetter__.call(object, propertyString, descriptor.get);\\n\\t\\t} else {\\n\\t\\t\\tobject[propertyString] = descriptor.value;\\n\\t\\t}\\n\\n\\t\\t// handle descriptor.set\\n\\t\\tif (setterType) {\\n\\t\\t\\tif (setterType !== 'function') {\\n\\t\\t\\t\\tthrow new TypeError('Setter must be a function');\\n\\t\\t\\t}\\n\\t\\t\\tif (!supportsAccessors) {\\n\\t\\t\\t\\tthrow new TypeError(ERR_ACCESSORS_NOT_SUPPORTED);\\n\\t\\t\\t}\\n\\t\\t\\tif (hasValueOrWritable) {\\n\\t\\t\\t\\tthrow new TypeError(ERR_VALUE_ACCESSORS);\\n\\t\\t\\t}\\n\\t\\t\\tObject.__defineSetter__.call(object, propertyString, descriptor.set);\\n\\t\\t}\\n\\n\\t\\t// OK to define value unconditionally - if a getter has been specified as well, an error would be thrown above\\n\\t\\tif ('value' in descriptor) {\\n\\t\\t\\tobject[propertyString] = descriptor.value;\\n\\t\\t}\\n\\n\\t\\treturn object;\\n\\t};\\n}(Object.defineProperty));\\n})\\n.call('object' === typeof window && window || 'object' === typeof self && self || 'object' === typeof global && global || {});\\n\\n(function(undefined) {\\n  // Detection from https://github.com/Financial-Times/polyfill-service/blob/master/packages/polyfill-library/polyfills/Function/prototype/bind/detect.js\\n  var detect = 'bind' in Function.prototype;\\n\\n  if (detect) return\\n\\n  // Polyfill from https://cdn.polyfill.io/v2/polyfill.js?features=Function.prototype.bind&flags=always\\n  Object.defineProperty(Function.prototype, 'bind', {\\n      value: function bind(that) { // .length is 1\\n          // add necessary es5-shim utilities\\n          var $Array = Array;\\n          var $Object = Object;\\n          var ObjectPrototype = $Object.prototype;\\n          var ArrayPrototype = $Array.prototype;\\n          var Empty = function Empty() {};\\n          var to_string = ObjectPrototype.toString;\\n          var hasToStringTag = typeof Symbol === 'function' && typeof Symbol.toStringTag === 'symbol';\\n          var isCallable; /* inlined from https://npmjs.com/is-callable */ var fnToStr = Function.prototype.toString, tryFunctionObject = function tryFunctionObject(value) { try { fnToStr.call(value); return true; } catch (e) { return false; } }, fnClass = '[object Function]', genClass = '[object GeneratorFunction]'; isCallable = function isCallable(value) { if (typeof value !== 'function') { return false; } if (hasToStringTag) { return tryFunctionObject(value); } var strClass = to_string.call(value); return strClass === fnClass || strClass === genClass; };\\n          var array_slice = ArrayPrototype.slice;\\n          var array_concat = ArrayPrototype.concat;\\n          var array_push = ArrayPrototype.push;\\n          var max = Math.max;\\n          // /add necessary es5-shim utilities\\n\\n          // 1. Let Target be the this value.\\n          var target = this;\\n          // 2. If IsCallable(Target) is false, throw a TypeError exception.\\n          if (!isCallable(target)) {\\n              throw new TypeError('Function.prototype.bind called on incompatible ' + target);\\n          }\\n          // 3. Let A be a new (possibly empty) internal list of all of the\\n          //   argument values provided after thisArg (arg1, arg2 etc), in order.\\n          // XXX slicedArgs will stand in for \\\"A\\\" if used\\n          var args = array_slice.call(arguments, 1); // for normal call\\n          // 4. Let F be a new native ECMAScript object.\\n          // 11. Set the [[Prototype]] internal property of F to the standard\\n          //   built-in Function prototype object as specified in 15.3.3.1.\\n          // 12. Set the [[Call]] internal property of F as described in\\n          //   15.3.4.5.1.\\n          // 13. Set the [[Construct]] internal property of F as described in\\n          //   15.3.4.5.2.\\n          // 14. Set the [[HasInstance]] internal property of F as described in\\n          //   15.3.4.5.3.\\n          var bound;\\n          var binder = function () {\\n\\n              if (this instanceof bound) {\\n                  // 15.3.4.5.2 [[Construct]]\\n                  // When the [[Construct]] internal method of a function object,\\n                  // F that was created using the bind function is called with a\\n                  // list of arguments ExtraArgs, the following steps are taken:\\n                  // 1. Let target be the value of F's [[TargetFunction]]\\n                  //   internal property.\\n                  // 2. If target has no [[Construct]] internal method, a\\n                  //   TypeError exception is thrown.\\n                  // 3. Let boundArgs be the value of F's [[BoundArgs]] internal\\n                  //   property.\\n                  // 4. Let args be a new list containing the same values as the\\n                  //   list boundArgs in the same order followed by the same\\n                  //   values as the list ExtraArgs in the same order.\\n                  // 5. Return the result of calling the [[Construct]] internal\\n                  //   method of target providing args as the arguments.\\n\\n                  var result = target.apply(\\n                      this,\\n                      array_concat.call(args, array_slice.call(arguments))\\n                  );\\n                  if ($Object(result) === result) {\\n                      return result;\\n                  }\\n                  return this;\\n\\n              } else {\\n                  // 15.3.4.5.1 [[Call]]\\n                  // When the [[Call]] internal method of a function object, F,\\n                  // which was created using the bind function is called with a\\n                  // this value and a list of arguments ExtraArgs, the following\\n                  // steps are taken:\\n                  // 1. Let boundArgs be the value of F's [[BoundArgs]] internal\\n                  //   property.\\n                  // 2. Let boundThis be the value of F's [[BoundThis]] internal\\n                  //   property.\\n                  // 3. Let target be the value of F's [[TargetFunction]] internal\\n                  //   property.\\n                  // 4. Let args be a new list containing the same values as the\\n                  //   list boundArgs in the same order followed by the same\\n                  //   values as the list ExtraArgs in the same order.\\n                  // 5. Return the result of calling the [[Call]] internal method\\n                  //   of target providing boundThis as the this value and\\n                  //   providing args as the arguments.\\n\\n                  // equiv: target.call(this, ...boundArgs, ...args)\\n                  return target.apply(\\n                      that,\\n                      array_concat.call(args, array_slice.call(arguments))\\n                  );\\n\\n              }\\n\\n          };\\n\\n          // 15. If the [[Class]] internal property of Target is \\\"Function\\\", then\\n          //     a. Let L be the length property of Target minus the length of A.\\n          //     b. Set the length own property of F to either 0 or L, whichever is\\n          //       larger.\\n          // 16. Else set the length own property of F to 0.\\n\\n          var boundLength = max(0, target.length - args.length);\\n\\n          // 17. Set the attributes of the length own property of F to the values\\n          //   specified in 15.3.5.1.\\n          var boundArgs = [];\\n          for (var i = 0; i < boundLength; i++) {\\n              array_push.call(boundArgs, '$' + i);\\n          }\\n\\n          // XXX Build a dynamic function with desired amount of arguments is the only\\n          // way to set the length property of a function.\\n          // In environments where Content Security Policies enabled (Chrome extensions,\\n          // for ex.) all use of eval or Function costructor throws an exception.\\n          // However in all of these environments Function.prototype.bind exists\\n          // and so this code will never be executed.\\n          bound = Function('binder', 'return function (' + boundArgs.join(',') + '){ return binder.apply(this, arguments); }')(binder);\\n\\n          if (target.prototype) {\\n              Empty.prototype = target.prototype;\\n              bound.prototype = new Empty();\\n              // Clean up dangling references.\\n              Empty.prototype = null;\\n          }\\n\\n          // TODO\\n          // 18. Set the [[Extensible]] internal property of F to true.\\n\\n          // TODO\\n          // 19. Let thrower be the [[ThrowTypeError]] function Object (13.2.3).\\n          // 20. Call the [[DefineOwnProperty]] internal method of F with\\n          //   arguments \\\"caller\\\", PropertyDescriptor {[[Get]]: thrower, [[Set]]:\\n          //   thrower, [[Enumerable]]: false, [[Configurable]]: false}, and\\n          //   false.\\n          // 21. Call the [[DefineOwnProperty]] internal method of F with\\n          //   arguments \\\"arguments\\\", PropertyDescriptor {[[Get]]: thrower,\\n          //   [[Set]]: thrower, [[Enumerable]]: false, [[Configurable]]: false},\\n          //   and false.\\n\\n          // TODO\\n          // NOTE Function objects created using Function.prototype.bind do not\\n          // have a prototype property or the [[Code]], [[FormalParameters]], and\\n          // [[Scope]] internal properties.\\n          // XXX can't delete prototype in pure-js.\\n\\n          // 22. Return F.\\n          return bound;\\n      }\\n  });\\n})\\n.call('object' === typeof window && window || 'object' === typeof self && self || 'object' === typeof global && global || {});\\n\\n(function(undefined) {\\n\\n// Detection from https://github.com/Financial-Times/polyfill-service/blob/master/packages/polyfill-library/polyfills/Window/detect.js\\nvar detect = ('Window' in this);\\n\\nif (detect) return\\n\\n// Polyfill from https://cdn.polyfill.io/v2/polyfill.js?features=Window&flags=always\\nif ((typeof WorkerGlobalScope === \\\"undefined\\\") && (typeof importScripts !== \\\"function\\\")) {\\n\\t(function (global) {\\n\\t\\tif (global.constructor) {\\n\\t\\t\\tglobal.Window = global.constructor;\\n\\t\\t} else {\\n\\t\\t\\t(global.Window = global.constructor = new Function('return function Window() {}')()).prototype = this;\\n\\t\\t}\\n\\t}(this));\\n}\\n\\n})\\n.call('object' === typeof window && window || 'object' === typeof self && self || 'object' === typeof global && global || {});\\n\\n(function(undefined) {\\n\\n// Detection from https://github.com/Financial-Times/polyfill-service/blob/master/packages/polyfill-library/polyfills/Document/detect.js\\nvar detect = (\\\"Document\\\" in this);\\n\\nif (detect) return\\n\\n// Polyfill from https://cdn.polyfill.io/v2/polyfill.js?features=Document&flags=always\\nif ((typeof WorkerGlobalScope === \\\"undefined\\\") && (typeof importScripts !== \\\"function\\\")) {\\n\\n\\tif (this.HTMLDocument) { // IE8\\n\\n\\t\\t// HTMLDocument is an extension of Document.  If the browser has HTMLDocument but not Document, the former will suffice as an alias for the latter.\\n\\t\\tthis.Document = this.HTMLDocument;\\n\\n\\t} else {\\n\\n\\t\\t// Create an empty function to act as the missing constructor for the document object, attach the document object as its prototype.  The function needs to be anonymous else it is hoisted and causes the feature detect to prematurely pass, preventing the assignments below being made.\\n\\t\\tthis.Document = this.HTMLDocument = document.constructor = (new Function('return function Document() {}')());\\n\\t\\tthis.Document.prototype = document;\\n\\t}\\n}\\n\\n\\n})\\n.call('object' === typeof window && window || 'object' === typeof self && self || 'object' === typeof global && global || {});\\n\\n(function(undefined) {\\n\\n// Detection from https://github.com/Financial-Times/polyfill-service/blob/master/packages/polyfill-library/polyfills/Element/detect.js\\nvar detect = ('Element' in this && 'HTMLElement' in this);\\n\\nif (detect) return\\n\\n// Polyfill from https://cdn.polyfill.io/v2/polyfill.js?features=Element&flags=always\\n(function () {\\n\\n\\t// IE8\\n\\tif (window.Element && !window.HTMLElement) {\\n\\t\\twindow.HTMLElement = window.Element;\\n\\t\\treturn;\\n\\t}\\n\\n\\t// create Element constructor\\n\\twindow.Element = window.HTMLElement = new Function('return function Element() {}')();\\n\\n\\t// generate sandboxed iframe\\n\\tvar vbody = document.appendChild(document.createElement('body'));\\n\\tvar frame = vbody.appendChild(document.createElement('iframe'));\\n\\n\\t// use sandboxed iframe to replicate Element functionality\\n\\tvar frameDocument = frame.contentWindow.document;\\n\\tvar prototype = Element.prototype = frameDocument.appendChild(frameDocument.createElement('*'));\\n\\tvar cache = {};\\n\\n\\t// polyfill Element.prototype on an element\\n\\tvar shiv = function (element, deep) {\\n\\t\\tvar\\n\\t\\tchildNodes = element.childNodes || [],\\n\\t\\tindex = -1,\\n\\t\\tkey, value, childNode;\\n\\n\\t\\tif (element.nodeType === 1 && element.constructor !== Element) {\\n\\t\\t\\telement.constructor = Element;\\n\\n\\t\\t\\tfor (key in cache) {\\n\\t\\t\\t\\tvalue = cache[key];\\n\\t\\t\\t\\telement[key] = value;\\n\\t\\t\\t}\\n\\t\\t}\\n\\n\\t\\twhile (childNode = deep && childNodes[++index]) {\\n\\t\\t\\tshiv(childNode, deep);\\n\\t\\t}\\n\\n\\t\\treturn element;\\n\\t};\\n\\n\\tvar elements = document.getElementsByTagName('*');\\n\\tvar nativeCreateElement = document.createElement;\\n\\tvar interval;\\n\\tvar loopLimit = 100;\\n\\n\\tprototype.attachEvent('onpropertychange', function (event) {\\n\\t\\tvar\\n\\t\\tpropertyName = event.propertyName,\\n\\t\\tnonValue = !cache.hasOwnProperty(propertyName),\\n\\t\\tnewValue = prototype[propertyName],\\n\\t\\toldValue = cache[propertyName],\\n\\t\\tindex = -1,\\n\\t\\telement;\\n\\n\\t\\twhile (element = elements[++index]) {\\n\\t\\t\\tif (element.nodeType === 1) {\\n\\t\\t\\t\\tif (nonValue || element[propertyName] === oldValue) {\\n\\t\\t\\t\\t\\telement[propertyName] = newValue;\\n\\t\\t\\t\\t}\\n\\t\\t\\t}\\n\\t\\t}\\n\\n\\t\\tcache[propertyName] = newValue;\\n\\t});\\n\\n\\tprototype.constructor = Element;\\n\\n\\tif (!prototype.hasAttribute) {\\n\\t\\t// <Element>.hasAttribute\\n\\t\\tprototype.hasAttribute = function hasAttribute(name) {\\n\\t\\t\\treturn this.getAttribute(name) !== null;\\n\\t\\t};\\n\\t}\\n\\n\\t// Apply Element prototype to the pre-existing DOM as soon as the body element appears.\\n\\tfunction bodyCheck() {\\n\\t\\tif (!(loopLimit--)) clearTimeout(interval);\\n\\t\\tif (document.body && !document.body.prototype && /(complete|interactive)/.test(document.readyState)) {\\n\\t\\t\\tshiv(document, true);\\n\\t\\t\\tif (interval && document.body.prototype) clearTimeout(interval);\\n\\t\\t\\treturn (!!document.body.prototype);\\n\\t\\t}\\n\\t\\treturn false;\\n\\t}\\n\\tif (!bodyCheck()) {\\n\\t\\tdocument.onreadystatechange = bodyCheck;\\n\\t\\tinterval = setInterval(bodyCheck, 25);\\n\\t}\\n\\n\\t// Apply to any new elements created after load\\n\\tdocument.createElement = function createElement(nodeName) {\\n\\t\\tvar element = nativeCreateElement(String(nodeName).toLowerCase());\\n\\t\\treturn shiv(element);\\n\\t};\\n\\n\\t// remove sandboxed iframe\\n\\tdocument.removeChild(vbody);\\n}());\\n\\n})\\n.call('object' === typeof window && window || 'object' === typeof self && self || 'object' === typeof global && global || {});\\n\\n(function(undefined) {\\n\\n// Detection from https://github.com/Financial-Times/polyfill-service/blob/master/packages/polyfill-library/polyfills/Event/detect.js\\nvar detect = (\\n  (function(global) {\\n\\n  \\tif (!('Event' in global)) return false;\\n  \\tif (typeof global.Event === 'function') return true;\\n\\n  \\ttry {\\n\\n  \\t\\t// In IE 9-11, the Event object exists but cannot be instantiated\\n  \\t\\tnew Event('click');\\n  \\t\\treturn true;\\n  \\t} catch(e) {\\n  \\t\\treturn false;\\n  \\t}\\n  }(this))\\n);\\n\\nif (detect) return\\n\\n// Polyfill from https://cdn.polyfill.io/v2/polyfill.js?features=Event&flags=always\\n(function () {\\n\\tvar unlistenableWindowEvents = {\\n\\t\\tclick: 1,\\n\\t\\tdblclick: 1,\\n\\t\\tkeyup: 1,\\n\\t\\tkeypress: 1,\\n\\t\\tkeydown: 1,\\n\\t\\tmousedown: 1,\\n\\t\\tmouseup: 1,\\n\\t\\tmousemove: 1,\\n\\t\\tmouseover: 1,\\n\\t\\tmouseenter: 1,\\n\\t\\tmouseleave: 1,\\n\\t\\tmouseout: 1,\\n\\t\\tstorage: 1,\\n\\t\\tstoragecommit: 1,\\n\\t\\ttextinput: 1\\n\\t};\\n\\n\\t// This polyfill depends on availability of `document` so will not run in a worker\\n\\t// However, we asssume there are no browsers with worker support that lack proper\\n\\t// support for `Event` within the worker\\n\\tif (typeof document === 'undefined' || typeof window === 'undefined') return;\\n\\n\\tfunction indexOf(array, element) {\\n\\t\\tvar\\n\\t\\tindex = -1,\\n\\t\\tlength = array.length;\\n\\n\\t\\twhile (++index < length) {\\n\\t\\t\\tif (index in array && array[index] === element) {\\n\\t\\t\\t\\treturn index;\\n\\t\\t\\t}\\n\\t\\t}\\n\\n\\t\\treturn -1;\\n\\t}\\n\\n\\tvar existingProto = (window.Event && window.Event.prototype) || null;\\n\\twindow.Event = Window.prototype.Event = function Event(type, eventInitDict) {\\n\\t\\tif (!type) {\\n\\t\\t\\tthrow new Error('Not enough arguments');\\n\\t\\t}\\n\\n\\t\\tvar event;\\n\\t\\t// Shortcut if browser supports createEvent\\n\\t\\tif ('createEvent' in document) {\\n\\t\\t\\tevent = document.createEvent('Event');\\n\\t\\t\\tvar bubbles = eventInitDict && eventInitDict.bubbles !== undefined ? eventInitDict.bubbles : false;\\n\\t\\t\\tvar cancelable = eventInitDict && eventInitDict.cancelable !== undefined ? eventInitDict.cancelable : false;\\n\\n\\t\\t\\tevent.initEvent(type, bubbles, cancelable);\\n\\n\\t\\t\\treturn event;\\n\\t\\t}\\n\\n\\t\\tevent = document.createEventObject();\\n\\n\\t\\tevent.type = type;\\n\\t\\tevent.bubbles = eventInitDict && eventInitDict.bubbles !== undefined ? eventInitDict.bubbles : false;\\n\\t\\tevent.cancelable = eventInitDict && eventInitDict.cancelable !== undefined ? eventInitDict.cancelable : false;\\n\\n\\t\\treturn event;\\n\\t};\\n\\tif (existingProto) {\\n\\t\\tObject.defineProperty(window.Event, 'prototype', {\\n\\t\\t\\tconfigurable: false,\\n\\t\\t\\tenumerable: false,\\n\\t\\t\\twritable: true,\\n\\t\\t\\tvalue: existingProto\\n\\t\\t});\\n\\t}\\n\\n\\tif (!('createEvent' in document)) {\\n\\t\\twindow.addEventListener = Window.prototype.addEventListener = Document.prototype.addEventListener = Element.prototype.addEventListener = function addEventListener() {\\n\\t\\t\\tvar\\n\\t\\t\\telement = this,\\n\\t\\t\\ttype = arguments[0],\\n\\t\\t\\tlistener = arguments[1];\\n\\n\\t\\t\\tif (element === window && type in unlistenableWindowEvents) {\\n\\t\\t\\t\\tthrow new Error('In IE8 the event: ' + type + ' is not available on the window object. Please see https://github.com/Financial-Times/polyfill-service/issues/317 for more information.');\\n\\t\\t\\t}\\n\\n\\t\\t\\tif (!element._events) {\\n\\t\\t\\t\\telement._events = {};\\n\\t\\t\\t}\\n\\n\\t\\t\\tif (!element._events[type]) {\\n\\t\\t\\t\\telement._events[type] = function (event) {\\n\\t\\t\\t\\t\\tvar\\n\\t\\t\\t\\t\\tlist = element._events[event.type].list,\\n\\t\\t\\t\\t\\tevents = list.slice(),\\n\\t\\t\\t\\t\\tindex = -1,\\n\\t\\t\\t\\t\\tlength = events.length,\\n\\t\\t\\t\\t\\teventElement;\\n\\n\\t\\t\\t\\t\\tevent.preventDefault = function preventDefault() {\\n\\t\\t\\t\\t\\t\\tif (event.cancelable !== false) {\\n\\t\\t\\t\\t\\t\\t\\tevent.returnValue = false;\\n\\t\\t\\t\\t\\t\\t}\\n\\t\\t\\t\\t\\t};\\n\\n\\t\\t\\t\\t\\tevent.stopPropagation = function stopPropagation() {\\n\\t\\t\\t\\t\\t\\tevent.cancelBubble = true;\\n\\t\\t\\t\\t\\t};\\n\\n\\t\\t\\t\\t\\tevent.stopImmediatePropagation = function stopImmediatePropagation() {\\n\\t\\t\\t\\t\\t\\tevent.cancelBubble = true;\\n\\t\\t\\t\\t\\t\\tevent.cancelImmediate = true;\\n\\t\\t\\t\\t\\t};\\n\\n\\t\\t\\t\\t\\tevent.currentTarget = element;\\n\\t\\t\\t\\t\\tevent.relatedTarget = event.fromElement || null;\\n\\t\\t\\t\\t\\tevent.target = event.target || event.srcElement || element;\\n\\t\\t\\t\\t\\tevent.timeStamp = new Date().getTime();\\n\\n\\t\\t\\t\\t\\tif (event.clientX) {\\n\\t\\t\\t\\t\\t\\tevent.pageX = event.clientX + document.documentElement.scrollLeft;\\n\\t\\t\\t\\t\\t\\tevent.pageY = event.clientY + document.documentElement.scrollTop;\\n\\t\\t\\t\\t\\t}\\n\\n\\t\\t\\t\\t\\twhile (++index < length && !event.cancelImmediate) {\\n\\t\\t\\t\\t\\t\\tif (index in events) {\\n\\t\\t\\t\\t\\t\\t\\teventElement = events[index];\\n\\n\\t\\t\\t\\t\\t\\t\\tif (indexOf(list, eventElement) !== -1 && typeof eventElement === 'function') {\\n\\t\\t\\t\\t\\t\\t\\t\\teventElement.call(element, event);\\n\\t\\t\\t\\t\\t\\t\\t}\\n\\t\\t\\t\\t\\t\\t}\\n\\t\\t\\t\\t\\t}\\n\\t\\t\\t\\t};\\n\\n\\t\\t\\t\\telement._events[type].list = [];\\n\\n\\t\\t\\t\\tif (element.attachEvent) {\\n\\t\\t\\t\\t\\telement.attachEvent('on' + type, element._events[type]);\\n\\t\\t\\t\\t}\\n\\t\\t\\t}\\n\\n\\t\\t\\telement._events[type].list.push(listener);\\n\\t\\t};\\n\\n\\t\\twindow.removeEventListener = Window.prototype.removeEventListener = Document.prototype.removeEventListener = Element.prototype.removeEventListener = function removeEventListener() {\\n\\t\\t\\tvar\\n\\t\\t\\telement = this,\\n\\t\\t\\ttype = arguments[0],\\n\\t\\t\\tlistener = arguments[1],\\n\\t\\t\\tindex;\\n\\n\\t\\t\\tif (element._events && element._events[type] && element._events[type].list) {\\n\\t\\t\\t\\tindex = indexOf(element._events[type].list, listener);\\n\\n\\t\\t\\t\\tif (index !== -1) {\\n\\t\\t\\t\\t\\telement._events[type].list.splice(index, 1);\\n\\n\\t\\t\\t\\t\\tif (!element._events[type].list.length) {\\n\\t\\t\\t\\t\\t\\tif (element.detachEvent) {\\n\\t\\t\\t\\t\\t\\t\\telement.detachEvent('on' + type, element._events[type]);\\n\\t\\t\\t\\t\\t\\t}\\n\\t\\t\\t\\t\\t\\tdelete element._events[type];\\n\\t\\t\\t\\t\\t}\\n\\t\\t\\t\\t}\\n\\t\\t\\t}\\n\\t\\t};\\n\\n\\t\\twindow.dispatchEvent = Window.prototype.dispatchEvent = Document.prototype.dispatchEvent = Element.prototype.dispatchEvent = function dispatchEvent(event) {\\n\\t\\t\\tif (!arguments.length) {\\n\\t\\t\\t\\tthrow new Error('Not enough arguments');\\n\\t\\t\\t}\\n\\n\\t\\t\\tif (!event || typeof event.type !== 'string') {\\n\\t\\t\\t\\tthrow new Error('DOM Events Exception 0');\\n\\t\\t\\t}\\n\\n\\t\\t\\tvar element = this, type = event.type;\\n\\n\\t\\t\\ttry {\\n\\t\\t\\t\\tif (!event.bubbles) {\\n\\t\\t\\t\\t\\tevent.cancelBubble = true;\\n\\n\\t\\t\\t\\t\\tvar cancelBubbleEvent = function (event) {\\n\\t\\t\\t\\t\\t\\tevent.cancelBubble = true;\\n\\n\\t\\t\\t\\t\\t\\t(element || window).detachEvent('on' + type, cancelBubbleEvent);\\n\\t\\t\\t\\t\\t};\\n\\n\\t\\t\\t\\t\\tthis.attachEvent('on' + type, cancelBubbleEvent);\\n\\t\\t\\t\\t}\\n\\n\\t\\t\\t\\tthis.fireEvent('on' + type, event);\\n\\t\\t\\t} catch (error) {\\n\\t\\t\\t\\tevent.target = element;\\n\\n\\t\\t\\t\\tdo {\\n\\t\\t\\t\\t\\tevent.currentTarget = element;\\n\\n\\t\\t\\t\\t\\tif ('_events' in element && typeof element._events[type] === 'function') {\\n\\t\\t\\t\\t\\t\\telement._events[type].call(element, event);\\n\\t\\t\\t\\t\\t}\\n\\n\\t\\t\\t\\t\\tif (typeof element['on' + type] === 'function') {\\n\\t\\t\\t\\t\\t\\telement['on' + type].call(element, event);\\n\\t\\t\\t\\t\\t}\\n\\n\\t\\t\\t\\t\\telement = element.nodeType === 9 ? element.parentWindow : element.parentNode;\\n\\t\\t\\t\\t} while (element && !event.cancelBubble);\\n\\t\\t\\t}\\n\\n\\t\\t\\treturn true;\\n\\t\\t};\\n\\n\\t\\t// Add the DOMContentLoaded Event\\n\\t\\tdocument.attachEvent('onreadystatechange', function() {\\n\\t\\t\\tif (document.readyState === 'complete') {\\n\\t\\t\\t\\tdocument.dispatchEvent(new Event('DOMContentLoaded', {\\n\\t\\t\\t\\t\\tbubbles: true\\n\\t\\t\\t\\t}));\\n\\t\\t\\t}\\n\\t\\t});\\n\\t}\\n}());\\n\\n})\\n.call('object' === typeof window && window || 'object' === typeof self && self || 'object' === typeof global && global || {});\\n\\n(function(undefined) {\\n\\n    // Detection from https://raw.githubusercontent.com/Financial-Times/polyfill-service/master/packages/polyfill-library/polyfills/DOMTokenList/detect.js\\n    var detect = (\\n      'DOMTokenList' in this && (function (x) {\\n        return 'classList' in x ? !x.classList.toggle('x', false) && !x.className : true;\\n      })(document.createElement('x'))\\n    );\\n\\n    if (detect) return\\n\\n    // Polyfill from https://raw.githubusercontent.com/Financial-Times/polyfill-service/master/packages/polyfill-library/polyfills/DOMTokenList/polyfill.js\\n    (function (global) {\\n      var nativeImpl = \\\"DOMTokenList\\\" in global && global.DOMTokenList;\\n\\n      if (\\n          !nativeImpl ||\\n          (\\n            !!document.createElementNS &&\\n            !!document.createElementNS('http://www.w3.org/2000/svg', 'svg') &&\\n            !(document.createElementNS(\\\"http://www.w3.org/2000/svg\\\", \\\"svg\\\").classList instanceof DOMTokenList)\\n          )\\n        ) {\\n        global.DOMTokenList = (function() { // eslint-disable-line no-unused-vars\\n          var dpSupport = true;\\n          var defineGetter = function (object, name, fn, configurable) {\\n            if (Object.defineProperty)\\n              Object.defineProperty(object, name, {\\n                configurable: false === dpSupport ? true : !!configurable,\\n                get: fn\\n              });\\n\\n            else object.__defineGetter__(name, fn);\\n          };\\n\\n          /** Ensure the browser allows Object.defineProperty to be used on native JavaScript objects. */\\n          try {\\n            defineGetter({}, \\\"support\\\");\\n          }\\n          catch (e) {\\n            dpSupport = false;\\n          }\\n\\n\\n          var _DOMTokenList = function (el, prop) {\\n            var that = this;\\n            var tokens = [];\\n            var tokenMap = {};\\n            var length = 0;\\n            var maxLength = 0;\\n            var addIndexGetter = function (i) {\\n              defineGetter(that, i, function () {\\n                preop();\\n                return tokens[i];\\n              }, false);\\n\\n            };\\n            var reindex = function () {\\n\\n              /** Define getter functions for array-like access to the tokenList's contents. */\\n              if (length >= maxLength)\\n                for (; maxLength < length; ++maxLength) {\\n                  addIndexGetter(maxLength);\\n                }\\n            };\\n\\n            /** Helper function called at the start of each class method. Internal use only. */\\n            var preop = function () {\\n              var error;\\n              var i;\\n              var args = arguments;\\n              var rSpace = /\\\\s+/;\\n\\n              /** Validate the token/s passed to an instance method, if any. */\\n              if (args.length)\\n                for (i = 0; i < args.length; ++i)\\n                  if (rSpace.test(args[i])) {\\n                    error = new SyntaxError('String \\\"' + args[i] + '\\\" ' + \\\"contains\\\" + ' an invalid character');\\n                    error.code = 5;\\n                    error.name = \\\"InvalidCharacterError\\\";\\n                    throw error;\\n                  }\\n\\n\\n              /** Split the new value apart by whitespace*/\\n              if (typeof el[prop] === \\\"object\\\") {\\n                tokens = (\\\"\\\" + el[prop].baseVal).replace(/^\\\\s+|\\\\s+$/g, \\\"\\\").split(rSpace);\\n              } else {\\n                tokens = (\\\"\\\" + el[prop]).replace(/^\\\\s+|\\\\s+$/g, \\\"\\\").split(rSpace);\\n              }\\n\\n              /** Avoid treating blank strings as single-item token lists */\\n              if (\\\"\\\" === tokens[0]) tokens = [];\\n\\n              /** Repopulate the internal token lists */\\n              tokenMap = {};\\n              for (i = 0; i < tokens.length; ++i)\\n                tokenMap[tokens[i]] = true;\\n              length = tokens.length;\\n              reindex();\\n            };\\n\\n            /** Populate our internal token list if the targeted attribute of the subject element isn't empty. */\\n            preop();\\n\\n            /** Return the number of tokens in the underlying string. Read-only. */\\n            defineGetter(that, \\\"length\\\", function () {\\n              preop();\\n              return length;\\n            });\\n\\n            /** Override the default toString/toLocaleString methods to return a space-delimited list of tokens when typecast. */\\n            that.toLocaleString =\\n              that.toString = function () {\\n                preop();\\n                return tokens.join(\\\" \\\");\\n              };\\n\\n            that.item = function (idx) {\\n              preop();\\n              return tokens[idx];\\n            };\\n\\n            that.contains = function (token) {\\n              preop();\\n              return !!tokenMap[token];\\n            };\\n\\n            that.add = function () {\\n              preop.apply(that, args = arguments);\\n\\n              for (var args, token, i = 0, l = args.length; i < l; ++i) {\\n                token = args[i];\\n                if (!tokenMap[token]) {\\n                  tokens.push(token);\\n                  tokenMap[token] = true;\\n                }\\n              }\\n\\n              /** Update the targeted attribute of the attached element if the token list's changed. */\\n              if (length !== tokens.length) {\\n                length = tokens.length >>> 0;\\n                if (typeof el[prop] === \\\"object\\\") {\\n                  el[prop].baseVal = tokens.join(\\\" \\\");\\n                } else {\\n                  el[prop] = tokens.join(\\\" \\\");\\n                }\\n                reindex();\\n              }\\n            };\\n\\n            that.remove = function () {\\n              preop.apply(that, args = arguments);\\n\\n              /** Build a hash of token names to compare against when recollecting our token list. */\\n              for (var args, ignore = {}, i = 0, t = []; i < args.length; ++i) {\\n                ignore[args[i]] = true;\\n                delete tokenMap[args[i]];\\n              }\\n\\n              /** Run through our tokens list and reassign only those that aren't defined in the hash declared above. */\\n              for (i = 0; i < tokens.length; ++i)\\n                if (!ignore[tokens[i]]) t.push(tokens[i]);\\n\\n              tokens = t;\\n              length = t.length >>> 0;\\n\\n              /** Update the targeted attribute of the attached element. */\\n              if (typeof el[prop] === \\\"object\\\") {\\n                el[prop].baseVal = tokens.join(\\\" \\\");\\n              } else {\\n                el[prop] = tokens.join(\\\" \\\");\\n              }\\n              reindex();\\n            };\\n\\n            that.toggle = function (token, force) {\\n              preop.apply(that, [token]);\\n\\n              /** Token state's being forced. */\\n              if (undefined !== force) {\\n                if (force) {\\n                  that.add(token);\\n                  return true;\\n                } else {\\n                  that.remove(token);\\n                  return false;\\n                }\\n              }\\n\\n              /** Token already exists in tokenList. Remove it, and return FALSE. */\\n              if (tokenMap[token]) {\\n                that.remove(token);\\n                return false;\\n              }\\n\\n              /** Otherwise, add the token and return TRUE. */\\n              that.add(token);\\n              return true;\\n            };\\n\\n            return that;\\n          };\\n\\n          return _DOMTokenList;\\n        }());\\n      }\\n\\n      // Add second argument to native DOMTokenList.toggle() if necessary\\n      (function () {\\n        var e = document.createElement('span');\\n        if (!('classList' in e)) return;\\n        e.classList.toggle('x', false);\\n        if (!e.classList.contains('x')) return;\\n        e.classList.constructor.prototype.toggle = function toggle(token /*, force*/) {\\n          var force = arguments[1];\\n          if (force === undefined) {\\n            var add = !this.contains(token);\\n            this[add ? 'add' : 'remove'](token);\\n            return add;\\n          }\\n          force = !!force;\\n          this[force ? 'add' : 'remove'](token);\\n          return force;\\n        };\\n      }());\\n\\n      // Add multiple arguments to native DOMTokenList.add() if necessary\\n      (function () {\\n        var e = document.createElement('span');\\n        if (!('classList' in e)) return;\\n        e.classList.add('a', 'b');\\n        if (e.classList.contains('b')) return;\\n        var native = e.classList.constructor.prototype.add;\\n        e.classList.constructor.prototype.add = function () {\\n          var args = arguments;\\n          var l = arguments.length;\\n          for (var i = 0; i < l; i++) {\\n            native.call(this, args[i]);\\n          }\\n        };\\n      }());\\n\\n      // Add multiple arguments to native DOMTokenList.remove() if necessary\\n      (function () {\\n        var e = document.createElement('span');\\n        if (!('classList' in e)) return;\\n        e.classList.add('a');\\n        e.classList.add('b');\\n        e.classList.remove('a', 'b');\\n        if (!e.classList.contains('b')) return;\\n        var native = e.classList.constructor.prototype.remove;\\n        e.classList.constructor.prototype.remove = function () {\\n          var args = arguments;\\n          var l = arguments.length;\\n          for (var i = 0; i < l; i++) {\\n            native.call(this, args[i]);\\n          }\\n        };\\n      }());\\n\\n    }(this));\\n\\n}).call('object' === typeof window && window || 'object' === typeof self && self || 'object' === typeof global && global || {});\\n\\n(function(undefined) {\\n\\n    // Detection from https://raw.githubusercontent.com/Financial-Times/polyfill-service/8717a9e04ac7aff99b4980fbedead98036b0929a/packages/polyfill-library/polyfills/Element/prototype/classList/detect.js\\n    var detect = (\\n      'document' in this && \\\"classList\\\" in document.documentElement && 'Element' in this && 'classList' in Element.prototype && (function () {\\n        var e = document.createElement('span');\\n        e.classList.add('a', 'b');\\n        return e.classList.contains('b');\\n      }())\\n    );\\n\\n    if (detect) return\\n\\n    // Polyfill from https://cdn.polyfill.io/v2/polyfill.js?features=Element.prototype.classList&flags=always\\n    (function (global) {\\n      var dpSupport = true;\\n      var defineGetter = function (object, name, fn, configurable) {\\n        if (Object.defineProperty)\\n          Object.defineProperty(object, name, {\\n            configurable: false === dpSupport ? true : !!configurable,\\n            get: fn\\n          });\\n\\n        else object.__defineGetter__(name, fn);\\n      };\\n      /** Ensure the browser allows Object.defineProperty to be used on native JavaScript objects. */\\n      try {\\n        defineGetter({}, \\\"support\\\");\\n      }\\n      catch (e) {\\n        dpSupport = false;\\n      }\\n      /** Polyfills a property with a DOMTokenList */\\n      var addProp = function (o, name, attr) {\\n\\n        defineGetter(o.prototype, name, function () {\\n          var tokenList;\\n\\n          var THIS = this,\\n\\n          /** Prevent this from firing twice for some reason. What the hell, IE. */\\n          gibberishProperty = \\\"__defineGetter__\\\" + \\\"DEFINE_PROPERTY\\\" + name;\\n          if(THIS[gibberishProperty]) return tokenList;\\n          THIS[gibberishProperty] = true;\\n\\n          /**\\n           * IE8 can't define properties on native JavaScript objects, so we'll use a dumb hack instead.\\n           *\\n           * What this is doing is creating a dummy element (\\\"reflection\\\") inside a detached phantom node (\\\"mirror\\\")\\n           * that serves as the target of Object.defineProperty instead. While we could simply use the subject HTML\\n           * element instead, this would conflict with element types which use indexed properties (such as forms and\\n           * select lists).\\n           */\\n          if (false === dpSupport) {\\n\\n            var visage;\\n            var mirror = addProp.mirror || document.createElement(\\\"div\\\");\\n            var reflections = mirror.childNodes;\\n            var l = reflections.length;\\n\\n            for (var i = 0; i < l; ++i)\\n              if (reflections[i]._R === THIS) {\\n                visage = reflections[i];\\n                break;\\n              }\\n\\n            /** Couldn't find an element's reflection inside the mirror. Materialise one. */\\n            visage || (visage = mirror.appendChild(document.createElement(\\\"div\\\")));\\n\\n            tokenList = DOMTokenList.call(visage, THIS, attr);\\n          } else tokenList = new DOMTokenList(THIS, attr);\\n\\n          defineGetter(THIS, name, function () {\\n            return tokenList;\\n          });\\n          delete THIS[gibberishProperty];\\n\\n          return tokenList;\\n        }, true);\\n      };\\n\\n      addProp(global.Element, \\\"classList\\\", \\\"className\\\");\\n      addProp(global.HTMLElement, \\\"classList\\\", \\\"className\\\");\\n      addProp(global.HTMLLinkElement, \\\"relList\\\", \\\"rel\\\");\\n      addProp(global.HTMLAnchorElement, \\\"relList\\\", \\\"rel\\\");\\n      addProp(global.HTMLAreaElement, \\\"relList\\\", \\\"rel\\\");\\n    }(this));\\n\\n}).call('object' === typeof window && window || 'object' === typeof self && self || 'object' === typeof global && global || {});\\n\\n/**\\n * TODO: Ideally this would be a NodeList.prototype.forEach polyfill\\n * This seems to fail in IE8, requires more investigation.\\n * See: https://github.com/imagitama/nodelist-foreach-polyfill\\n */\\nfunction nodeListForEach (nodes, callback) {\\n  if (window.NodeList.prototype.forEach) {\\n    return nodes.forEach(callback)\\n  }\\n  for (var i = 0; i < nodes.length; i++) {\\n    callback.call(window, nodes[i], i, nodes);\\n  }\\n}\\n\\nfunction Checkboxes ($module) {\\n  this.$module = $module;\\n  this.$inputs = $module.querySelectorAll('input[type=\\\"checkbox\\\"]');\\n}\\n\\nCheckboxes.prototype.init = function () {\\n  var $module = this.$module;\\n  var $inputs = this.$inputs;\\n\\n  /**\\n  * Loop over all items with [data-controls]\\n  * Check if they have a matching conditional reveal\\n  * If they do, assign attributes.\\n  **/\\n  nodeListForEach($inputs, function ($input) {\\n    var controls = $input.getAttribute('data-aria-controls');\\n\\n    // Check if input controls anything\\n    // Check if content exists, before setting attributes.\\n    if (!controls || !$module.querySelector('#' + controls)) {\\n      return\\n    }\\n\\n    // If we have content that is controlled, set attributes.\\n    $input.setAttribute('aria-controls', controls);\\n    $input.removeAttribute('data-aria-controls');\\n    this.setAttributes($input);\\n  }.bind(this));\\n\\n  // Handle events\\n  $module.addEventListener('click', this.handleClick.bind(this));\\n};\\n\\nCheckboxes.prototype.setAttributes = function ($input) {\\n  var inputIsChecked = $input.checked;\\n  $input.setAttribute('aria-expanded', inputIsChecked);\\n\\n  var $content = this.$module.querySelector('#' + $input.getAttribute('aria-controls'));\\n  if ($content) {\\n    $content.classList.toggle('govuk-checkboxes__conditional--hidden', !inputIsChecked);\\n  }\\n};\\n\\nCheckboxes.prototype.handleClick = function (event) {\\n  var $target = event.target;\\n\\n  // If a checkbox with aria-controls, handle click\\n  var isCheckbox = $target.getAttribute('type') === 'checkbox';\\n  var hasAriaControls = $target.getAttribute('aria-controls');\\n  if (isCheckbox && hasAriaControls) {\\n    this.setAttributes($target);\\n  }\\n};\\n\\nreturn Checkboxes;\\n\\n})));\\n\\n/* WEBPACK VAR INJECTION */}.call(this, __webpack_require__(/*! ./../../../../webpack/buildin/global.js */ \\\"./node_modules/webpack/buildin/global.js\\\")))\\n\\n//# sourceURL=webpack://LBHFrontend/./node_modules/govuk-frontend/govuk/components/checkboxes/checkboxes.js?\");\n\n/***/ }),\n\n/***/ \"./node_modules/govuk-frontend/govuk/components/details/details.js\":\n/*!*************************************************************************!*\\\n  !*** ./node_modules/govuk-frontend/govuk/components/details/details.js ***!\n  \\*************************************************************************/\n/*! no static exports found */\n/***/ (function(module, exports, __webpack_require__) {\n\neval(\"/* WEBPACK VAR INJECTION */(function(global) {(function (global, factory) {\\n\\t true ? module.exports = factory() :\\n\\tundefined;\\n}(this, (function () { 'use strict';\\n\\n(function(undefined) {\\n\\n// Detection from https://github.com/Financial-Times/polyfill-service/blob/master/packages/polyfill-library/polyfills/Object/defineProperty/detect.js\\nvar detect = (\\n  // In IE8, defineProperty could only act on DOM elements, so full support\\n  // for the feature requires the ability to set a property on an arbitrary object\\n  'defineProperty' in Object && (function() {\\n  \\ttry {\\n  \\t\\tvar a = {};\\n  \\t\\tObject.defineProperty(a, 'test', {value:42});\\n  \\t\\treturn true;\\n  \\t} catch(e) {\\n  \\t\\treturn false\\n  \\t}\\n  }())\\n);\\n\\nif (detect) return\\n\\n// Polyfill from https://cdn.polyfill.io/v2/polyfill.js?features=Object.defineProperty&flags=always\\n(function (nativeDefineProperty) {\\n\\n\\tvar supportsAccessors = Object.prototype.hasOwnProperty('__defineGetter__');\\n\\tvar ERR_ACCESSORS_NOT_SUPPORTED = 'Getters & setters cannot be defined on this javascript engine';\\n\\tvar ERR_VALUE_ACCESSORS = 'A property cannot both have accessors and be writable or have a value';\\n\\n\\tObject.defineProperty = function defineProperty(object, property, descriptor) {\\n\\n\\t\\t// Where native support exists, assume it\\n\\t\\tif (nativeDefineProperty && (object === window || object === document || object === Element.prototype || object instanceof Element)) {\\n\\t\\t\\treturn nativeDefineProperty(object, property, descriptor);\\n\\t\\t}\\n\\n\\t\\tif (object === null || !(object instanceof Object || typeof object === 'object')) {\\n\\t\\t\\tthrow new TypeError('Object.defineProperty called on non-object');\\n\\t\\t}\\n\\n\\t\\tif (!(descriptor instanceof Object)) {\\n\\t\\t\\tthrow new TypeError('Property description must be an object');\\n\\t\\t}\\n\\n\\t\\tvar propertyString = String(property);\\n\\t\\tvar hasValueOrWritable = 'value' in descriptor || 'writable' in descriptor;\\n\\t\\tvar getterType = 'get' in descriptor && typeof descriptor.get;\\n\\t\\tvar setterType = 'set' in descriptor && typeof descriptor.set;\\n\\n\\t\\t// handle descriptor.get\\n\\t\\tif (getterType) {\\n\\t\\t\\tif (getterType !== 'function') {\\n\\t\\t\\t\\tthrow new TypeError('Getter must be a function');\\n\\t\\t\\t}\\n\\t\\t\\tif (!supportsAccessors) {\\n\\t\\t\\t\\tthrow new TypeError(ERR_ACCESSORS_NOT_SUPPORTED);\\n\\t\\t\\t}\\n\\t\\t\\tif (hasValueOrWritable) {\\n\\t\\t\\t\\tthrow new TypeError(ERR_VALUE_ACCESSORS);\\n\\t\\t\\t}\\n\\t\\t\\tObject.__defineGetter__.call(object, propertyString, descriptor.get);\\n\\t\\t} else {\\n\\t\\t\\tobject[propertyString] = descriptor.value;\\n\\t\\t}\\n\\n\\t\\t// handle descriptor.set\\n\\t\\tif (setterType) {\\n\\t\\t\\tif (setterType !== 'function') {\\n\\t\\t\\t\\tthrow new TypeError('Setter must be a function');\\n\\t\\t\\t}\\n\\t\\t\\tif (!supportsAccessors) {\\n\\t\\t\\t\\tthrow new TypeError(ERR_ACCESSORS_NOT_SUPPORTED);\\n\\t\\t\\t}\\n\\t\\t\\tif (hasValueOrWritable) {\\n\\t\\t\\t\\tthrow new TypeError(ERR_VALUE_ACCESSORS);\\n\\t\\t\\t}\\n\\t\\t\\tObject.__defineSetter__.call(object, propertyString, descriptor.set);\\n\\t\\t}\\n\\n\\t\\t// OK to define value unconditionally - if a getter has been specified as well, an error would be thrown above\\n\\t\\tif ('value' in descriptor) {\\n\\t\\t\\tobject[propertyString] = descriptor.value;\\n\\t\\t}\\n\\n\\t\\treturn object;\\n\\t};\\n}(Object.defineProperty));\\n})\\n.call('object' === typeof window && window || 'object' === typeof self && self || 'object' === typeof global && global || {});\\n\\n(function(undefined) {\\n  // Detection from https://github.com/Financial-Times/polyfill-service/blob/master/packages/polyfill-library/polyfills/Function/prototype/bind/detect.js\\n  var detect = 'bind' in Function.prototype;\\n\\n  if (detect) return\\n\\n  // Polyfill from https://cdn.polyfill.io/v2/polyfill.js?features=Function.prototype.bind&flags=always\\n  Object.defineProperty(Function.prototype, 'bind', {\\n      value: function bind(that) { // .length is 1\\n          // add necessary es5-shim utilities\\n          var $Array = Array;\\n          var $Object = Object;\\n          var ObjectPrototype = $Object.prototype;\\n          var ArrayPrototype = $Array.prototype;\\n          var Empty = function Empty() {};\\n          var to_string = ObjectPrototype.toString;\\n          var hasToStringTag = typeof Symbol === 'function' && typeof Symbol.toStringTag === 'symbol';\\n          var isCallable; /* inlined from https://npmjs.com/is-callable */ var fnToStr = Function.prototype.toString, tryFunctionObject = function tryFunctionObject(value) { try { fnToStr.call(value); return true; } catch (e) { return false; } }, fnClass = '[object Function]', genClass = '[object GeneratorFunction]'; isCallable = function isCallable(value) { if (typeof value !== 'function') { return false; } if (hasToStringTag) { return tryFunctionObject(value); } var strClass = to_string.call(value); return strClass === fnClass || strClass === genClass; };\\n          var array_slice = ArrayPrototype.slice;\\n          var array_concat = ArrayPrototype.concat;\\n          var array_push = ArrayPrototype.push;\\n          var max = Math.max;\\n          // /add necessary es5-shim utilities\\n\\n          // 1. Let Target be the this value.\\n          var target = this;\\n          // 2. If IsCallable(Target) is false, throw a TypeError exception.\\n          if (!isCallable(target)) {\\n              throw new TypeError('Function.prototype.bind called on incompatible ' + target);\\n          }\\n          // 3. Let A be a new (possibly empty) internal list of all of the\\n          //   argument values provided after thisArg (arg1, arg2 etc), in order.\\n          // XXX slicedArgs will stand in for \\\"A\\\" if used\\n          var args = array_slice.call(arguments, 1); // for normal call\\n          // 4. Let F be a new native ECMAScript object.\\n          // 11. Set the [[Prototype]] internal property of F to the standard\\n          //   built-in Function prototype object as specified in 15.3.3.1.\\n          // 12. Set the [[Call]] internal property of F as described in\\n          //   15.3.4.5.1.\\n          // 13. Set the [[Construct]] internal property of F as described in\\n          //   15.3.4.5.2.\\n          // 14. Set the [[HasInstance]] internal property of F as described in\\n          //   15.3.4.5.3.\\n          var bound;\\n          var binder = function () {\\n\\n              if (this instanceof bound) {\\n                  // 15.3.4.5.2 [[Construct]]\\n                  // When the [[Construct]] internal method of a function object,\\n                  // F that was created using the bind function is called with a\\n                  // list of arguments ExtraArgs, the following steps are taken:\\n                  // 1. Let target be the value of F's [[TargetFunction]]\\n                  //   internal property.\\n                  // 2. If target has no [[Construct]] internal method, a\\n                  //   TypeError exception is thrown.\\n                  // 3. Let boundArgs be the value of F's [[BoundArgs]] internal\\n                  //   property.\\n                  // 4. Let args be a new list containing the same values as the\\n                  //   list boundArgs in the same order followed by the same\\n                  //   values as the list ExtraArgs in the same order.\\n                  // 5. Return the result of calling the [[Construct]] internal\\n                  //   method of target providing args as the arguments.\\n\\n                  var result = target.apply(\\n                      this,\\n                      array_concat.call(args, array_slice.call(arguments))\\n                  );\\n                  if ($Object(result) === result) {\\n                      return result;\\n                  }\\n                  return this;\\n\\n              } else {\\n                  // 15.3.4.5.1 [[Call]]\\n                  // When the [[Call]] internal method of a function object, F,\\n                  // which was created using the bind function is called with a\\n                  // this value and a list of arguments ExtraArgs, the following\\n                  // steps are taken:\\n                  // 1. Let boundArgs be the value of F's [[BoundArgs]] internal\\n                  //   property.\\n                  // 2. Let boundThis be the value of F's [[BoundThis]] internal\\n                  //   property.\\n                  // 3. Let target be the value of F's [[TargetFunction]] internal\\n                  //   property.\\n                  // 4. Let args be a new list containing the same values as the\\n                  //   list boundArgs in the same order followed by the same\\n                  //   values as the list ExtraArgs in the same order.\\n                  // 5. Return the result of calling the [[Call]] internal method\\n                  //   of target providing boundThis as the this value and\\n                  //   providing args as the arguments.\\n\\n                  // equiv: target.call(this, ...boundArgs, ...args)\\n                  return target.apply(\\n                      that,\\n                      array_concat.call(args, array_slice.call(arguments))\\n                  );\\n\\n              }\\n\\n          };\\n\\n          // 15. If the [[Class]] internal property of Target is \\\"Function\\\", then\\n          //     a. Let L be the length property of Target minus the length of A.\\n          //     b. Set the length own property of F to either 0 or L, whichever is\\n          //       larger.\\n          // 16. Else set the length own property of F to 0.\\n\\n          var boundLength = max(0, target.length - args.length);\\n\\n          // 17. Set the attributes of the length own property of F to the values\\n          //   specified in 15.3.5.1.\\n          var boundArgs = [];\\n          for (var i = 0; i < boundLength; i++) {\\n              array_push.call(boundArgs, '$' + i);\\n          }\\n\\n          // XXX Build a dynamic function with desired amount of arguments is the only\\n          // way to set the length property of a function.\\n          // In environments where Content Security Policies enabled (Chrome extensions,\\n          // for ex.) all use of eval or Function costructor throws an exception.\\n          // However in all of these environments Function.prototype.bind exists\\n          // and so this code will never be executed.\\n          bound = Function('binder', 'return function (' + boundArgs.join(',') + '){ return binder.apply(this, arguments); }')(binder);\\n\\n          if (target.prototype) {\\n              Empty.prototype = target.prototype;\\n              bound.prototype = new Empty();\\n              // Clean up dangling references.\\n              Empty.prototype = null;\\n          }\\n\\n          // TODO\\n          // 18. Set the [[Extensible]] internal property of F to true.\\n\\n          // TODO\\n          // 19. Let thrower be the [[ThrowTypeError]] function Object (13.2.3).\\n          // 20. Call the [[DefineOwnProperty]] internal method of F with\\n          //   arguments \\\"caller\\\", PropertyDescriptor {[[Get]]: thrower, [[Set]]:\\n          //   thrower, [[Enumerable]]: false, [[Configurable]]: false}, and\\n          //   false.\\n          // 21. Call the [[DefineOwnProperty]] internal method of F with\\n          //   arguments \\\"arguments\\\", PropertyDescriptor {[[Get]]: thrower,\\n          //   [[Set]]: thrower, [[Enumerable]]: false, [[Configurable]]: false},\\n          //   and false.\\n\\n          // TODO\\n          // NOTE Function objects created using Function.prototype.bind do not\\n          // have a prototype property or the [[Code]], [[FormalParameters]], and\\n          // [[Scope]] internal properties.\\n          // XXX can't delete prototype in pure-js.\\n\\n          // 22. Return F.\\n          return bound;\\n      }\\n  });\\n})\\n.call('object' === typeof window && window || 'object' === typeof self && self || 'object' === typeof global && global || {});\\n\\n(function(undefined) {\\n\\n// Detection from https://github.com/Financial-Times/polyfill-service/blob/master/packages/polyfill-library/polyfills/Window/detect.js\\nvar detect = ('Window' in this);\\n\\nif (detect) return\\n\\n// Polyfill from https://cdn.polyfill.io/v2/polyfill.js?features=Window&flags=always\\nif ((typeof WorkerGlobalScope === \\\"undefined\\\") && (typeof importScripts !== \\\"function\\\")) {\\n\\t(function (global) {\\n\\t\\tif (global.constructor) {\\n\\t\\t\\tglobal.Window = global.constructor;\\n\\t\\t} else {\\n\\t\\t\\t(global.Window = global.constructor = new Function('return function Window() {}')()).prototype = this;\\n\\t\\t}\\n\\t}(this));\\n}\\n\\n})\\n.call('object' === typeof window && window || 'object' === typeof self && self || 'object' === typeof global && global || {});\\n\\n(function(undefined) {\\n\\n// Detection from https://github.com/Financial-Times/polyfill-service/blob/master/packages/polyfill-library/polyfills/Document/detect.js\\nvar detect = (\\\"Document\\\" in this);\\n\\nif (detect) return\\n\\n// Polyfill from https://cdn.polyfill.io/v2/polyfill.js?features=Document&flags=always\\nif ((typeof WorkerGlobalScope === \\\"undefined\\\") && (typeof importScripts !== \\\"function\\\")) {\\n\\n\\tif (this.HTMLDocument) { // IE8\\n\\n\\t\\t// HTMLDocument is an extension of Document.  If the browser has HTMLDocument but not Document, the former will suffice as an alias for the latter.\\n\\t\\tthis.Document = this.HTMLDocument;\\n\\n\\t} else {\\n\\n\\t\\t// Create an empty function to act as the missing constructor for the document object, attach the document object as its prototype.  The function needs to be anonymous else it is hoisted and causes the feature detect to prematurely pass, preventing the assignments below being made.\\n\\t\\tthis.Document = this.HTMLDocument = document.constructor = (new Function('return function Document() {}')());\\n\\t\\tthis.Document.prototype = document;\\n\\t}\\n}\\n\\n\\n})\\n.call('object' === typeof window && window || 'object' === typeof self && self || 'object' === typeof global && global || {});\\n\\n(function(undefined) {\\n\\n// Detection from https://github.com/Financial-Times/polyfill-service/blob/master/packages/polyfill-library/polyfills/Element/detect.js\\nvar detect = ('Element' in this && 'HTMLElement' in this);\\n\\nif (detect) return\\n\\n// Polyfill from https://cdn.polyfill.io/v2/polyfill.js?features=Element&flags=always\\n(function () {\\n\\n\\t// IE8\\n\\tif (window.Element && !window.HTMLElement) {\\n\\t\\twindow.HTMLElement = window.Element;\\n\\t\\treturn;\\n\\t}\\n\\n\\t// create Element constructor\\n\\twindow.Element = window.HTMLElement = new Function('return function Element() {}')();\\n\\n\\t// generate sandboxed iframe\\n\\tvar vbody = document.appendChild(document.createElement('body'));\\n\\tvar frame = vbody.appendChild(document.createElement('iframe'));\\n\\n\\t// use sandboxed iframe to replicate Element functionality\\n\\tvar frameDocument = frame.contentWindow.document;\\n\\tvar prototype = Element.prototype = frameDocument.appendChild(frameDocument.createElement('*'));\\n\\tvar cache = {};\\n\\n\\t// polyfill Element.prototype on an element\\n\\tvar shiv = function (element, deep) {\\n\\t\\tvar\\n\\t\\tchildNodes = element.childNodes || [],\\n\\t\\tindex = -1,\\n\\t\\tkey, value, childNode;\\n\\n\\t\\tif (element.nodeType === 1 && element.constructor !== Element) {\\n\\t\\t\\telement.constructor = Element;\\n\\n\\t\\t\\tfor (key in cache) {\\n\\t\\t\\t\\tvalue = cache[key];\\n\\t\\t\\t\\telement[key] = value;\\n\\t\\t\\t}\\n\\t\\t}\\n\\n\\t\\twhile (childNode = deep && childNodes[++index]) {\\n\\t\\t\\tshiv(childNode, deep);\\n\\t\\t}\\n\\n\\t\\treturn element;\\n\\t};\\n\\n\\tvar elements = document.getElementsByTagName('*');\\n\\tvar nativeCreateElement = document.createElement;\\n\\tvar interval;\\n\\tvar loopLimit = 100;\\n\\n\\tprototype.attachEvent('onpropertychange', function (event) {\\n\\t\\tvar\\n\\t\\tpropertyName = event.propertyName,\\n\\t\\tnonValue = !cache.hasOwnProperty(propertyName),\\n\\t\\tnewValue = prototype[propertyName],\\n\\t\\toldValue = cache[propertyName],\\n\\t\\tindex = -1,\\n\\t\\telement;\\n\\n\\t\\twhile (element = elements[++index]) {\\n\\t\\t\\tif (element.nodeType === 1) {\\n\\t\\t\\t\\tif (nonValue || element[propertyName] === oldValue) {\\n\\t\\t\\t\\t\\telement[propertyName] = newValue;\\n\\t\\t\\t\\t}\\n\\t\\t\\t}\\n\\t\\t}\\n\\n\\t\\tcache[propertyName] = newValue;\\n\\t});\\n\\n\\tprototype.constructor = Element;\\n\\n\\tif (!prototype.hasAttribute) {\\n\\t\\t// <Element>.hasAttribute\\n\\t\\tprototype.hasAttribute = function hasAttribute(name) {\\n\\t\\t\\treturn this.getAttribute(name) !== null;\\n\\t\\t};\\n\\t}\\n\\n\\t// Apply Element prototype to the pre-existing DOM as soon as the body element appears.\\n\\tfunction bodyCheck() {\\n\\t\\tif (!(loopLimit--)) clearTimeout(interval);\\n\\t\\tif (document.body && !document.body.prototype && /(complete|interactive)/.test(document.readyState)) {\\n\\t\\t\\tshiv(document, true);\\n\\t\\t\\tif (interval && document.body.prototype) clearTimeout(interval);\\n\\t\\t\\treturn (!!document.body.prototype);\\n\\t\\t}\\n\\t\\treturn false;\\n\\t}\\n\\tif (!bodyCheck()) {\\n\\t\\tdocument.onreadystatechange = bodyCheck;\\n\\t\\tinterval = setInterval(bodyCheck, 25);\\n\\t}\\n\\n\\t// Apply to any new elements created after load\\n\\tdocument.createElement = function createElement(nodeName) {\\n\\t\\tvar element = nativeCreateElement(String(nodeName).toLowerCase());\\n\\t\\treturn shiv(element);\\n\\t};\\n\\n\\t// remove sandboxed iframe\\n\\tdocument.removeChild(vbody);\\n}());\\n\\n})\\n.call('object' === typeof window && window || 'object' === typeof self && self || 'object' === typeof global && global || {});\\n\\n(function(undefined) {\\n\\n// Detection from https://github.com/Financial-Times/polyfill-service/blob/master/packages/polyfill-library/polyfills/Event/detect.js\\nvar detect = (\\n  (function(global) {\\n\\n  \\tif (!('Event' in global)) return false;\\n  \\tif (typeof global.Event === 'function') return true;\\n\\n  \\ttry {\\n\\n  \\t\\t// In IE 9-11, the Event object exists but cannot be instantiated\\n  \\t\\tnew Event('click');\\n  \\t\\treturn true;\\n  \\t} catch(e) {\\n  \\t\\treturn false;\\n  \\t}\\n  }(this))\\n);\\n\\nif (detect) return\\n\\n// Polyfill from https://cdn.polyfill.io/v2/polyfill.js?features=Event&flags=always\\n(function () {\\n\\tvar unlistenableWindowEvents = {\\n\\t\\tclick: 1,\\n\\t\\tdblclick: 1,\\n\\t\\tkeyup: 1,\\n\\t\\tkeypress: 1,\\n\\t\\tkeydown: 1,\\n\\t\\tmousedown: 1,\\n\\t\\tmouseup: 1,\\n\\t\\tmousemove: 1,\\n\\t\\tmouseover: 1,\\n\\t\\tmouseenter: 1,\\n\\t\\tmouseleave: 1,\\n\\t\\tmouseout: 1,\\n\\t\\tstorage: 1,\\n\\t\\tstoragecommit: 1,\\n\\t\\ttextinput: 1\\n\\t};\\n\\n\\t// This polyfill depends on availability of `document` so will not run in a worker\\n\\t// However, we asssume there are no browsers with worker support that lack proper\\n\\t// support for `Event` within the worker\\n\\tif (typeof document === 'undefined' || typeof window === 'undefined') return;\\n\\n\\tfunction indexOf(array, element) {\\n\\t\\tvar\\n\\t\\tindex = -1,\\n\\t\\tlength = array.length;\\n\\n\\t\\twhile (++index < length) {\\n\\t\\t\\tif (index in array && array[index] === element) {\\n\\t\\t\\t\\treturn index;\\n\\t\\t\\t}\\n\\t\\t}\\n\\n\\t\\treturn -1;\\n\\t}\\n\\n\\tvar existingProto = (window.Event && window.Event.prototype) || null;\\n\\twindow.Event = Window.prototype.Event = function Event(type, eventInitDict) {\\n\\t\\tif (!type) {\\n\\t\\t\\tthrow new Error('Not enough arguments');\\n\\t\\t}\\n\\n\\t\\tvar event;\\n\\t\\t// Shortcut if browser supports createEvent\\n\\t\\tif ('createEvent' in document) {\\n\\t\\t\\tevent = document.createEvent('Event');\\n\\t\\t\\tvar bubbles = eventInitDict && eventInitDict.bubbles !== undefined ? eventInitDict.bubbles : false;\\n\\t\\t\\tvar cancelable = eventInitDict && eventInitDict.cancelable !== undefined ? eventInitDict.cancelable : false;\\n\\n\\t\\t\\tevent.initEvent(type, bubbles, cancelable);\\n\\n\\t\\t\\treturn event;\\n\\t\\t}\\n\\n\\t\\tevent = document.createEventObject();\\n\\n\\t\\tevent.type = type;\\n\\t\\tevent.bubbles = eventInitDict && eventInitDict.bubbles !== undefined ? eventInitDict.bubbles : false;\\n\\t\\tevent.cancelable = eventInitDict && eventInitDict.cancelable !== undefined ? eventInitDict.cancelable : false;\\n\\n\\t\\treturn event;\\n\\t};\\n\\tif (existingProto) {\\n\\t\\tObject.defineProperty(window.Event, 'prototype', {\\n\\t\\t\\tconfigurable: false,\\n\\t\\t\\tenumerable: false,\\n\\t\\t\\twritable: true,\\n\\t\\t\\tvalue: existingProto\\n\\t\\t});\\n\\t}\\n\\n\\tif (!('createEvent' in document)) {\\n\\t\\twindow.addEventListener = Window.prototype.addEventListener = Document.prototype.addEventListener = Element.prototype.addEventListener = function addEventListener() {\\n\\t\\t\\tvar\\n\\t\\t\\telement = this,\\n\\t\\t\\ttype = arguments[0],\\n\\t\\t\\tlistener = arguments[1];\\n\\n\\t\\t\\tif (element === window && type in unlistenableWindowEvents) {\\n\\t\\t\\t\\tthrow new Error('In IE8 the event: ' + type + ' is not available on the window object. Please see https://github.com/Financial-Times/polyfill-service/issues/317 for more information.');\\n\\t\\t\\t}\\n\\n\\t\\t\\tif (!element._events) {\\n\\t\\t\\t\\telement._events = {};\\n\\t\\t\\t}\\n\\n\\t\\t\\tif (!element._events[type]) {\\n\\t\\t\\t\\telement._events[type] = function (event) {\\n\\t\\t\\t\\t\\tvar\\n\\t\\t\\t\\t\\tlist = element._events[event.type].list,\\n\\t\\t\\t\\t\\tevents = list.slice(),\\n\\t\\t\\t\\t\\tindex = -1,\\n\\t\\t\\t\\t\\tlength = events.length,\\n\\t\\t\\t\\t\\teventElement;\\n\\n\\t\\t\\t\\t\\tevent.preventDefault = function preventDefault() {\\n\\t\\t\\t\\t\\t\\tif (event.cancelable !== false) {\\n\\t\\t\\t\\t\\t\\t\\tevent.returnValue = false;\\n\\t\\t\\t\\t\\t\\t}\\n\\t\\t\\t\\t\\t};\\n\\n\\t\\t\\t\\t\\tevent.stopPropagation = function stopPropagation() {\\n\\t\\t\\t\\t\\t\\tevent.cancelBubble = true;\\n\\t\\t\\t\\t\\t};\\n\\n\\t\\t\\t\\t\\tevent.stopImmediatePropagation = function stopImmediatePropagation() {\\n\\t\\t\\t\\t\\t\\tevent.cancelBubble = true;\\n\\t\\t\\t\\t\\t\\tevent.cancelImmediate = true;\\n\\t\\t\\t\\t\\t};\\n\\n\\t\\t\\t\\t\\tevent.currentTarget = element;\\n\\t\\t\\t\\t\\tevent.relatedTarget = event.fromElement || null;\\n\\t\\t\\t\\t\\tevent.target = event.target || event.srcElement || element;\\n\\t\\t\\t\\t\\tevent.timeStamp = new Date().getTime();\\n\\n\\t\\t\\t\\t\\tif (event.clientX) {\\n\\t\\t\\t\\t\\t\\tevent.pageX = event.clientX + document.documentElement.scrollLeft;\\n\\t\\t\\t\\t\\t\\tevent.pageY = event.clientY + document.documentElement.scrollTop;\\n\\t\\t\\t\\t\\t}\\n\\n\\t\\t\\t\\t\\twhile (++index < length && !event.cancelImmediate) {\\n\\t\\t\\t\\t\\t\\tif (index in events) {\\n\\t\\t\\t\\t\\t\\t\\teventElement = events[index];\\n\\n\\t\\t\\t\\t\\t\\t\\tif (indexOf(list, eventElement) !== -1 && typeof eventElement === 'function') {\\n\\t\\t\\t\\t\\t\\t\\t\\teventElement.call(element, event);\\n\\t\\t\\t\\t\\t\\t\\t}\\n\\t\\t\\t\\t\\t\\t}\\n\\t\\t\\t\\t\\t}\\n\\t\\t\\t\\t};\\n\\n\\t\\t\\t\\telement._events[type].list = [];\\n\\n\\t\\t\\t\\tif (element.attachEvent) {\\n\\t\\t\\t\\t\\telement.attachEvent('on' + type, element._events[type]);\\n\\t\\t\\t\\t}\\n\\t\\t\\t}\\n\\n\\t\\t\\telement._events[type].list.push(listener);\\n\\t\\t};\\n\\n\\t\\twindow.removeEventListener = Window.prototype.removeEventListener = Document.prototype.removeEventListener = Element.prototype.removeEventListener = function removeEventListener() {\\n\\t\\t\\tvar\\n\\t\\t\\telement = this,\\n\\t\\t\\ttype = arguments[0],\\n\\t\\t\\tlistener = arguments[1],\\n\\t\\t\\tindex;\\n\\n\\t\\t\\tif (element._events && element._events[type] && element._events[type].list) {\\n\\t\\t\\t\\tindex = indexOf(element._events[type].list, listener);\\n\\n\\t\\t\\t\\tif (index !== -1) {\\n\\t\\t\\t\\t\\telement._events[type].list.splice(index, 1);\\n\\n\\t\\t\\t\\t\\tif (!element._events[type].list.length) {\\n\\t\\t\\t\\t\\t\\tif (element.detachEvent) {\\n\\t\\t\\t\\t\\t\\t\\telement.detachEvent('on' + type, element._events[type]);\\n\\t\\t\\t\\t\\t\\t}\\n\\t\\t\\t\\t\\t\\tdelete element._events[type];\\n\\t\\t\\t\\t\\t}\\n\\t\\t\\t\\t}\\n\\t\\t\\t}\\n\\t\\t};\\n\\n\\t\\twindow.dispatchEvent = Window.prototype.dispatchEvent = Document.prototype.dispatchEvent = Element.prototype.dispatchEvent = function dispatchEvent(event) {\\n\\t\\t\\tif (!arguments.length) {\\n\\t\\t\\t\\tthrow new Error('Not enough arguments');\\n\\t\\t\\t}\\n\\n\\t\\t\\tif (!event || typeof event.type !== 'string') {\\n\\t\\t\\t\\tthrow new Error('DOM Events Exception 0');\\n\\t\\t\\t}\\n\\n\\t\\t\\tvar element = this, type = event.type;\\n\\n\\t\\t\\ttry {\\n\\t\\t\\t\\tif (!event.bubbles) {\\n\\t\\t\\t\\t\\tevent.cancelBubble = true;\\n\\n\\t\\t\\t\\t\\tvar cancelBubbleEvent = function (event) {\\n\\t\\t\\t\\t\\t\\tevent.cancelBubble = true;\\n\\n\\t\\t\\t\\t\\t\\t(element || window).detachEvent('on' + type, cancelBubbleEvent);\\n\\t\\t\\t\\t\\t};\\n\\n\\t\\t\\t\\t\\tthis.attachEvent('on' + type, cancelBubbleEvent);\\n\\t\\t\\t\\t}\\n\\n\\t\\t\\t\\tthis.fireEvent('on' + type, event);\\n\\t\\t\\t} catch (error) {\\n\\t\\t\\t\\tevent.target = element;\\n\\n\\t\\t\\t\\tdo {\\n\\t\\t\\t\\t\\tevent.currentTarget = element;\\n\\n\\t\\t\\t\\t\\tif ('_events' in element && typeof element._events[type] === 'function') {\\n\\t\\t\\t\\t\\t\\telement._events[type].call(element, event);\\n\\t\\t\\t\\t\\t}\\n\\n\\t\\t\\t\\t\\tif (typeof element['on' + type] === 'function') {\\n\\t\\t\\t\\t\\t\\telement['on' + type].call(element, event);\\n\\t\\t\\t\\t\\t}\\n\\n\\t\\t\\t\\t\\telement = element.nodeType === 9 ? element.parentWindow : element.parentNode;\\n\\t\\t\\t\\t} while (element && !event.cancelBubble);\\n\\t\\t\\t}\\n\\n\\t\\t\\treturn true;\\n\\t\\t};\\n\\n\\t\\t// Add the DOMContentLoaded Event\\n\\t\\tdocument.attachEvent('onreadystatechange', function() {\\n\\t\\t\\tif (document.readyState === 'complete') {\\n\\t\\t\\t\\tdocument.dispatchEvent(new Event('DOMContentLoaded', {\\n\\t\\t\\t\\t\\tbubbles: true\\n\\t\\t\\t\\t}));\\n\\t\\t\\t}\\n\\t\\t});\\n\\t}\\n}());\\n\\n})\\n.call('object' === typeof window && window || 'object' === typeof self && self || 'object' === typeof global && global || {});\\n\\n/**\\n * TODO: Ideally this would be a NodeList.prototype.forEach polyfill\\n * This seems to fail in IE8, requires more investigation.\\n * See: https://github.com/imagitama/nodelist-foreach-polyfill\\n */\\n\\n// Used to generate a unique string, allows multiple instances of the component without\\n// Them conflicting with each other.\\n// https://stackoverflow.com/a/8809472\\nfunction generateUniqueID () {\\n  var d = new Date().getTime();\\n  if (typeof window.performance !== 'undefined' && typeof window.performance.now === 'function') {\\n    d += window.performance.now(); // use high-precision timer if available\\n  }\\n  return 'xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx'.replace(/[xy]/g, function (c) {\\n    var r = (d + Math.random() * 16) % 16 | 0;\\n    d = Math.floor(d / 16);\\n    return (c === 'x' ? r : (r & 0x3 | 0x8)).toString(16)\\n  })\\n}\\n\\n/**\\n * JavaScript 'polyfill' for HTML5's <details> and <summary> elements\\n * and 'shim' to add accessiblity enhancements for all browsers\\n *\\n * http://caniuse.com/#feat=details\\n */\\n\\nvar KEY_ENTER = 13;\\nvar KEY_SPACE = 32;\\n\\nfunction Details ($module) {\\n  this.$module = $module;\\n}\\n\\nDetails.prototype.init = function () {\\n  if (!this.$module) {\\n    return\\n  }\\n\\n  // If there is native details support, we want to avoid running code to polyfill native behaviour.\\n  var hasNativeDetails = typeof this.$module.open === 'boolean';\\n\\n  if (hasNativeDetails) {\\n    return\\n  }\\n\\n  this.polyfillDetails();\\n};\\n\\nDetails.prototype.polyfillDetails = function () {\\n  var $module = this.$module;\\n\\n  // Save shortcuts to the inner summary and content elements\\n  var $summary = this.$summary = $module.getElementsByTagName('summary').item(0);\\n  var $content = this.$content = $module.getElementsByTagName('div').item(0);\\n\\n  // If <details> doesn't have a <summary> and a <div> representing the content\\n  // it means the required HTML structure is not met so the script will stop\\n  if (!$summary || !$content) {\\n    return\\n  }\\n\\n  // If the content doesn't have an ID, assign it one now\\n  // which we'll need for the summary's aria-controls assignment\\n  if (!$content.id) {\\n    $content.id = 'details-content-' + generateUniqueID();\\n  }\\n\\n  // Add ARIA role=\\\"group\\\" to details\\n  $module.setAttribute('role', 'group');\\n\\n  // Add role=button to summary\\n  $summary.setAttribute('role', 'button');\\n\\n  // Add aria-controls\\n  $summary.setAttribute('aria-controls', $content.id);\\n\\n  // Set tabIndex so the summary is keyboard accessible for non-native elements\\n  //\\n  // We have to use the camelcase `tabIndex` property as there is a bug in IE6/IE7 when we set the correct attribute lowercase:\\n  // See http://web.archive.org/web/20170120194036/http://www.saliences.com/browserBugs/tabIndex.html for more information.\\n  $summary.tabIndex = 0;\\n\\n  // Detect initial open state\\n  var openAttr = $module.getAttribute('open') !== null;\\n  if (openAttr === true) {\\n    $summary.setAttribute('aria-expanded', 'true');\\n    $content.setAttribute('aria-hidden', 'false');\\n  } else {\\n    $summary.setAttribute('aria-expanded', 'false');\\n    $content.setAttribute('aria-hidden', 'true');\\n    $content.style.display = 'none';\\n  }\\n\\n  // Bind an event to handle summary elements\\n  this.polyfillHandleInputs($summary, this.polyfillSetAttributes.bind(this));\\n};\\n\\n/**\\n* Define a statechange function that updates aria-expanded and style.display\\n* @param {object} summary element\\n*/\\nDetails.prototype.polyfillSetAttributes = function () {\\n  var $module = this.$module;\\n  var $summary = this.$summary;\\n  var $content = this.$content;\\n\\n  var expanded = $summary.getAttribute('aria-expanded') === 'true';\\n  var hidden = $content.getAttribute('aria-hidden') === 'true';\\n\\n  $summary.setAttribute('aria-expanded', (expanded ? 'false' : 'true'));\\n  $content.setAttribute('aria-hidden', (hidden ? 'false' : 'true'));\\n\\n  $content.style.display = (expanded ? 'none' : '');\\n\\n  var hasOpenAttr = $module.getAttribute('open') !== null;\\n  if (!hasOpenAttr) {\\n    $module.setAttribute('open', 'open');\\n  } else {\\n    $module.removeAttribute('open');\\n  }\\n\\n  return true\\n};\\n\\n/**\\n* Handle cross-modal click events\\n* @param {object} node element\\n* @param {function} callback function\\n*/\\nDetails.prototype.polyfillHandleInputs = function (node, callback) {\\n  node.addEventListener('keypress', function (event) {\\n    var target = event.target;\\n    // When the key gets pressed - check if it is enter or space\\n    if (event.keyCode === KEY_ENTER || event.keyCode === KEY_SPACE) {\\n      if (target.nodeName.toLowerCase() === 'summary') {\\n        // Prevent space from scrolling the page\\n        // and enter from submitting a form\\n        event.preventDefault();\\n        // Click to let the click event do all the necessary action\\n        if (target.click) {\\n          target.click();\\n        } else {\\n          // except Safari 5.1 and under don't support .click() here\\n          callback(event);\\n        }\\n      }\\n    }\\n  });\\n\\n  // Prevent keyup to prevent clicking twice in Firefox when using space key\\n  node.addEventListener('keyup', function (event) {\\n    var target = event.target;\\n    if (event.keyCode === KEY_SPACE) {\\n      if (target.nodeName.toLowerCase() === 'summary') {\\n        event.preventDefault();\\n      }\\n    }\\n  });\\n\\n  node.addEventListener('click', callback);\\n};\\n\\nreturn Details;\\n\\n})));\\n\\n/* WEBPACK VAR INJECTION */}.call(this, __webpack_require__(/*! ./../../../../webpack/buildin/global.js */ \\\"./node_modules/webpack/buildin/global.js\\\")))\\n\\n//# sourceURL=webpack://LBHFrontend/./node_modules/govuk-frontend/govuk/components/details/details.js?\");\n\n/***/ }),\n\n/***/ \"./node_modules/govuk-frontend/govuk/components/error-summary/error-summary.js\":\n/*!*************************************************************************************!*\\\n  !*** ./node_modules/govuk-frontend/govuk/components/error-summary/error-summary.js ***!\n  \\*************************************************************************************/\n/*! no static exports found */\n/***/ (function(module, exports, __webpack_require__) {\n\neval(\"/* WEBPACK VAR INJECTION */(function(global) {(function (global, factory) {\\n\\t true ? module.exports = factory() :\\n\\tundefined;\\n}(this, (function () { 'use strict';\\n\\n(function(undefined) {\\n\\n// Detection from https://github.com/Financial-Times/polyfill-service/blob/master/packages/polyfill-library/polyfills/Object/defineProperty/detect.js\\nvar detect = (\\n  // In IE8, defineProperty could only act on DOM elements, so full support\\n  // for the feature requires the ability to set a property on an arbitrary object\\n  'defineProperty' in Object && (function() {\\n  \\ttry {\\n  \\t\\tvar a = {};\\n  \\t\\tObject.defineProperty(a, 'test', {value:42});\\n  \\t\\treturn true;\\n  \\t} catch(e) {\\n  \\t\\treturn false\\n  \\t}\\n  }())\\n);\\n\\nif (detect) return\\n\\n// Polyfill from https://cdn.polyfill.io/v2/polyfill.js?features=Object.defineProperty&flags=always\\n(function (nativeDefineProperty) {\\n\\n\\tvar supportsAccessors = Object.prototype.hasOwnProperty('__defineGetter__');\\n\\tvar ERR_ACCESSORS_NOT_SUPPORTED = 'Getters & setters cannot be defined on this javascript engine';\\n\\tvar ERR_VALUE_ACCESSORS = 'A property cannot both have accessors and be writable or have a value';\\n\\n\\tObject.defineProperty = function defineProperty(object, property, descriptor) {\\n\\n\\t\\t// Where native support exists, assume it\\n\\t\\tif (nativeDefineProperty && (object === window || object === document || object === Element.prototype || object instanceof Element)) {\\n\\t\\t\\treturn nativeDefineProperty(object, property, descriptor);\\n\\t\\t}\\n\\n\\t\\tif (object === null || !(object instanceof Object || typeof object === 'object')) {\\n\\t\\t\\tthrow new TypeError('Object.defineProperty called on non-object');\\n\\t\\t}\\n\\n\\t\\tif (!(descriptor instanceof Object)) {\\n\\t\\t\\tthrow new TypeError('Property description must be an object');\\n\\t\\t}\\n\\n\\t\\tvar propertyString = String(property);\\n\\t\\tvar hasValueOrWritable = 'value' in descriptor || 'writable' in descriptor;\\n\\t\\tvar getterType = 'get' in descriptor && typeof descriptor.get;\\n\\t\\tvar setterType = 'set' in descriptor && typeof descriptor.set;\\n\\n\\t\\t// handle descriptor.get\\n\\t\\tif (getterType) {\\n\\t\\t\\tif (getterType !== 'function') {\\n\\t\\t\\t\\tthrow new TypeError('Getter must be a function');\\n\\t\\t\\t}\\n\\t\\t\\tif (!supportsAccessors) {\\n\\t\\t\\t\\tthrow new TypeError(ERR_ACCESSORS_NOT_SUPPORTED);\\n\\t\\t\\t}\\n\\t\\t\\tif (hasValueOrWritable) {\\n\\t\\t\\t\\tthrow new TypeError(ERR_VALUE_ACCESSORS);\\n\\t\\t\\t}\\n\\t\\t\\tObject.__defineGetter__.call(object, propertyString, descriptor.get);\\n\\t\\t} else {\\n\\t\\t\\tobject[propertyString] = descriptor.value;\\n\\t\\t}\\n\\n\\t\\t// handle descriptor.set\\n\\t\\tif (setterType) {\\n\\t\\t\\tif (setterType !== 'function') {\\n\\t\\t\\t\\tthrow new TypeError('Setter must be a function');\\n\\t\\t\\t}\\n\\t\\t\\tif (!supportsAccessors) {\\n\\t\\t\\t\\tthrow new TypeError(ERR_ACCESSORS_NOT_SUPPORTED);\\n\\t\\t\\t}\\n\\t\\t\\tif (hasValueOrWritable) {\\n\\t\\t\\t\\tthrow new TypeError(ERR_VALUE_ACCESSORS);\\n\\t\\t\\t}\\n\\t\\t\\tObject.__defineSetter__.call(object, propertyString, descriptor.set);\\n\\t\\t}\\n\\n\\t\\t// OK to define value unconditionally - if a getter has been specified as well, an error would be thrown above\\n\\t\\tif ('value' in descriptor) {\\n\\t\\t\\tobject[propertyString] = descriptor.value;\\n\\t\\t}\\n\\n\\t\\treturn object;\\n\\t};\\n}(Object.defineProperty));\\n})\\n.call('object' === typeof window && window || 'object' === typeof self && self || 'object' === typeof global && global || {});\\n\\n(function(undefined) {\\n  // Detection from https://github.com/Financial-Times/polyfill-service/blob/master/packages/polyfill-library/polyfills/Function/prototype/bind/detect.js\\n  var detect = 'bind' in Function.prototype;\\n\\n  if (detect) return\\n\\n  // Polyfill from https://cdn.polyfill.io/v2/polyfill.js?features=Function.prototype.bind&flags=always\\n  Object.defineProperty(Function.prototype, 'bind', {\\n      value: function bind(that) { // .length is 1\\n          // add necessary es5-shim utilities\\n          var $Array = Array;\\n          var $Object = Object;\\n          var ObjectPrototype = $Object.prototype;\\n          var ArrayPrototype = $Array.prototype;\\n          var Empty = function Empty() {};\\n          var to_string = ObjectPrototype.toString;\\n          var hasToStringTag = typeof Symbol === 'function' && typeof Symbol.toStringTag === 'symbol';\\n          var isCallable; /* inlined from https://npmjs.com/is-callable */ var fnToStr = Function.prototype.toString, tryFunctionObject = function tryFunctionObject(value) { try { fnToStr.call(value); return true; } catch (e) { return false; } }, fnClass = '[object Function]', genClass = '[object GeneratorFunction]'; isCallable = function isCallable(value) { if (typeof value !== 'function') { return false; } if (hasToStringTag) { return tryFunctionObject(value); } var strClass = to_string.call(value); return strClass === fnClass || strClass === genClass; };\\n          var array_slice = ArrayPrototype.slice;\\n          var array_concat = ArrayPrototype.concat;\\n          var array_push = ArrayPrototype.push;\\n          var max = Math.max;\\n          // /add necessary es5-shim utilities\\n\\n          // 1. Let Target be the this value.\\n          var target = this;\\n          // 2. If IsCallable(Target) is false, throw a TypeError exception.\\n          if (!isCallable(target)) {\\n              throw new TypeError('Function.prototype.bind called on incompatible ' + target);\\n          }\\n          // 3. Let A be a new (possibly empty) internal list of all of the\\n          //   argument values provided after thisArg (arg1, arg2 etc), in order.\\n          // XXX slicedArgs will stand in for \\\"A\\\" if used\\n          var args = array_slice.call(arguments, 1); // for normal call\\n          // 4. Let F be a new native ECMAScript object.\\n          // 11. Set the [[Prototype]] internal property of F to the standard\\n          //   built-in Function prototype object as specified in 15.3.3.1.\\n          // 12. Set the [[Call]] internal property of F as described in\\n          //   15.3.4.5.1.\\n          // 13. Set the [[Construct]] internal property of F as described in\\n          //   15.3.4.5.2.\\n          // 14. Set the [[HasInstance]] internal property of F as described in\\n          //   15.3.4.5.3.\\n          var bound;\\n          var binder = function () {\\n\\n              if (this instanceof bound) {\\n                  // 15.3.4.5.2 [[Construct]]\\n                  // When the [[Construct]] internal method of a function object,\\n                  // F that was created using the bind function is called with a\\n                  // list of arguments ExtraArgs, the following steps are taken:\\n                  // 1. Let target be the value of F's [[TargetFunction]]\\n                  //   internal property.\\n                  // 2. If target has no [[Construct]] internal method, a\\n                  //   TypeError exception is thrown.\\n                  // 3. Let boundArgs be the value of F's [[BoundArgs]] internal\\n                  //   property.\\n                  // 4. Let args be a new list containing the same values as the\\n                  //   list boundArgs in the same order followed by the same\\n                  //   values as the list ExtraArgs in the same order.\\n                  // 5. Return the result of calling the [[Construct]] internal\\n                  //   method of target providing args as the arguments.\\n\\n                  var result = target.apply(\\n                      this,\\n                      array_concat.call(args, array_slice.call(arguments))\\n                  );\\n                  if ($Object(result) === result) {\\n                      return result;\\n                  }\\n                  return this;\\n\\n              } else {\\n                  // 15.3.4.5.1 [[Call]]\\n                  // When the [[Call]] internal method of a function object, F,\\n                  // which was created using the bind function is called with a\\n                  // this value and a list of arguments ExtraArgs, the following\\n                  // steps are taken:\\n                  // 1. Let boundArgs be the value of F's [[BoundArgs]] internal\\n                  //   property.\\n                  // 2. Let boundThis be the value of F's [[BoundThis]] internal\\n                  //   property.\\n                  // 3. Let target be the value of F's [[TargetFunction]] internal\\n                  //   property.\\n                  // 4. Let args be a new list containing the same values as the\\n                  //   list boundArgs in the same order followed by the same\\n                  //   values as the list ExtraArgs in the same order.\\n                  // 5. Return the result of calling the [[Call]] internal method\\n                  //   of target providing boundThis as the this value and\\n                  //   providing args as the arguments.\\n\\n                  // equiv: target.call(this, ...boundArgs, ...args)\\n                  return target.apply(\\n                      that,\\n                      array_concat.call(args, array_slice.call(arguments))\\n                  );\\n\\n              }\\n\\n          };\\n\\n          // 15. If the [[Class]] internal property of Target is \\\"Function\\\", then\\n          //     a. Let L be the length property of Target minus the length of A.\\n          //     b. Set the length own property of F to either 0 or L, whichever is\\n          //       larger.\\n          // 16. Else set the length own property of F to 0.\\n\\n          var boundLength = max(0, target.length - args.length);\\n\\n          // 17. Set the attributes of the length own property of F to the values\\n          //   specified in 15.3.5.1.\\n          var boundArgs = [];\\n          for (var i = 0; i < boundLength; i++) {\\n              array_push.call(boundArgs, '$' + i);\\n          }\\n\\n          // XXX Build a dynamic function with desired amount of arguments is the only\\n          // way to set the length property of a function.\\n          // In environments where Content Security Policies enabled (Chrome extensions,\\n          // for ex.) all use of eval or Function costructor throws an exception.\\n          // However in all of these environments Function.prototype.bind exists\\n          // and so this code will never be executed.\\n          bound = Function('binder', 'return function (' + boundArgs.join(',') + '){ return binder.apply(this, arguments); }')(binder);\\n\\n          if (target.prototype) {\\n              Empty.prototype = target.prototype;\\n              bound.prototype = new Empty();\\n              // Clean up dangling references.\\n              Empty.prototype = null;\\n          }\\n\\n          // TODO\\n          // 18. Set the [[Extensible]] internal property of F to true.\\n\\n          // TODO\\n          // 19. Let thrower be the [[ThrowTypeError]] function Object (13.2.3).\\n          // 20. Call the [[DefineOwnProperty]] internal method of F with\\n          //   arguments \\\"caller\\\", PropertyDescriptor {[[Get]]: thrower, [[Set]]:\\n          //   thrower, [[Enumerable]]: false, [[Configurable]]: false}, and\\n          //   false.\\n          // 21. Call the [[DefineOwnProperty]] internal method of F with\\n          //   arguments \\\"arguments\\\", PropertyDescriptor {[[Get]]: thrower,\\n          //   [[Set]]: thrower, [[Enumerable]]: false, [[Configurable]]: false},\\n          //   and false.\\n\\n          // TODO\\n          // NOTE Function objects created using Function.prototype.bind do not\\n          // have a prototype property or the [[Code]], [[FormalParameters]], and\\n          // [[Scope]] internal properties.\\n          // XXX can't delete prototype in pure-js.\\n\\n          // 22. Return F.\\n          return bound;\\n      }\\n  });\\n})\\n.call('object' === typeof window && window || 'object' === typeof self && self || 'object' === typeof global && global || {});\\n\\n(function(undefined) {\\n\\n// Detection from https://github.com/Financial-Times/polyfill-service/blob/master/packages/polyfill-library/polyfills/Window/detect.js\\nvar detect = ('Window' in this);\\n\\nif (detect) return\\n\\n// Polyfill from https://cdn.polyfill.io/v2/polyfill.js?features=Window&flags=always\\nif ((typeof WorkerGlobalScope === \\\"undefined\\\") && (typeof importScripts !== \\\"function\\\")) {\\n\\t(function (global) {\\n\\t\\tif (global.constructor) {\\n\\t\\t\\tglobal.Window = global.constructor;\\n\\t\\t} else {\\n\\t\\t\\t(global.Window = global.constructor = new Function('return function Window() {}')()).prototype = this;\\n\\t\\t}\\n\\t}(this));\\n}\\n\\n})\\n.call('object' === typeof window && window || 'object' === typeof self && self || 'object' === typeof global && global || {});\\n\\n(function(undefined) {\\n\\n// Detection from https://github.com/Financial-Times/polyfill-service/blob/master/packages/polyfill-library/polyfills/Document/detect.js\\nvar detect = (\\\"Document\\\" in this);\\n\\nif (detect) return\\n\\n// Polyfill from https://cdn.polyfill.io/v2/polyfill.js?features=Document&flags=always\\nif ((typeof WorkerGlobalScope === \\\"undefined\\\") && (typeof importScripts !== \\\"function\\\")) {\\n\\n\\tif (this.HTMLDocument) { // IE8\\n\\n\\t\\t// HTMLDocument is an extension of Document.  If the browser has HTMLDocument but not Document, the former will suffice as an alias for the latter.\\n\\t\\tthis.Document = this.HTMLDocument;\\n\\n\\t} else {\\n\\n\\t\\t// Create an empty function to act as the missing constructor for the document object, attach the document object as its prototype.  The function needs to be anonymous else it is hoisted and causes the feature detect to prematurely pass, preventing the assignments below being made.\\n\\t\\tthis.Document = this.HTMLDocument = document.constructor = (new Function('return function Document() {}')());\\n\\t\\tthis.Document.prototype = document;\\n\\t}\\n}\\n\\n\\n})\\n.call('object' === typeof window && window || 'object' === typeof self && self || 'object' === typeof global && global || {});\\n\\n(function(undefined) {\\n\\n// Detection from https://github.com/Financial-Times/polyfill-service/blob/master/packages/polyfill-library/polyfills/Element/detect.js\\nvar detect = ('Element' in this && 'HTMLElement' in this);\\n\\nif (detect) return\\n\\n// Polyfill from https://cdn.polyfill.io/v2/polyfill.js?features=Element&flags=always\\n(function () {\\n\\n\\t// IE8\\n\\tif (window.Element && !window.HTMLElement) {\\n\\t\\twindow.HTMLElement = window.Element;\\n\\t\\treturn;\\n\\t}\\n\\n\\t// create Element constructor\\n\\twindow.Element = window.HTMLElement = new Function('return function Element() {}')();\\n\\n\\t// generate sandboxed iframe\\n\\tvar vbody = document.appendChild(document.createElement('body'));\\n\\tvar frame = vbody.appendChild(document.createElement('iframe'));\\n\\n\\t// use sandboxed iframe to replicate Element functionality\\n\\tvar frameDocument = frame.contentWindow.document;\\n\\tvar prototype = Element.prototype = frameDocument.appendChild(frameDocument.createElement('*'));\\n\\tvar cache = {};\\n\\n\\t// polyfill Element.prototype on an element\\n\\tvar shiv = function (element, deep) {\\n\\t\\tvar\\n\\t\\tchildNodes = element.childNodes || [],\\n\\t\\tindex = -1,\\n\\t\\tkey, value, childNode;\\n\\n\\t\\tif (element.nodeType === 1 && element.constructor !== Element) {\\n\\t\\t\\telement.constructor = Element;\\n\\n\\t\\t\\tfor (key in cache) {\\n\\t\\t\\t\\tvalue = cache[key];\\n\\t\\t\\t\\telement[key] = value;\\n\\t\\t\\t}\\n\\t\\t}\\n\\n\\t\\twhile (childNode = deep && childNodes[++index]) {\\n\\t\\t\\tshiv(childNode, deep);\\n\\t\\t}\\n\\n\\t\\treturn element;\\n\\t};\\n\\n\\tvar elements = document.getElementsByTagName('*');\\n\\tvar nativeCreateElement = document.createElement;\\n\\tvar interval;\\n\\tvar loopLimit = 100;\\n\\n\\tprototype.attachEvent('onpropertychange', function (event) {\\n\\t\\tvar\\n\\t\\tpropertyName = event.propertyName,\\n\\t\\tnonValue = !cache.hasOwnProperty(propertyName),\\n\\t\\tnewValue = prototype[propertyName],\\n\\t\\toldValue = cache[propertyName],\\n\\t\\tindex = -1,\\n\\t\\telement;\\n\\n\\t\\twhile (element = elements[++index]) {\\n\\t\\t\\tif (element.nodeType === 1) {\\n\\t\\t\\t\\tif (nonValue || element[propertyName] === oldValue) {\\n\\t\\t\\t\\t\\telement[propertyName] = newValue;\\n\\t\\t\\t\\t}\\n\\t\\t\\t}\\n\\t\\t}\\n\\n\\t\\tcache[propertyName] = newValue;\\n\\t});\\n\\n\\tprototype.constructor = Element;\\n\\n\\tif (!prototype.hasAttribute) {\\n\\t\\t// <Element>.hasAttribute\\n\\t\\tprototype.hasAttribute = function hasAttribute(name) {\\n\\t\\t\\treturn this.getAttribute(name) !== null;\\n\\t\\t};\\n\\t}\\n\\n\\t// Apply Element prototype to the pre-existing DOM as soon as the body element appears.\\n\\tfunction bodyCheck() {\\n\\t\\tif (!(loopLimit--)) clearTimeout(interval);\\n\\t\\tif (document.body && !document.body.prototype && /(complete|interactive)/.test(document.readyState)) {\\n\\t\\t\\tshiv(document, true);\\n\\t\\t\\tif (interval && document.body.prototype) clearTimeout(interval);\\n\\t\\t\\treturn (!!document.body.prototype);\\n\\t\\t}\\n\\t\\treturn false;\\n\\t}\\n\\tif (!bodyCheck()) {\\n\\t\\tdocument.onreadystatechange = bodyCheck;\\n\\t\\tinterval = setInterval(bodyCheck, 25);\\n\\t}\\n\\n\\t// Apply to any new elements created after load\\n\\tdocument.createElement = function createElement(nodeName) {\\n\\t\\tvar element = nativeCreateElement(String(nodeName).toLowerCase());\\n\\t\\treturn shiv(element);\\n\\t};\\n\\n\\t// remove sandboxed iframe\\n\\tdocument.removeChild(vbody);\\n}());\\n\\n})\\n.call('object' === typeof window && window || 'object' === typeof self && self || 'object' === typeof global && global || {});\\n\\n(function(undefined) {\\n\\n// Detection from https://github.com/Financial-Times/polyfill-service/blob/master/packages/polyfill-library/polyfills/Event/detect.js\\nvar detect = (\\n  (function(global) {\\n\\n  \\tif (!('Event' in global)) return false;\\n  \\tif (typeof global.Event === 'function') return true;\\n\\n  \\ttry {\\n\\n  \\t\\t// In IE 9-11, the Event object exists but cannot be instantiated\\n  \\t\\tnew Event('click');\\n  \\t\\treturn true;\\n  \\t} catch(e) {\\n  \\t\\treturn false;\\n  \\t}\\n  }(this))\\n);\\n\\nif (detect) return\\n\\n// Polyfill from https://cdn.polyfill.io/v2/polyfill.js?features=Event&flags=always\\n(function () {\\n\\tvar unlistenableWindowEvents = {\\n\\t\\tclick: 1,\\n\\t\\tdblclick: 1,\\n\\t\\tkeyup: 1,\\n\\t\\tkeypress: 1,\\n\\t\\tkeydown: 1,\\n\\t\\tmousedown: 1,\\n\\t\\tmouseup: 1,\\n\\t\\tmousemove: 1,\\n\\t\\tmouseover: 1,\\n\\t\\tmouseenter: 1,\\n\\t\\tmouseleave: 1,\\n\\t\\tmouseout: 1,\\n\\t\\tstorage: 1,\\n\\t\\tstoragecommit: 1,\\n\\t\\ttextinput: 1\\n\\t};\\n\\n\\t// This polyfill depends on availability of `document` so will not run in a worker\\n\\t// However, we asssume there are no browsers with worker support that lack proper\\n\\t// support for `Event` within the worker\\n\\tif (typeof document === 'undefined' || typeof window === 'undefined') return;\\n\\n\\tfunction indexOf(array, element) {\\n\\t\\tvar\\n\\t\\tindex = -1,\\n\\t\\tlength = array.length;\\n\\n\\t\\twhile (++index < length) {\\n\\t\\t\\tif (index in array && array[index] === element) {\\n\\t\\t\\t\\treturn index;\\n\\t\\t\\t}\\n\\t\\t}\\n\\n\\t\\treturn -1;\\n\\t}\\n\\n\\tvar existingProto = (window.Event && window.Event.prototype) || null;\\n\\twindow.Event = Window.prototype.Event = function Event(type, eventInitDict) {\\n\\t\\tif (!type) {\\n\\t\\t\\tthrow new Error('Not enough arguments');\\n\\t\\t}\\n\\n\\t\\tvar event;\\n\\t\\t// Shortcut if browser supports createEvent\\n\\t\\tif ('createEvent' in document) {\\n\\t\\t\\tevent = document.createEvent('Event');\\n\\t\\t\\tvar bubbles = eventInitDict && eventInitDict.bubbles !== undefined ? eventInitDict.bubbles : false;\\n\\t\\t\\tvar cancelable = eventInitDict && eventInitDict.cancelable !== undefined ? eventInitDict.cancelable : false;\\n\\n\\t\\t\\tevent.initEvent(type, bubbles, cancelable);\\n\\n\\t\\t\\treturn event;\\n\\t\\t}\\n\\n\\t\\tevent = document.createEventObject();\\n\\n\\t\\tevent.type = type;\\n\\t\\tevent.bubbles = eventInitDict && eventInitDict.bubbles !== undefined ? eventInitDict.bubbles : false;\\n\\t\\tevent.cancelable = eventInitDict && eventInitDict.cancelable !== undefined ? eventInitDict.cancelable : false;\\n\\n\\t\\treturn event;\\n\\t};\\n\\tif (existingProto) {\\n\\t\\tObject.defineProperty(window.Event, 'prototype', {\\n\\t\\t\\tconfigurable: false,\\n\\t\\t\\tenumerable: false,\\n\\t\\t\\twritable: true,\\n\\t\\t\\tvalue: existingProto\\n\\t\\t});\\n\\t}\\n\\n\\tif (!('createEvent' in document)) {\\n\\t\\twindow.addEventListener = Window.prototype.addEventListener = Document.prototype.addEventListener = Element.prototype.addEventListener = function addEventListener() {\\n\\t\\t\\tvar\\n\\t\\t\\telement = this,\\n\\t\\t\\ttype = arguments[0],\\n\\t\\t\\tlistener = arguments[1];\\n\\n\\t\\t\\tif (element === window && type in unlistenableWindowEvents) {\\n\\t\\t\\t\\tthrow new Error('In IE8 the event: ' + type + ' is not available on the window object. Please see https://github.com/Financial-Times/polyfill-service/issues/317 for more information.');\\n\\t\\t\\t}\\n\\n\\t\\t\\tif (!element._events) {\\n\\t\\t\\t\\telement._events = {};\\n\\t\\t\\t}\\n\\n\\t\\t\\tif (!element._events[type]) {\\n\\t\\t\\t\\telement._events[type] = function (event) {\\n\\t\\t\\t\\t\\tvar\\n\\t\\t\\t\\t\\tlist = element._events[event.type].list,\\n\\t\\t\\t\\t\\tevents = list.slice(),\\n\\t\\t\\t\\t\\tindex = -1,\\n\\t\\t\\t\\t\\tlength = events.length,\\n\\t\\t\\t\\t\\teventElement;\\n\\n\\t\\t\\t\\t\\tevent.preventDefault = function preventDefault() {\\n\\t\\t\\t\\t\\t\\tif (event.cancelable !== false) {\\n\\t\\t\\t\\t\\t\\t\\tevent.returnValue = false;\\n\\t\\t\\t\\t\\t\\t}\\n\\t\\t\\t\\t\\t};\\n\\n\\t\\t\\t\\t\\tevent.stopPropagation = function stopPropagation() {\\n\\t\\t\\t\\t\\t\\tevent.cancelBubble = true;\\n\\t\\t\\t\\t\\t};\\n\\n\\t\\t\\t\\t\\tevent.stopImmediatePropagation = function stopImmediatePropagation() {\\n\\t\\t\\t\\t\\t\\tevent.cancelBubble = true;\\n\\t\\t\\t\\t\\t\\tevent.cancelImmediate = true;\\n\\t\\t\\t\\t\\t};\\n\\n\\t\\t\\t\\t\\tevent.currentTarget = element;\\n\\t\\t\\t\\t\\tevent.relatedTarget = event.fromElement || null;\\n\\t\\t\\t\\t\\tevent.target = event.target || event.srcElement || element;\\n\\t\\t\\t\\t\\tevent.timeStamp = new Date().getTime();\\n\\n\\t\\t\\t\\t\\tif (event.clientX) {\\n\\t\\t\\t\\t\\t\\tevent.pageX = event.clientX + document.documentElement.scrollLeft;\\n\\t\\t\\t\\t\\t\\tevent.pageY = event.clientY + document.documentElement.scrollTop;\\n\\t\\t\\t\\t\\t}\\n\\n\\t\\t\\t\\t\\twhile (++index < length && !event.cancelImmediate) {\\n\\t\\t\\t\\t\\t\\tif (index in events) {\\n\\t\\t\\t\\t\\t\\t\\teventElement = events[index];\\n\\n\\t\\t\\t\\t\\t\\t\\tif (indexOf(list, eventElement) !== -1 && typeof eventElement === 'function') {\\n\\t\\t\\t\\t\\t\\t\\t\\teventElement.call(element, event);\\n\\t\\t\\t\\t\\t\\t\\t}\\n\\t\\t\\t\\t\\t\\t}\\n\\t\\t\\t\\t\\t}\\n\\t\\t\\t\\t};\\n\\n\\t\\t\\t\\telement._events[type].list = [];\\n\\n\\t\\t\\t\\tif (element.attachEvent) {\\n\\t\\t\\t\\t\\telement.attachEvent('on' + type, element._events[type]);\\n\\t\\t\\t\\t}\\n\\t\\t\\t}\\n\\n\\t\\t\\telement._events[type].list.push(listener);\\n\\t\\t};\\n\\n\\t\\twindow.removeEventListener = Window.prototype.removeEventListener = Document.prototype.removeEventListener = Element.prototype.removeEventListener = function removeEventListener() {\\n\\t\\t\\tvar\\n\\t\\t\\telement = this,\\n\\t\\t\\ttype = arguments[0],\\n\\t\\t\\tlistener = arguments[1],\\n\\t\\t\\tindex;\\n\\n\\t\\t\\tif (element._events && element._events[type] && element._events[type].list) {\\n\\t\\t\\t\\tindex = indexOf(element._events[type].list, listener);\\n\\n\\t\\t\\t\\tif (index !== -1) {\\n\\t\\t\\t\\t\\telement._events[type].list.splice(index, 1);\\n\\n\\t\\t\\t\\t\\tif (!element._events[type].list.length) {\\n\\t\\t\\t\\t\\t\\tif (element.detachEvent) {\\n\\t\\t\\t\\t\\t\\t\\telement.detachEvent('on' + type, element._events[type]);\\n\\t\\t\\t\\t\\t\\t}\\n\\t\\t\\t\\t\\t\\tdelete element._events[type];\\n\\t\\t\\t\\t\\t}\\n\\t\\t\\t\\t}\\n\\t\\t\\t}\\n\\t\\t};\\n\\n\\t\\twindow.dispatchEvent = Window.prototype.dispatchEvent = Document.prototype.dispatchEvent = Element.prototype.dispatchEvent = function dispatchEvent(event) {\\n\\t\\t\\tif (!arguments.length) {\\n\\t\\t\\t\\tthrow new Error('Not enough arguments');\\n\\t\\t\\t}\\n\\n\\t\\t\\tif (!event || typeof event.type !== 'string') {\\n\\t\\t\\t\\tthrow new Error('DOM Events Exception 0');\\n\\t\\t\\t}\\n\\n\\t\\t\\tvar element = this, type = event.type;\\n\\n\\t\\t\\ttry {\\n\\t\\t\\t\\tif (!event.bubbles) {\\n\\t\\t\\t\\t\\tevent.cancelBubble = true;\\n\\n\\t\\t\\t\\t\\tvar cancelBubbleEvent = function (event) {\\n\\t\\t\\t\\t\\t\\tevent.cancelBubble = true;\\n\\n\\t\\t\\t\\t\\t\\t(element || window).detachEvent('on' + type, cancelBubbleEvent);\\n\\t\\t\\t\\t\\t};\\n\\n\\t\\t\\t\\t\\tthis.attachEvent('on' + type, cancelBubbleEvent);\\n\\t\\t\\t\\t}\\n\\n\\t\\t\\t\\tthis.fireEvent('on' + type, event);\\n\\t\\t\\t} catch (error) {\\n\\t\\t\\t\\tevent.target = element;\\n\\n\\t\\t\\t\\tdo {\\n\\t\\t\\t\\t\\tevent.currentTarget = element;\\n\\n\\t\\t\\t\\t\\tif ('_events' in element && typeof element._events[type] === 'function') {\\n\\t\\t\\t\\t\\t\\telement._events[type].call(element, event);\\n\\t\\t\\t\\t\\t}\\n\\n\\t\\t\\t\\t\\tif (typeof element['on' + type] === 'function') {\\n\\t\\t\\t\\t\\t\\telement['on' + type].call(element, event);\\n\\t\\t\\t\\t\\t}\\n\\n\\t\\t\\t\\t\\telement = element.nodeType === 9 ? element.parentWindow : element.parentNode;\\n\\t\\t\\t\\t} while (element && !event.cancelBubble);\\n\\t\\t\\t}\\n\\n\\t\\t\\treturn true;\\n\\t\\t};\\n\\n\\t\\t// Add the DOMContentLoaded Event\\n\\t\\tdocument.attachEvent('onreadystatechange', function() {\\n\\t\\t\\tif (document.readyState === 'complete') {\\n\\t\\t\\t\\tdocument.dispatchEvent(new Event('DOMContentLoaded', {\\n\\t\\t\\t\\t\\tbubbles: true\\n\\t\\t\\t\\t}));\\n\\t\\t\\t}\\n\\t\\t});\\n\\t}\\n}());\\n\\n})\\n.call('object' === typeof window && window || 'object' === typeof self && self || 'object' === typeof global && global || {});\\n\\n(function(undefined) {\\n\\n  // Detection from https://raw.githubusercontent.com/Financial-Times/polyfill-service/1f3c09b402f65bf6e393f933a15ba63f1b86ef1f/packages/polyfill-library/polyfills/Element/prototype/matches/detect.js\\n  var detect = (\\n    'document' in this && \\\"matches\\\" in document.documentElement\\n  );\\n\\n  if (detect) return\\n\\n  // Polyfill from https://raw.githubusercontent.com/Financial-Times/polyfill-service/1f3c09b402f65bf6e393f933a15ba63f1b86ef1f/packages/polyfill-library/polyfills/Element/prototype/matches/polyfill.js\\n  Element.prototype.matches = Element.prototype.webkitMatchesSelector || Element.prototype.oMatchesSelector || Element.prototype.msMatchesSelector || Element.prototype.mozMatchesSelector || function matches(selector) {\\n    var element = this;\\n    var elements = (element.document || element.ownerDocument).querySelectorAll(selector);\\n    var index = 0;\\n\\n    while (elements[index] && elements[index] !== element) {\\n      ++index;\\n    }\\n\\n    return !!elements[index];\\n  };\\n\\n}).call('object' === typeof window && window || 'object' === typeof self && self || 'object' === typeof global && global || {});\\n\\n(function(undefined) {\\n\\n  // Detection from https://raw.githubusercontent.com/Financial-Times/polyfill-service/1f3c09b402f65bf6e393f933a15ba63f1b86ef1f/packages/polyfill-library/polyfills/Element/prototype/closest/detect.js\\n  var detect = (\\n    'document' in this && \\\"closest\\\" in document.documentElement\\n  );\\n\\n  if (detect) return\\n\\n    // Polyfill from https://raw.githubusercontent.com/Financial-Times/polyfill-service/1f3c09b402f65bf6e393f933a15ba63f1b86ef1f/packages/polyfill-library/polyfills/Element/prototype/closest/polyfill.js\\n  Element.prototype.closest = function closest(selector) {\\n    var node = this;\\n\\n    while (node) {\\n      if (node.matches(selector)) return node;\\n      else node = 'SVGElement' in window && node instanceof SVGElement ? node.parentNode : node.parentElement;\\n    }\\n\\n    return null;\\n  };\\n\\n}).call('object' === typeof window && window || 'object' === typeof self && self || 'object' === typeof global && global || {});\\n\\nfunction ErrorSummary ($module) {\\n  this.$module = $module;\\n}\\n\\nErrorSummary.prototype.init = function () {\\n  var $module = this.$module;\\n  if (!$module) {\\n    return\\n  }\\n  $module.focus();\\n\\n  $module.addEventListener('click', this.handleClick.bind(this));\\n};\\n\\n/**\\n* Click event handler\\n*\\n* @param {MouseEvent} event - Click event\\n*/\\nErrorSummary.prototype.handleClick = function (event) {\\n  var target = event.target;\\n  if (this.focusTarget(target)) {\\n    event.preventDefault();\\n  }\\n};\\n\\n/**\\n * Focus the target element\\n *\\n * By default, the browser will scroll the target into view. Because our labels\\n * or legends appear above the input, this means the user will be presented with\\n * an input without any context, as the label or legend will be off the top of\\n * the screen.\\n *\\n * Manually handling the click event, scrolling the question into view and then\\n * focussing the element solves this.\\n *\\n * This also results in the label and/or legend being announced correctly in\\n * NVDA (as tested in 2018.3.2) - without this only the field type is announced\\n * (e.g. \\\"Edit, has autocomplete\\\").\\n *\\n * @param {HTMLElement} $target - Event target\\n * @returns {boolean} True if the target was able to be focussed\\n */\\nErrorSummary.prototype.focusTarget = function ($target) {\\n  // If the element that was clicked was not a link, return early\\n  if ($target.tagName !== 'A' || $target.href === false) {\\n    return false\\n  }\\n\\n  var inputId = this.getFragmentFromUrl($target.href);\\n  var $input = document.getElementById(inputId);\\n  if (!$input) {\\n    return false\\n  }\\n\\n  var $legendOrLabel = this.getAssociatedLegendOrLabel($input);\\n  if (!$legendOrLabel) {\\n    return false\\n  }\\n\\n  // Scroll the legend or label into view *before* calling focus on the input to\\n  // avoid extra scrolling in browsers that don't support `preventScroll` (which\\n  // at time of writing is most of them...)\\n  $legendOrLabel.scrollIntoView();\\n  $input.focus({ preventScroll: true });\\n\\n  return true\\n};\\n\\n/**\\n * Get fragment from URL\\n *\\n * Extract the fragment (everything after the hash) from a URL, but not including\\n * the hash.\\n *\\n * @param {string} url - URL\\n * @returns {string} Fragment from URL, without the hash\\n */\\nErrorSummary.prototype.getFragmentFromUrl = function (url) {\\n  if (url.indexOf('#') === -1) {\\n    return false\\n  }\\n\\n  return url.split('#').pop()\\n};\\n\\n/**\\n * Get associated legend or label\\n *\\n * Returns the first element that exists from this list:\\n *\\n * - The `<legend>` associated with the closest `<fieldset>` ancestor, as long\\n *   as the top of it is no more than half a viewport height away from the\\n *   bottom of the input\\n * - The first `<label>` that is associated with the input using for=\\\"inputId\\\"\\n * - The closest parent `<label>`\\n *\\n * @param {HTMLElement} $input - The input\\n * @returns {HTMLElement} Associated legend or label, or null if no associated\\n *                        legend or label can be found\\n */\\nErrorSummary.prototype.getAssociatedLegendOrLabel = function ($input) {\\n  var $fieldset = $input.closest('fieldset');\\n\\n  if ($fieldset) {\\n    var legends = $fieldset.getElementsByTagName('legend');\\n\\n    if (legends.length) {\\n      var $candidateLegend = legends[0];\\n\\n      // If the input type is radio or checkbox, always use the legend if there\\n      // is one.\\n      if ($input.type === 'checkbox' || $input.type === 'radio') {\\n        return $candidateLegend\\n      }\\n\\n      // For other input types, only scroll to the fieldset’s legend (instead of\\n      // the label associated with the input) if the input would end up in the\\n      // top half of the screen.\\n      //\\n      // This should avoid situations where the input either ends up off the\\n      // screen, or obscured by a software keyboard.\\n      var legendTop = $candidateLegend.getBoundingClientRect().top;\\n      var inputRect = $input.getBoundingClientRect();\\n\\n      // If the browser doesn't support Element.getBoundingClientRect().height\\n      // or window.innerHeight (like IE8), bail and just link to the label.\\n      if (inputRect.height && window.innerHeight) {\\n        var inputBottom = inputRect.top + inputRect.height;\\n\\n        if (inputBottom - legendTop < window.innerHeight / 2) {\\n          return $candidateLegend\\n        }\\n      }\\n    }\\n  }\\n\\n  return document.querySelector(\\\"label[for='\\\" + $input.getAttribute('id') + \\\"']\\\") ||\\n    $input.closest('label')\\n};\\n\\nreturn ErrorSummary;\\n\\n})));\\n\\n/* WEBPACK VAR INJECTION */}.call(this, __webpack_require__(/*! ./../../../../webpack/buildin/global.js */ \\\"./node_modules/webpack/buildin/global.js\\\")))\\n\\n//# sourceURL=webpack://LBHFrontend/./node_modules/govuk-frontend/govuk/components/error-summary/error-summary.js?\");\n\n/***/ }),\n\n/***/ \"./node_modules/govuk-frontend/govuk/components/radios/radios.js\":\n/*!***********************************************************************!*\\\n  !*** ./node_modules/govuk-frontend/govuk/components/radios/radios.js ***!\n  \\***********************************************************************/\n/*! no static exports found */\n/***/ (function(module, exports, __webpack_require__) {\n\neval(\"/* WEBPACK VAR INJECTION */(function(global) {(function (global, factory) {\\n\\t true ? module.exports = factory() :\\n\\tundefined;\\n}(this, (function () { 'use strict';\\n\\n(function(undefined) {\\n\\n// Detection from https://github.com/Financial-Times/polyfill-service/blob/master/packages/polyfill-library/polyfills/Object/defineProperty/detect.js\\nvar detect = (\\n  // In IE8, defineProperty could only act on DOM elements, so full support\\n  // for the feature requires the ability to set a property on an arbitrary object\\n  'defineProperty' in Object && (function() {\\n  \\ttry {\\n  \\t\\tvar a = {};\\n  \\t\\tObject.defineProperty(a, 'test', {value:42});\\n  \\t\\treturn true;\\n  \\t} catch(e) {\\n  \\t\\treturn false\\n  \\t}\\n  }())\\n);\\n\\nif (detect) return\\n\\n// Polyfill from https://cdn.polyfill.io/v2/polyfill.js?features=Object.defineProperty&flags=always\\n(function (nativeDefineProperty) {\\n\\n\\tvar supportsAccessors = Object.prototype.hasOwnProperty('__defineGetter__');\\n\\tvar ERR_ACCESSORS_NOT_SUPPORTED = 'Getters & setters cannot be defined on this javascript engine';\\n\\tvar ERR_VALUE_ACCESSORS = 'A property cannot both have accessors and be writable or have a value';\\n\\n\\tObject.defineProperty = function defineProperty(object, property, descriptor) {\\n\\n\\t\\t// Where native support exists, assume it\\n\\t\\tif (nativeDefineProperty && (object === window || object === document || object === Element.prototype || object instanceof Element)) {\\n\\t\\t\\treturn nativeDefineProperty(object, property, descriptor);\\n\\t\\t}\\n\\n\\t\\tif (object === null || !(object instanceof Object || typeof object === 'object')) {\\n\\t\\t\\tthrow new TypeError('Object.defineProperty called on non-object');\\n\\t\\t}\\n\\n\\t\\tif (!(descriptor instanceof Object)) {\\n\\t\\t\\tthrow new TypeError('Property description must be an object');\\n\\t\\t}\\n\\n\\t\\tvar propertyString = String(property);\\n\\t\\tvar hasValueOrWritable = 'value' in descriptor || 'writable' in descriptor;\\n\\t\\tvar getterType = 'get' in descriptor && typeof descriptor.get;\\n\\t\\tvar setterType = 'set' in descriptor && typeof descriptor.set;\\n\\n\\t\\t// handle descriptor.get\\n\\t\\tif (getterType) {\\n\\t\\t\\tif (getterType !== 'function') {\\n\\t\\t\\t\\tthrow new TypeError('Getter must be a function');\\n\\t\\t\\t}\\n\\t\\t\\tif (!supportsAccessors) {\\n\\t\\t\\t\\tthrow new TypeError(ERR_ACCESSORS_NOT_SUPPORTED);\\n\\t\\t\\t}\\n\\t\\t\\tif (hasValueOrWritable) {\\n\\t\\t\\t\\tthrow new TypeError(ERR_VALUE_ACCESSORS);\\n\\t\\t\\t}\\n\\t\\t\\tObject.__defineGetter__.call(object, propertyString, descriptor.get);\\n\\t\\t} else {\\n\\t\\t\\tobject[propertyString] = descriptor.value;\\n\\t\\t}\\n\\n\\t\\t// handle descriptor.set\\n\\t\\tif (setterType) {\\n\\t\\t\\tif (setterType !== 'function') {\\n\\t\\t\\t\\tthrow new TypeError('Setter must be a function');\\n\\t\\t\\t}\\n\\t\\t\\tif (!supportsAccessors) {\\n\\t\\t\\t\\tthrow new TypeError(ERR_ACCESSORS_NOT_SUPPORTED);\\n\\t\\t\\t}\\n\\t\\t\\tif (hasValueOrWritable) {\\n\\t\\t\\t\\tthrow new TypeError(ERR_VALUE_ACCESSORS);\\n\\t\\t\\t}\\n\\t\\t\\tObject.__defineSetter__.call(object, propertyString, descriptor.set);\\n\\t\\t}\\n\\n\\t\\t// OK to define value unconditionally - if a getter has been specified as well, an error would be thrown above\\n\\t\\tif ('value' in descriptor) {\\n\\t\\t\\tobject[propertyString] = descriptor.value;\\n\\t\\t}\\n\\n\\t\\treturn object;\\n\\t};\\n}(Object.defineProperty));\\n})\\n.call('object' === typeof window && window || 'object' === typeof self && self || 'object' === typeof global && global || {});\\n\\n(function(undefined) {\\n  // Detection from https://github.com/Financial-Times/polyfill-service/blob/master/packages/polyfill-library/polyfills/Function/prototype/bind/detect.js\\n  var detect = 'bind' in Function.prototype;\\n\\n  if (detect) return\\n\\n  // Polyfill from https://cdn.polyfill.io/v2/polyfill.js?features=Function.prototype.bind&flags=always\\n  Object.defineProperty(Function.prototype, 'bind', {\\n      value: function bind(that) { // .length is 1\\n          // add necessary es5-shim utilities\\n          var $Array = Array;\\n          var $Object = Object;\\n          var ObjectPrototype = $Object.prototype;\\n          var ArrayPrototype = $Array.prototype;\\n          var Empty = function Empty() {};\\n          var to_string = ObjectPrototype.toString;\\n          var hasToStringTag = typeof Symbol === 'function' && typeof Symbol.toStringTag === 'symbol';\\n          var isCallable; /* inlined from https://npmjs.com/is-callable */ var fnToStr = Function.prototype.toString, tryFunctionObject = function tryFunctionObject(value) { try { fnToStr.call(value); return true; } catch (e) { return false; } }, fnClass = '[object Function]', genClass = '[object GeneratorFunction]'; isCallable = function isCallable(value) { if (typeof value !== 'function') { return false; } if (hasToStringTag) { return tryFunctionObject(value); } var strClass = to_string.call(value); return strClass === fnClass || strClass === genClass; };\\n          var array_slice = ArrayPrototype.slice;\\n          var array_concat = ArrayPrototype.concat;\\n          var array_push = ArrayPrototype.push;\\n          var max = Math.max;\\n          // /add necessary es5-shim utilities\\n\\n          // 1. Let Target be the this value.\\n          var target = this;\\n          // 2. If IsCallable(Target) is false, throw a TypeError exception.\\n          if (!isCallable(target)) {\\n              throw new TypeError('Function.prototype.bind called on incompatible ' + target);\\n          }\\n          // 3. Let A be a new (possibly empty) internal list of all of the\\n          //   argument values provided after thisArg (arg1, arg2 etc), in order.\\n          // XXX slicedArgs will stand in for \\\"A\\\" if used\\n          var args = array_slice.call(arguments, 1); // for normal call\\n          // 4. Let F be a new native ECMAScript object.\\n          // 11. Set the [[Prototype]] internal property of F to the standard\\n          //   built-in Function prototype object as specified in 15.3.3.1.\\n          // 12. Set the [[Call]] internal property of F as described in\\n          //   15.3.4.5.1.\\n          // 13. Set the [[Construct]] internal property of F as described in\\n          //   15.3.4.5.2.\\n          // 14. Set the [[HasInstance]] internal property of F as described in\\n          //   15.3.4.5.3.\\n          var bound;\\n          var binder = function () {\\n\\n              if (this instanceof bound) {\\n                  // 15.3.4.5.2 [[Construct]]\\n                  // When the [[Construct]] internal method of a function object,\\n                  // F that was created using the bind function is called with a\\n                  // list of arguments ExtraArgs, the following steps are taken:\\n                  // 1. Let target be the value of F's [[TargetFunction]]\\n                  //   internal property.\\n                  // 2. If target has no [[Construct]] internal method, a\\n                  //   TypeError exception is thrown.\\n                  // 3. Let boundArgs be the value of F's [[BoundArgs]] internal\\n                  //   property.\\n                  // 4. Let args be a new list containing the same values as the\\n                  //   list boundArgs in the same order followed by the same\\n                  //   values as the list ExtraArgs in the same order.\\n                  // 5. Return the result of calling the [[Construct]] internal\\n                  //   method of target providing args as the arguments.\\n\\n                  var result = target.apply(\\n                      this,\\n                      array_concat.call(args, array_slice.call(arguments))\\n                  );\\n                  if ($Object(result) === result) {\\n                      return result;\\n                  }\\n                  return this;\\n\\n              } else {\\n                  // 15.3.4.5.1 [[Call]]\\n                  // When the [[Call]] internal method of a function object, F,\\n                  // which was created using the bind function is called with a\\n                  // this value and a list of arguments ExtraArgs, the following\\n                  // steps are taken:\\n                  // 1. Let boundArgs be the value of F's [[BoundArgs]] internal\\n                  //   property.\\n                  // 2. Let boundThis be the value of F's [[BoundThis]] internal\\n                  //   property.\\n                  // 3. Let target be the value of F's [[TargetFunction]] internal\\n                  //   property.\\n                  // 4. Let args be a new list containing the same values as the\\n                  //   list boundArgs in the same order followed by the same\\n                  //   values as the list ExtraArgs in the same order.\\n                  // 5. Return the result of calling the [[Call]] internal method\\n                  //   of target providing boundThis as the this value and\\n                  //   providing args as the arguments.\\n\\n                  // equiv: target.call(this, ...boundArgs, ...args)\\n                  return target.apply(\\n                      that,\\n                      array_concat.call(args, array_slice.call(arguments))\\n                  );\\n\\n              }\\n\\n          };\\n\\n          // 15. If the [[Class]] internal property of Target is \\\"Function\\\", then\\n          //     a. Let L be the length property of Target minus the length of A.\\n          //     b. Set the length own property of F to either 0 or L, whichever is\\n          //       larger.\\n          // 16. Else set the length own property of F to 0.\\n\\n          var boundLength = max(0, target.length - args.length);\\n\\n          // 17. Set the attributes of the length own property of F to the values\\n          //   specified in 15.3.5.1.\\n          var boundArgs = [];\\n          for (var i = 0; i < boundLength; i++) {\\n              array_push.call(boundArgs, '$' + i);\\n          }\\n\\n          // XXX Build a dynamic function with desired amount of arguments is the only\\n          // way to set the length property of a function.\\n          // In environments where Content Security Policies enabled (Chrome extensions,\\n          // for ex.) all use of eval or Function costructor throws an exception.\\n          // However in all of these environments Function.prototype.bind exists\\n          // and so this code will never be executed.\\n          bound = Function('binder', 'return function (' + boundArgs.join(',') + '){ return binder.apply(this, arguments); }')(binder);\\n\\n          if (target.prototype) {\\n              Empty.prototype = target.prototype;\\n              bound.prototype = new Empty();\\n              // Clean up dangling references.\\n              Empty.prototype = null;\\n          }\\n\\n          // TODO\\n          // 18. Set the [[Extensible]] internal property of F to true.\\n\\n          // TODO\\n          // 19. Let thrower be the [[ThrowTypeError]] function Object (13.2.3).\\n          // 20. Call the [[DefineOwnProperty]] internal method of F with\\n          //   arguments \\\"caller\\\", PropertyDescriptor {[[Get]]: thrower, [[Set]]:\\n          //   thrower, [[Enumerable]]: false, [[Configurable]]: false}, and\\n          //   false.\\n          // 21. Call the [[DefineOwnProperty]] internal method of F with\\n          //   arguments \\\"arguments\\\", PropertyDescriptor {[[Get]]: thrower,\\n          //   [[Set]]: thrower, [[Enumerable]]: false, [[Configurable]]: false},\\n          //   and false.\\n\\n          // TODO\\n          // NOTE Function objects created using Function.prototype.bind do not\\n          // have a prototype property or the [[Code]], [[FormalParameters]], and\\n          // [[Scope]] internal properties.\\n          // XXX can't delete prototype in pure-js.\\n\\n          // 22. Return F.\\n          return bound;\\n      }\\n  });\\n})\\n.call('object' === typeof window && window || 'object' === typeof self && self || 'object' === typeof global && global || {});\\n\\n(function(undefined) {\\n\\n// Detection from https://github.com/Financial-Times/polyfill-service/blob/master/packages/polyfill-library/polyfills/Window/detect.js\\nvar detect = ('Window' in this);\\n\\nif (detect) return\\n\\n// Polyfill from https://cdn.polyfill.io/v2/polyfill.js?features=Window&flags=always\\nif ((typeof WorkerGlobalScope === \\\"undefined\\\") && (typeof importScripts !== \\\"function\\\")) {\\n\\t(function (global) {\\n\\t\\tif (global.constructor) {\\n\\t\\t\\tglobal.Window = global.constructor;\\n\\t\\t} else {\\n\\t\\t\\t(global.Window = global.constructor = new Function('return function Window() {}')()).prototype = this;\\n\\t\\t}\\n\\t}(this));\\n}\\n\\n})\\n.call('object' === typeof window && window || 'object' === typeof self && self || 'object' === typeof global && global || {});\\n\\n(function(undefined) {\\n\\n// Detection from https://github.com/Financial-Times/polyfill-service/blob/master/packages/polyfill-library/polyfills/Document/detect.js\\nvar detect = (\\\"Document\\\" in this);\\n\\nif (detect) return\\n\\n// Polyfill from https://cdn.polyfill.io/v2/polyfill.js?features=Document&flags=always\\nif ((typeof WorkerGlobalScope === \\\"undefined\\\") && (typeof importScripts !== \\\"function\\\")) {\\n\\n\\tif (this.HTMLDocument) { // IE8\\n\\n\\t\\t// HTMLDocument is an extension of Document.  If the browser has HTMLDocument but not Document, the former will suffice as an alias for the latter.\\n\\t\\tthis.Document = this.HTMLDocument;\\n\\n\\t} else {\\n\\n\\t\\t// Create an empty function to act as the missing constructor for the document object, attach the document object as its prototype.  The function needs to be anonymous else it is hoisted and causes the feature detect to prematurely pass, preventing the assignments below being made.\\n\\t\\tthis.Document = this.HTMLDocument = document.constructor = (new Function('return function Document() {}')());\\n\\t\\tthis.Document.prototype = document;\\n\\t}\\n}\\n\\n\\n})\\n.call('object' === typeof window && window || 'object' === typeof self && self || 'object' === typeof global && global || {});\\n\\n(function(undefined) {\\n\\n// Detection from https://github.com/Financial-Times/polyfill-service/blob/master/packages/polyfill-library/polyfills/Element/detect.js\\nvar detect = ('Element' in this && 'HTMLElement' in this);\\n\\nif (detect) return\\n\\n// Polyfill from https://cdn.polyfill.io/v2/polyfill.js?features=Element&flags=always\\n(function () {\\n\\n\\t// IE8\\n\\tif (window.Element && !window.HTMLElement) {\\n\\t\\twindow.HTMLElement = window.Element;\\n\\t\\treturn;\\n\\t}\\n\\n\\t// create Element constructor\\n\\twindow.Element = window.HTMLElement = new Function('return function Element() {}')();\\n\\n\\t// generate sandboxed iframe\\n\\tvar vbody = document.appendChild(document.createElement('body'));\\n\\tvar frame = vbody.appendChild(document.createElement('iframe'));\\n\\n\\t// use sandboxed iframe to replicate Element functionality\\n\\tvar frameDocument = frame.contentWindow.document;\\n\\tvar prototype = Element.prototype = frameDocument.appendChild(frameDocument.createElement('*'));\\n\\tvar cache = {};\\n\\n\\t// polyfill Element.prototype on an element\\n\\tvar shiv = function (element, deep) {\\n\\t\\tvar\\n\\t\\tchildNodes = element.childNodes || [],\\n\\t\\tindex = -1,\\n\\t\\tkey, value, childNode;\\n\\n\\t\\tif (element.nodeType === 1 && element.constructor !== Element) {\\n\\t\\t\\telement.constructor = Element;\\n\\n\\t\\t\\tfor (key in cache) {\\n\\t\\t\\t\\tvalue = cache[key];\\n\\t\\t\\t\\telement[key] = value;\\n\\t\\t\\t}\\n\\t\\t}\\n\\n\\t\\twhile (childNode = deep && childNodes[++index]) {\\n\\t\\t\\tshiv(childNode, deep);\\n\\t\\t}\\n\\n\\t\\treturn element;\\n\\t};\\n\\n\\tvar elements = document.getElementsByTagName('*');\\n\\tvar nativeCreateElement = document.createElement;\\n\\tvar interval;\\n\\tvar loopLimit = 100;\\n\\n\\tprototype.attachEvent('onpropertychange', function (event) {\\n\\t\\tvar\\n\\t\\tpropertyName = event.propertyName,\\n\\t\\tnonValue = !cache.hasOwnProperty(propertyName),\\n\\t\\tnewValue = prototype[propertyName],\\n\\t\\toldValue = cache[propertyName],\\n\\t\\tindex = -1,\\n\\t\\telement;\\n\\n\\t\\twhile (element = elements[++index]) {\\n\\t\\t\\tif (element.nodeType === 1) {\\n\\t\\t\\t\\tif (nonValue || element[propertyName] === oldValue) {\\n\\t\\t\\t\\t\\telement[propertyName] = newValue;\\n\\t\\t\\t\\t}\\n\\t\\t\\t}\\n\\t\\t}\\n\\n\\t\\tcache[propertyName] = newValue;\\n\\t});\\n\\n\\tprototype.constructor = Element;\\n\\n\\tif (!prototype.hasAttribute) {\\n\\t\\t// <Element>.hasAttribute\\n\\t\\tprototype.hasAttribute = function hasAttribute(name) {\\n\\t\\t\\treturn this.getAttribute(name) !== null;\\n\\t\\t};\\n\\t}\\n\\n\\t// Apply Element prototype to the pre-existing DOM as soon as the body element appears.\\n\\tfunction bodyCheck() {\\n\\t\\tif (!(loopLimit--)) clearTimeout(interval);\\n\\t\\tif (document.body && !document.body.prototype && /(complete|interactive)/.test(document.readyState)) {\\n\\t\\t\\tshiv(document, true);\\n\\t\\t\\tif (interval && document.body.prototype) clearTimeout(interval);\\n\\t\\t\\treturn (!!document.body.prototype);\\n\\t\\t}\\n\\t\\treturn false;\\n\\t}\\n\\tif (!bodyCheck()) {\\n\\t\\tdocument.onreadystatechange = bodyCheck;\\n\\t\\tinterval = setInterval(bodyCheck, 25);\\n\\t}\\n\\n\\t// Apply to any new elements created after load\\n\\tdocument.createElement = function createElement(nodeName) {\\n\\t\\tvar element = nativeCreateElement(String(nodeName).toLowerCase());\\n\\t\\treturn shiv(element);\\n\\t};\\n\\n\\t// remove sandboxed iframe\\n\\tdocument.removeChild(vbody);\\n}());\\n\\n})\\n.call('object' === typeof window && window || 'object' === typeof self && self || 'object' === typeof global && global || {});\\n\\n(function(undefined) {\\n\\n// Detection from https://github.com/Financial-Times/polyfill-service/blob/master/packages/polyfill-library/polyfills/Event/detect.js\\nvar detect = (\\n  (function(global) {\\n\\n  \\tif (!('Event' in global)) return false;\\n  \\tif (typeof global.Event === 'function') return true;\\n\\n  \\ttry {\\n\\n  \\t\\t// In IE 9-11, the Event object exists but cannot be instantiated\\n  \\t\\tnew Event('click');\\n  \\t\\treturn true;\\n  \\t} catch(e) {\\n  \\t\\treturn false;\\n  \\t}\\n  }(this))\\n);\\n\\nif (detect) return\\n\\n// Polyfill from https://cdn.polyfill.io/v2/polyfill.js?features=Event&flags=always\\n(function () {\\n\\tvar unlistenableWindowEvents = {\\n\\t\\tclick: 1,\\n\\t\\tdblclick: 1,\\n\\t\\tkeyup: 1,\\n\\t\\tkeypress: 1,\\n\\t\\tkeydown: 1,\\n\\t\\tmousedown: 1,\\n\\t\\tmouseup: 1,\\n\\t\\tmousemove: 1,\\n\\t\\tmouseover: 1,\\n\\t\\tmouseenter: 1,\\n\\t\\tmouseleave: 1,\\n\\t\\tmouseout: 1,\\n\\t\\tstorage: 1,\\n\\t\\tstoragecommit: 1,\\n\\t\\ttextinput: 1\\n\\t};\\n\\n\\t// This polyfill depends on availability of `document` so will not run in a worker\\n\\t// However, we asssume there are no browsers with worker support that lack proper\\n\\t// support for `Event` within the worker\\n\\tif (typeof document === 'undefined' || typeof window === 'undefined') return;\\n\\n\\tfunction indexOf(array, element) {\\n\\t\\tvar\\n\\t\\tindex = -1,\\n\\t\\tlength = array.length;\\n\\n\\t\\twhile (++index < length) {\\n\\t\\t\\tif (index in array && array[index] === element) {\\n\\t\\t\\t\\treturn index;\\n\\t\\t\\t}\\n\\t\\t}\\n\\n\\t\\treturn -1;\\n\\t}\\n\\n\\tvar existingProto = (window.Event && window.Event.prototype) || null;\\n\\twindow.Event = Window.prototype.Event = function Event(type, eventInitDict) {\\n\\t\\tif (!type) {\\n\\t\\t\\tthrow new Error('Not enough arguments');\\n\\t\\t}\\n\\n\\t\\tvar event;\\n\\t\\t// Shortcut if browser supports createEvent\\n\\t\\tif ('createEvent' in document) {\\n\\t\\t\\tevent = document.createEvent('Event');\\n\\t\\t\\tvar bubbles = eventInitDict && eventInitDict.bubbles !== undefined ? eventInitDict.bubbles : false;\\n\\t\\t\\tvar cancelable = eventInitDict && eventInitDict.cancelable !== undefined ? eventInitDict.cancelable : false;\\n\\n\\t\\t\\tevent.initEvent(type, bubbles, cancelable);\\n\\n\\t\\t\\treturn event;\\n\\t\\t}\\n\\n\\t\\tevent = document.createEventObject();\\n\\n\\t\\tevent.type = type;\\n\\t\\tevent.bubbles = eventInitDict && eventInitDict.bubbles !== undefined ? eventInitDict.bubbles : false;\\n\\t\\tevent.cancelable = eventInitDict && eventInitDict.cancelable !== undefined ? eventInitDict.cancelable : false;\\n\\n\\t\\treturn event;\\n\\t};\\n\\tif (existingProto) {\\n\\t\\tObject.defineProperty(window.Event, 'prototype', {\\n\\t\\t\\tconfigurable: false,\\n\\t\\t\\tenumerable: false,\\n\\t\\t\\twritable: true,\\n\\t\\t\\tvalue: existingProto\\n\\t\\t});\\n\\t}\\n\\n\\tif (!('createEvent' in document)) {\\n\\t\\twindow.addEventListener = Window.prototype.addEventListener = Document.prototype.addEventListener = Element.prototype.addEventListener = function addEventListener() {\\n\\t\\t\\tvar\\n\\t\\t\\telement = this,\\n\\t\\t\\ttype = arguments[0],\\n\\t\\t\\tlistener = arguments[1];\\n\\n\\t\\t\\tif (element === window && type in unlistenableWindowEvents) {\\n\\t\\t\\t\\tthrow new Error('In IE8 the event: ' + type + ' is not available on the window object. Please see https://github.com/Financial-Times/polyfill-service/issues/317 for more information.');\\n\\t\\t\\t}\\n\\n\\t\\t\\tif (!element._events) {\\n\\t\\t\\t\\telement._events = {};\\n\\t\\t\\t}\\n\\n\\t\\t\\tif (!element._events[type]) {\\n\\t\\t\\t\\telement._events[type] = function (event) {\\n\\t\\t\\t\\t\\tvar\\n\\t\\t\\t\\t\\tlist = element._events[event.type].list,\\n\\t\\t\\t\\t\\tevents = list.slice(),\\n\\t\\t\\t\\t\\tindex = -1,\\n\\t\\t\\t\\t\\tlength = events.length,\\n\\t\\t\\t\\t\\teventElement;\\n\\n\\t\\t\\t\\t\\tevent.preventDefault = function preventDefault() {\\n\\t\\t\\t\\t\\t\\tif (event.cancelable !== false) {\\n\\t\\t\\t\\t\\t\\t\\tevent.returnValue = false;\\n\\t\\t\\t\\t\\t\\t}\\n\\t\\t\\t\\t\\t};\\n\\n\\t\\t\\t\\t\\tevent.stopPropagation = function stopPropagation() {\\n\\t\\t\\t\\t\\t\\tevent.cancelBubble = true;\\n\\t\\t\\t\\t\\t};\\n\\n\\t\\t\\t\\t\\tevent.stopImmediatePropagation = function stopImmediatePropagation() {\\n\\t\\t\\t\\t\\t\\tevent.cancelBubble = true;\\n\\t\\t\\t\\t\\t\\tevent.cancelImmediate = true;\\n\\t\\t\\t\\t\\t};\\n\\n\\t\\t\\t\\t\\tevent.currentTarget = element;\\n\\t\\t\\t\\t\\tevent.relatedTarget = event.fromElement || null;\\n\\t\\t\\t\\t\\tevent.target = event.target || event.srcElement || element;\\n\\t\\t\\t\\t\\tevent.timeStamp = new Date().getTime();\\n\\n\\t\\t\\t\\t\\tif (event.clientX) {\\n\\t\\t\\t\\t\\t\\tevent.pageX = event.clientX + document.documentElement.scrollLeft;\\n\\t\\t\\t\\t\\t\\tevent.pageY = event.clientY + document.documentElement.scrollTop;\\n\\t\\t\\t\\t\\t}\\n\\n\\t\\t\\t\\t\\twhile (++index < length && !event.cancelImmediate) {\\n\\t\\t\\t\\t\\t\\tif (index in events) {\\n\\t\\t\\t\\t\\t\\t\\teventElement = events[index];\\n\\n\\t\\t\\t\\t\\t\\t\\tif (indexOf(list, eventElement) !== -1 && typeof eventElement === 'function') {\\n\\t\\t\\t\\t\\t\\t\\t\\teventElement.call(element, event);\\n\\t\\t\\t\\t\\t\\t\\t}\\n\\t\\t\\t\\t\\t\\t}\\n\\t\\t\\t\\t\\t}\\n\\t\\t\\t\\t};\\n\\n\\t\\t\\t\\telement._events[type].list = [];\\n\\n\\t\\t\\t\\tif (element.attachEvent) {\\n\\t\\t\\t\\t\\telement.attachEvent('on' + type, element._events[type]);\\n\\t\\t\\t\\t}\\n\\t\\t\\t}\\n\\n\\t\\t\\telement._events[type].list.push(listener);\\n\\t\\t};\\n\\n\\t\\twindow.removeEventListener = Window.prototype.removeEventListener = Document.prototype.removeEventListener = Element.prototype.removeEventListener = function removeEventListener() {\\n\\t\\t\\tvar\\n\\t\\t\\telement = this,\\n\\t\\t\\ttype = arguments[0],\\n\\t\\t\\tlistener = arguments[1],\\n\\t\\t\\tindex;\\n\\n\\t\\t\\tif (element._events && element._events[type] && element._events[type].list) {\\n\\t\\t\\t\\tindex = indexOf(element._events[type].list, listener);\\n\\n\\t\\t\\t\\tif (index !== -1) {\\n\\t\\t\\t\\t\\telement._events[type].list.splice(index, 1);\\n\\n\\t\\t\\t\\t\\tif (!element._events[type].list.length) {\\n\\t\\t\\t\\t\\t\\tif (element.detachEvent) {\\n\\t\\t\\t\\t\\t\\t\\telement.detachEvent('on' + type, element._events[type]);\\n\\t\\t\\t\\t\\t\\t}\\n\\t\\t\\t\\t\\t\\tdelete element._events[type];\\n\\t\\t\\t\\t\\t}\\n\\t\\t\\t\\t}\\n\\t\\t\\t}\\n\\t\\t};\\n\\n\\t\\twindow.dispatchEvent = Window.prototype.dispatchEvent = Document.prototype.dispatchEvent = Element.prototype.dispatchEvent = function dispatchEvent(event) {\\n\\t\\t\\tif (!arguments.length) {\\n\\t\\t\\t\\tthrow new Error('Not enough arguments');\\n\\t\\t\\t}\\n\\n\\t\\t\\tif (!event || typeof event.type !== 'string') {\\n\\t\\t\\t\\tthrow new Error('DOM Events Exception 0');\\n\\t\\t\\t}\\n\\n\\t\\t\\tvar element = this, type = event.type;\\n\\n\\t\\t\\ttry {\\n\\t\\t\\t\\tif (!event.bubbles) {\\n\\t\\t\\t\\t\\tevent.cancelBubble = true;\\n\\n\\t\\t\\t\\t\\tvar cancelBubbleEvent = function (event) {\\n\\t\\t\\t\\t\\t\\tevent.cancelBubble = true;\\n\\n\\t\\t\\t\\t\\t\\t(element || window).detachEvent('on' + type, cancelBubbleEvent);\\n\\t\\t\\t\\t\\t};\\n\\n\\t\\t\\t\\t\\tthis.attachEvent('on' + type, cancelBubbleEvent);\\n\\t\\t\\t\\t}\\n\\n\\t\\t\\t\\tthis.fireEvent('on' + type, event);\\n\\t\\t\\t} catch (error) {\\n\\t\\t\\t\\tevent.target = element;\\n\\n\\t\\t\\t\\tdo {\\n\\t\\t\\t\\t\\tevent.currentTarget = element;\\n\\n\\t\\t\\t\\t\\tif ('_events' in element && typeof element._events[type] === 'function') {\\n\\t\\t\\t\\t\\t\\telement._events[type].call(element, event);\\n\\t\\t\\t\\t\\t}\\n\\n\\t\\t\\t\\t\\tif (typeof element['on' + type] === 'function') {\\n\\t\\t\\t\\t\\t\\telement['on' + type].call(element, event);\\n\\t\\t\\t\\t\\t}\\n\\n\\t\\t\\t\\t\\telement = element.nodeType === 9 ? element.parentWindow : element.parentNode;\\n\\t\\t\\t\\t} while (element && !event.cancelBubble);\\n\\t\\t\\t}\\n\\n\\t\\t\\treturn true;\\n\\t\\t};\\n\\n\\t\\t// Add the DOMContentLoaded Event\\n\\t\\tdocument.attachEvent('onreadystatechange', function() {\\n\\t\\t\\tif (document.readyState === 'complete') {\\n\\t\\t\\t\\tdocument.dispatchEvent(new Event('DOMContentLoaded', {\\n\\t\\t\\t\\t\\tbubbles: true\\n\\t\\t\\t\\t}));\\n\\t\\t\\t}\\n\\t\\t});\\n\\t}\\n}());\\n\\n})\\n.call('object' === typeof window && window || 'object' === typeof self && self || 'object' === typeof global && global || {});\\n\\n(function(undefined) {\\n\\n    // Detection from https://raw.githubusercontent.com/Financial-Times/polyfill-service/master/packages/polyfill-library/polyfills/DOMTokenList/detect.js\\n    var detect = (\\n      'DOMTokenList' in this && (function (x) {\\n        return 'classList' in x ? !x.classList.toggle('x', false) && !x.className : true;\\n      })(document.createElement('x'))\\n    );\\n\\n    if (detect) return\\n\\n    // Polyfill from https://raw.githubusercontent.com/Financial-Times/polyfill-service/master/packages/polyfill-library/polyfills/DOMTokenList/polyfill.js\\n    (function (global) {\\n      var nativeImpl = \\\"DOMTokenList\\\" in global && global.DOMTokenList;\\n\\n      if (\\n          !nativeImpl ||\\n          (\\n            !!document.createElementNS &&\\n            !!document.createElementNS('http://www.w3.org/2000/svg', 'svg') &&\\n            !(document.createElementNS(\\\"http://www.w3.org/2000/svg\\\", \\\"svg\\\").classList instanceof DOMTokenList)\\n          )\\n        ) {\\n        global.DOMTokenList = (function() { // eslint-disable-line no-unused-vars\\n          var dpSupport = true;\\n          var defineGetter = function (object, name, fn, configurable) {\\n            if (Object.defineProperty)\\n              Object.defineProperty(object, name, {\\n                configurable: false === dpSupport ? true : !!configurable,\\n                get: fn\\n              });\\n\\n            else object.__defineGetter__(name, fn);\\n          };\\n\\n          /** Ensure the browser allows Object.defineProperty to be used on native JavaScript objects. */\\n          try {\\n            defineGetter({}, \\\"support\\\");\\n          }\\n          catch (e) {\\n            dpSupport = false;\\n          }\\n\\n\\n          var _DOMTokenList = function (el, prop) {\\n            var that = this;\\n            var tokens = [];\\n            var tokenMap = {};\\n            var length = 0;\\n            var maxLength = 0;\\n            var addIndexGetter = function (i) {\\n              defineGetter(that, i, function () {\\n                preop();\\n                return tokens[i];\\n              }, false);\\n\\n            };\\n            var reindex = function () {\\n\\n              /** Define getter functions for array-like access to the tokenList's contents. */\\n              if (length >= maxLength)\\n                for (; maxLength < length; ++maxLength) {\\n                  addIndexGetter(maxLength);\\n                }\\n            };\\n\\n            /** Helper function called at the start of each class method. Internal use only. */\\n            var preop = function () {\\n              var error;\\n              var i;\\n              var args = arguments;\\n              var rSpace = /\\\\s+/;\\n\\n              /** Validate the token/s passed to an instance method, if any. */\\n              if (args.length)\\n                for (i = 0; i < args.length; ++i)\\n                  if (rSpace.test(args[i])) {\\n                    error = new SyntaxError('String \\\"' + args[i] + '\\\" ' + \\\"contains\\\" + ' an invalid character');\\n                    error.code = 5;\\n                    error.name = \\\"InvalidCharacterError\\\";\\n                    throw error;\\n                  }\\n\\n\\n              /** Split the new value apart by whitespace*/\\n              if (typeof el[prop] === \\\"object\\\") {\\n                tokens = (\\\"\\\" + el[prop].baseVal).replace(/^\\\\s+|\\\\s+$/g, \\\"\\\").split(rSpace);\\n              } else {\\n                tokens = (\\\"\\\" + el[prop]).replace(/^\\\\s+|\\\\s+$/g, \\\"\\\").split(rSpace);\\n              }\\n\\n              /** Avoid treating blank strings as single-item token lists */\\n              if (\\\"\\\" === tokens[0]) tokens = [];\\n\\n              /** Repopulate the internal token lists */\\n              tokenMap = {};\\n              for (i = 0; i < tokens.length; ++i)\\n                tokenMap[tokens[i]] = true;\\n              length = tokens.length;\\n              reindex();\\n            };\\n\\n            /** Populate our internal token list if the targeted attribute of the subject element isn't empty. */\\n            preop();\\n\\n            /** Return the number of tokens in the underlying string. Read-only. */\\n            defineGetter(that, \\\"length\\\", function () {\\n              preop();\\n              return length;\\n            });\\n\\n            /** Override the default toString/toLocaleString methods to return a space-delimited list of tokens when typecast. */\\n            that.toLocaleString =\\n              that.toString = function () {\\n                preop();\\n                return tokens.join(\\\" \\\");\\n              };\\n\\n            that.item = function (idx) {\\n              preop();\\n              return tokens[idx];\\n            };\\n\\n            that.contains = function (token) {\\n              preop();\\n              return !!tokenMap[token];\\n            };\\n\\n            that.add = function () {\\n              preop.apply(that, args = arguments);\\n\\n              for (var args, token, i = 0, l = args.length; i < l; ++i) {\\n                token = args[i];\\n                if (!tokenMap[token]) {\\n                  tokens.push(token);\\n                  tokenMap[token] = true;\\n                }\\n              }\\n\\n              /** Update the targeted attribute of the attached element if the token list's changed. */\\n              if (length !== tokens.length) {\\n                length = tokens.length >>> 0;\\n                if (typeof el[prop] === \\\"object\\\") {\\n                  el[prop].baseVal = tokens.join(\\\" \\\");\\n                } else {\\n                  el[prop] = tokens.join(\\\" \\\");\\n                }\\n                reindex();\\n              }\\n            };\\n\\n            that.remove = function () {\\n              preop.apply(that, args = arguments);\\n\\n              /** Build a hash of token names to compare against when recollecting our token list. */\\n              for (var args, ignore = {}, i = 0, t = []; i < args.length; ++i) {\\n                ignore[args[i]] = true;\\n                delete tokenMap[args[i]];\\n              }\\n\\n              /** Run through our tokens list and reassign only those that aren't defined in the hash declared above. */\\n              for (i = 0; i < tokens.length; ++i)\\n                if (!ignore[tokens[i]]) t.push(tokens[i]);\\n\\n              tokens = t;\\n              length = t.length >>> 0;\\n\\n              /** Update the targeted attribute of the attached element. */\\n              if (typeof el[prop] === \\\"object\\\") {\\n                el[prop].baseVal = tokens.join(\\\" \\\");\\n              } else {\\n                el[prop] = tokens.join(\\\" \\\");\\n              }\\n              reindex();\\n            };\\n\\n            that.toggle = function (token, force) {\\n              preop.apply(that, [token]);\\n\\n              /** Token state's being forced. */\\n              if (undefined !== force) {\\n                if (force) {\\n                  that.add(token);\\n                  return true;\\n                } else {\\n                  that.remove(token);\\n                  return false;\\n                }\\n              }\\n\\n              /** Token already exists in tokenList. Remove it, and return FALSE. */\\n              if (tokenMap[token]) {\\n                that.remove(token);\\n                return false;\\n              }\\n\\n              /** Otherwise, add the token and return TRUE. */\\n              that.add(token);\\n              return true;\\n            };\\n\\n            return that;\\n          };\\n\\n          return _DOMTokenList;\\n        }());\\n      }\\n\\n      // Add second argument to native DOMTokenList.toggle() if necessary\\n      (function () {\\n        var e = document.createElement('span');\\n        if (!('classList' in e)) return;\\n        e.classList.toggle('x', false);\\n        if (!e.classList.contains('x')) return;\\n        e.classList.constructor.prototype.toggle = function toggle(token /*, force*/) {\\n          var force = arguments[1];\\n          if (force === undefined) {\\n            var add = !this.contains(token);\\n            this[add ? 'add' : 'remove'](token);\\n            return add;\\n          }\\n          force = !!force;\\n          this[force ? 'add' : 'remove'](token);\\n          return force;\\n        };\\n      }());\\n\\n      // Add multiple arguments to native DOMTokenList.add() if necessary\\n      (function () {\\n        var e = document.createElement('span');\\n        if (!('classList' in e)) return;\\n        e.classList.add('a', 'b');\\n        if (e.classList.contains('b')) return;\\n        var native = e.classList.constructor.prototype.add;\\n        e.classList.constructor.prototype.add = function () {\\n          var args = arguments;\\n          var l = arguments.length;\\n          for (var i = 0; i < l; i++) {\\n            native.call(this, args[i]);\\n          }\\n        };\\n      }());\\n\\n      // Add multiple arguments to native DOMTokenList.remove() if necessary\\n      (function () {\\n        var e = document.createElement('span');\\n        if (!('classList' in e)) return;\\n        e.classList.add('a');\\n        e.classList.add('b');\\n        e.classList.remove('a', 'b');\\n        if (!e.classList.contains('b')) return;\\n        var native = e.classList.constructor.prototype.remove;\\n        e.classList.constructor.prototype.remove = function () {\\n          var args = arguments;\\n          var l = arguments.length;\\n          for (var i = 0; i < l; i++) {\\n            native.call(this, args[i]);\\n          }\\n        };\\n      }());\\n\\n    }(this));\\n\\n}).call('object' === typeof window && window || 'object' === typeof self && self || 'object' === typeof global && global || {});\\n\\n(function(undefined) {\\n\\n    // Detection from https://raw.githubusercontent.com/Financial-Times/polyfill-service/8717a9e04ac7aff99b4980fbedead98036b0929a/packages/polyfill-library/polyfills/Element/prototype/classList/detect.js\\n    var detect = (\\n      'document' in this && \\\"classList\\\" in document.documentElement && 'Element' in this && 'classList' in Element.prototype && (function () {\\n        var e = document.createElement('span');\\n        e.classList.add('a', 'b');\\n        return e.classList.contains('b');\\n      }())\\n    );\\n\\n    if (detect) return\\n\\n    // Polyfill from https://cdn.polyfill.io/v2/polyfill.js?features=Element.prototype.classList&flags=always\\n    (function (global) {\\n      var dpSupport = true;\\n      var defineGetter = function (object, name, fn, configurable) {\\n        if (Object.defineProperty)\\n          Object.defineProperty(object, name, {\\n            configurable: false === dpSupport ? true : !!configurable,\\n            get: fn\\n          });\\n\\n        else object.__defineGetter__(name, fn);\\n      };\\n      /** Ensure the browser allows Object.defineProperty to be used on native JavaScript objects. */\\n      try {\\n        defineGetter({}, \\\"support\\\");\\n      }\\n      catch (e) {\\n        dpSupport = false;\\n      }\\n      /** Polyfills a property with a DOMTokenList */\\n      var addProp = function (o, name, attr) {\\n\\n        defineGetter(o.prototype, name, function () {\\n          var tokenList;\\n\\n          var THIS = this,\\n\\n          /** Prevent this from firing twice for some reason. What the hell, IE. */\\n          gibberishProperty = \\\"__defineGetter__\\\" + \\\"DEFINE_PROPERTY\\\" + name;\\n          if(THIS[gibberishProperty]) return tokenList;\\n          THIS[gibberishProperty] = true;\\n\\n          /**\\n           * IE8 can't define properties on native JavaScript objects, so we'll use a dumb hack instead.\\n           *\\n           * What this is doing is creating a dummy element (\\\"reflection\\\") inside a detached phantom node (\\\"mirror\\\")\\n           * that serves as the target of Object.defineProperty instead. While we could simply use the subject HTML\\n           * element instead, this would conflict with element types which use indexed properties (such as forms and\\n           * select lists).\\n           */\\n          if (false === dpSupport) {\\n\\n            var visage;\\n            var mirror = addProp.mirror || document.createElement(\\\"div\\\");\\n            var reflections = mirror.childNodes;\\n            var l = reflections.length;\\n\\n            for (var i = 0; i < l; ++i)\\n              if (reflections[i]._R === THIS) {\\n                visage = reflections[i];\\n                break;\\n              }\\n\\n            /** Couldn't find an element's reflection inside the mirror. Materialise one. */\\n            visage || (visage = mirror.appendChild(document.createElement(\\\"div\\\")));\\n\\n            tokenList = DOMTokenList.call(visage, THIS, attr);\\n          } else tokenList = new DOMTokenList(THIS, attr);\\n\\n          defineGetter(THIS, name, function () {\\n            return tokenList;\\n          });\\n          delete THIS[gibberishProperty];\\n\\n          return tokenList;\\n        }, true);\\n      };\\n\\n      addProp(global.Element, \\\"classList\\\", \\\"className\\\");\\n      addProp(global.HTMLElement, \\\"classList\\\", \\\"className\\\");\\n      addProp(global.HTMLLinkElement, \\\"relList\\\", \\\"rel\\\");\\n      addProp(global.HTMLAnchorElement, \\\"relList\\\", \\\"rel\\\");\\n      addProp(global.HTMLAreaElement, \\\"relList\\\", \\\"rel\\\");\\n    }(this));\\n\\n}).call('object' === typeof window && window || 'object' === typeof self && self || 'object' === typeof global && global || {});\\n\\n/**\\n * TODO: Ideally this would be a NodeList.prototype.forEach polyfill\\n * This seems to fail in IE8, requires more investigation.\\n * See: https://github.com/imagitama/nodelist-foreach-polyfill\\n */\\nfunction nodeListForEach (nodes, callback) {\\n  if (window.NodeList.prototype.forEach) {\\n    return nodes.forEach(callback)\\n  }\\n  for (var i = 0; i < nodes.length; i++) {\\n    callback.call(window, nodes[i], i, nodes);\\n  }\\n}\\n\\nfunction Radios ($module) {\\n  this.$module = $module;\\n}\\n\\nRadios.prototype.init = function () {\\n  var $module = this.$module;\\n  var $inputs = $module.querySelectorAll('input[type=\\\"radio\\\"]');\\n\\n  /**\\n  * Loop over all items with [data-controls]\\n  * Check if they have a matching conditional reveal\\n  * If they do, assign attributes.\\n  **/\\n  nodeListForEach($inputs, function ($input) {\\n    var controls = $input.getAttribute('data-aria-controls');\\n\\n    // Check if input controls anything\\n    // Check if content exists, before setting attributes.\\n    if (!controls || !$module.querySelector('#' + controls)) {\\n      return\\n    }\\n\\n    // If we have content that is controlled, set attributes.\\n    $input.setAttribute('aria-controls', controls);\\n    $input.removeAttribute('data-aria-controls');\\n    this.setAttributes($input);\\n  }.bind(this));\\n\\n  // Handle events\\n  $module.addEventListener('click', this.handleClick.bind(this));\\n};\\n\\nRadios.prototype.setAttributes = function ($input) {\\n  var $content = document.querySelector('#' + $input.getAttribute('aria-controls'));\\n\\n  if ($content && $content.classList.contains('govuk-radios__conditional')) {\\n    var inputIsChecked = $input.checked;\\n\\n    $input.setAttribute('aria-expanded', inputIsChecked);\\n\\n    $content.classList.toggle('govuk-radios__conditional--hidden', !inputIsChecked);\\n  }\\n};\\n\\nRadios.prototype.handleClick = function (event) {\\n  var $clickedInput = event.target;\\n  // We only want to handle clicks for radio inputs\\n  if ($clickedInput.type !== 'radio') {\\n    return\\n  }\\n  // Because checking one radio can uncheck a radio in another $module,\\n  // we need to call set attributes on all radios in the same form, or document if they're not in a form.\\n  //\\n  // We also only want radios which have aria-controls, as they support conditional reveals.\\n  var $allInputs = document.querySelectorAll('input[type=\\\"radio\\\"][aria-controls]');\\n  nodeListForEach($allInputs, function ($input) {\\n    // Only inputs with the same form owner should change.\\n    var hasSameFormOwner = ($input.form === $clickedInput.form);\\n\\n    // In radios, only radios with the same name will affect each other.\\n    var hasSameName = ($input.name === $clickedInput.name);\\n    if (hasSameName && hasSameFormOwner) {\\n      this.setAttributes($input);\\n    }\\n  }.bind(this));\\n};\\n\\nreturn Radios;\\n\\n})));\\n\\n/* WEBPACK VAR INJECTION */}.call(this, __webpack_require__(/*! ./../../../../webpack/buildin/global.js */ \\\"./node_modules/webpack/buildin/global.js\\\")))\\n\\n//# sourceURL=webpack://LBHFrontend/./node_modules/govuk-frontend/govuk/components/radios/radios.js?\");\n\n/***/ }),\n\n/***/ \"./node_modules/govuk-frontend/govuk/components/tabs/tabs.js\":\n/*!*******************************************************************!*\\\n  !*** ./node_modules/govuk-frontend/govuk/components/tabs/tabs.js ***!\n  \\*******************************************************************/\n/*! no static exports found */\n/***/ (function(module, exports, __webpack_require__) {\n\neval(\"/* WEBPACK VAR INJECTION */(function(global) {(function (global, factory) {\\n\\t true ? module.exports = factory() :\\n\\tundefined;\\n}(this, (function () { 'use strict';\\n\\n(function(undefined) {\\n\\n// Detection from https://github.com/Financial-Times/polyfill-service/blob/master/packages/polyfill-library/polyfills/Object/defineProperty/detect.js\\nvar detect = (\\n  // In IE8, defineProperty could only act on DOM elements, so full support\\n  // for the feature requires the ability to set a property on an arbitrary object\\n  'defineProperty' in Object && (function() {\\n  \\ttry {\\n  \\t\\tvar a = {};\\n  \\t\\tObject.defineProperty(a, 'test', {value:42});\\n  \\t\\treturn true;\\n  \\t} catch(e) {\\n  \\t\\treturn false\\n  \\t}\\n  }())\\n);\\n\\nif (detect) return\\n\\n// Polyfill from https://cdn.polyfill.io/v2/polyfill.js?features=Object.defineProperty&flags=always\\n(function (nativeDefineProperty) {\\n\\n\\tvar supportsAccessors = Object.prototype.hasOwnProperty('__defineGetter__');\\n\\tvar ERR_ACCESSORS_NOT_SUPPORTED = 'Getters & setters cannot be defined on this javascript engine';\\n\\tvar ERR_VALUE_ACCESSORS = 'A property cannot both have accessors and be writable or have a value';\\n\\n\\tObject.defineProperty = function defineProperty(object, property, descriptor) {\\n\\n\\t\\t// Where native support exists, assume it\\n\\t\\tif (nativeDefineProperty && (object === window || object === document || object === Element.prototype || object instanceof Element)) {\\n\\t\\t\\treturn nativeDefineProperty(object, property, descriptor);\\n\\t\\t}\\n\\n\\t\\tif (object === null || !(object instanceof Object || typeof object === 'object')) {\\n\\t\\t\\tthrow new TypeError('Object.defineProperty called on non-object');\\n\\t\\t}\\n\\n\\t\\tif (!(descriptor instanceof Object)) {\\n\\t\\t\\tthrow new TypeError('Property description must be an object');\\n\\t\\t}\\n\\n\\t\\tvar propertyString = String(property);\\n\\t\\tvar hasValueOrWritable = 'value' in descriptor || 'writable' in descriptor;\\n\\t\\tvar getterType = 'get' in descriptor && typeof descriptor.get;\\n\\t\\tvar setterType = 'set' in descriptor && typeof descriptor.set;\\n\\n\\t\\t// handle descriptor.get\\n\\t\\tif (getterType) {\\n\\t\\t\\tif (getterType !== 'function') {\\n\\t\\t\\t\\tthrow new TypeError('Getter must be a function');\\n\\t\\t\\t}\\n\\t\\t\\tif (!supportsAccessors) {\\n\\t\\t\\t\\tthrow new TypeError(ERR_ACCESSORS_NOT_SUPPORTED);\\n\\t\\t\\t}\\n\\t\\t\\tif (hasValueOrWritable) {\\n\\t\\t\\t\\tthrow new TypeError(ERR_VALUE_ACCESSORS);\\n\\t\\t\\t}\\n\\t\\t\\tObject.__defineGetter__.call(object, propertyString, descriptor.get);\\n\\t\\t} else {\\n\\t\\t\\tobject[propertyString] = descriptor.value;\\n\\t\\t}\\n\\n\\t\\t// handle descriptor.set\\n\\t\\tif (setterType) {\\n\\t\\t\\tif (setterType !== 'function') {\\n\\t\\t\\t\\tthrow new TypeError('Setter must be a function');\\n\\t\\t\\t}\\n\\t\\t\\tif (!supportsAccessors) {\\n\\t\\t\\t\\tthrow new TypeError(ERR_ACCESSORS_NOT_SUPPORTED);\\n\\t\\t\\t}\\n\\t\\t\\tif (hasValueOrWritable) {\\n\\t\\t\\t\\tthrow new TypeError(ERR_VALUE_ACCESSORS);\\n\\t\\t\\t}\\n\\t\\t\\tObject.__defineSetter__.call(object, propertyString, descriptor.set);\\n\\t\\t}\\n\\n\\t\\t// OK to define value unconditionally - if a getter has been specified as well, an error would be thrown above\\n\\t\\tif ('value' in descriptor) {\\n\\t\\t\\tobject[propertyString] = descriptor.value;\\n\\t\\t}\\n\\n\\t\\treturn object;\\n\\t};\\n}(Object.defineProperty));\\n})\\n.call('object' === typeof window && window || 'object' === typeof self && self || 'object' === typeof global && global || {});\\n\\n(function(undefined) {\\n  // Detection from https://github.com/Financial-Times/polyfill-service/blob/master/packages/polyfill-library/polyfills/Function/prototype/bind/detect.js\\n  var detect = 'bind' in Function.prototype;\\n\\n  if (detect) return\\n\\n  // Polyfill from https://cdn.polyfill.io/v2/polyfill.js?features=Function.prototype.bind&flags=always\\n  Object.defineProperty(Function.prototype, 'bind', {\\n      value: function bind(that) { // .length is 1\\n          // add necessary es5-shim utilities\\n          var $Array = Array;\\n          var $Object = Object;\\n          var ObjectPrototype = $Object.prototype;\\n          var ArrayPrototype = $Array.prototype;\\n          var Empty = function Empty() {};\\n          var to_string = ObjectPrototype.toString;\\n          var hasToStringTag = typeof Symbol === 'function' && typeof Symbol.toStringTag === 'symbol';\\n          var isCallable; /* inlined from https://npmjs.com/is-callable */ var fnToStr = Function.prototype.toString, tryFunctionObject = function tryFunctionObject(value) { try { fnToStr.call(value); return true; } catch (e) { return false; } }, fnClass = '[object Function]', genClass = '[object GeneratorFunction]'; isCallable = function isCallable(value) { if (typeof value !== 'function') { return false; } if (hasToStringTag) { return tryFunctionObject(value); } var strClass = to_string.call(value); return strClass === fnClass || strClass === genClass; };\\n          var array_slice = ArrayPrototype.slice;\\n          var array_concat = ArrayPrototype.concat;\\n          var array_push = ArrayPrototype.push;\\n          var max = Math.max;\\n          // /add necessary es5-shim utilities\\n\\n          // 1. Let Target be the this value.\\n          var target = this;\\n          // 2. If IsCallable(Target) is false, throw a TypeError exception.\\n          if (!isCallable(target)) {\\n              throw new TypeError('Function.prototype.bind called on incompatible ' + target);\\n          }\\n          // 3. Let A be a new (possibly empty) internal list of all of the\\n          //   argument values provided after thisArg (arg1, arg2 etc), in order.\\n          // XXX slicedArgs will stand in for \\\"A\\\" if used\\n          var args = array_slice.call(arguments, 1); // for normal call\\n          // 4. Let F be a new native ECMAScript object.\\n          // 11. Set the [[Prototype]] internal property of F to the standard\\n          //   built-in Function prototype object as specified in 15.3.3.1.\\n          // 12. Set the [[Call]] internal property of F as described in\\n          //   15.3.4.5.1.\\n          // 13. Set the [[Construct]] internal property of F as described in\\n          //   15.3.4.5.2.\\n          // 14. Set the [[HasInstance]] internal property of F as described in\\n          //   15.3.4.5.3.\\n          var bound;\\n          var binder = function () {\\n\\n              if (this instanceof bound) {\\n                  // 15.3.4.5.2 [[Construct]]\\n                  // When the [[Construct]] internal method of a function object,\\n                  // F that was created using the bind function is called with a\\n                  // list of arguments ExtraArgs, the following steps are taken:\\n                  // 1. Let target be the value of F's [[TargetFunction]]\\n                  //   internal property.\\n                  // 2. If target has no [[Construct]] internal method, a\\n                  //   TypeError exception is thrown.\\n                  // 3. Let boundArgs be the value of F's [[BoundArgs]] internal\\n                  //   property.\\n                  // 4. Let args be a new list containing the same values as the\\n                  //   list boundArgs in the same order followed by the same\\n                  //   values as the list ExtraArgs in the same order.\\n                  // 5. Return the result of calling the [[Construct]] internal\\n                  //   method of target providing args as the arguments.\\n\\n                  var result = target.apply(\\n                      this,\\n                      array_concat.call(args, array_slice.call(arguments))\\n                  );\\n                  if ($Object(result) === result) {\\n                      return result;\\n                  }\\n                  return this;\\n\\n              } else {\\n                  // 15.3.4.5.1 [[Call]]\\n                  // When the [[Call]] internal method of a function object, F,\\n                  // which was created using the bind function is called with a\\n                  // this value and a list of arguments ExtraArgs, the following\\n                  // steps are taken:\\n                  // 1. Let boundArgs be the value of F's [[BoundArgs]] internal\\n                  //   property.\\n                  // 2. Let boundThis be the value of F's [[BoundThis]] internal\\n                  //   property.\\n                  // 3. Let target be the value of F's [[TargetFunction]] internal\\n                  //   property.\\n                  // 4. Let args be a new list containing the same values as the\\n                  //   list boundArgs in the same order followed by the same\\n                  //   values as the list ExtraArgs in the same order.\\n                  // 5. Return the result of calling the [[Call]] internal method\\n                  //   of target providing boundThis as the this value and\\n                  //   providing args as the arguments.\\n\\n                  // equiv: target.call(this, ...boundArgs, ...args)\\n                  return target.apply(\\n                      that,\\n                      array_concat.call(args, array_slice.call(arguments))\\n                  );\\n\\n              }\\n\\n          };\\n\\n          // 15. If the [[Class]] internal property of Target is \\\"Function\\\", then\\n          //     a. Let L be the length property of Target minus the length of A.\\n          //     b. Set the length own property of F to either 0 or L, whichever is\\n          //       larger.\\n          // 16. Else set the length own property of F to 0.\\n\\n          var boundLength = max(0, target.length - args.length);\\n\\n          // 17. Set the attributes of the length own property of F to the values\\n          //   specified in 15.3.5.1.\\n          var boundArgs = [];\\n          for (var i = 0; i < boundLength; i++) {\\n              array_push.call(boundArgs, '$' + i);\\n          }\\n\\n          // XXX Build a dynamic function with desired amount of arguments is the only\\n          // way to set the length property of a function.\\n          // In environments where Content Security Policies enabled (Chrome extensions,\\n          // for ex.) all use of eval or Function costructor throws an exception.\\n          // However in all of these environments Function.prototype.bind exists\\n          // and so this code will never be executed.\\n          bound = Function('binder', 'return function (' + boundArgs.join(',') + '){ return binder.apply(this, arguments); }')(binder);\\n\\n          if (target.prototype) {\\n              Empty.prototype = target.prototype;\\n              bound.prototype = new Empty();\\n              // Clean up dangling references.\\n              Empty.prototype = null;\\n          }\\n\\n          // TODO\\n          // 18. Set the [[Extensible]] internal property of F to true.\\n\\n          // TODO\\n          // 19. Let thrower be the [[ThrowTypeError]] function Object (13.2.3).\\n          // 20. Call the [[DefineOwnProperty]] internal method of F with\\n          //   arguments \\\"caller\\\", PropertyDescriptor {[[Get]]: thrower, [[Set]]:\\n          //   thrower, [[Enumerable]]: false, [[Configurable]]: false}, and\\n          //   false.\\n          // 21. Call the [[DefineOwnProperty]] internal method of F with\\n          //   arguments \\\"arguments\\\", PropertyDescriptor {[[Get]]: thrower,\\n          //   [[Set]]: thrower, [[Enumerable]]: false, [[Configurable]]: false},\\n          //   and false.\\n\\n          // TODO\\n          // NOTE Function objects created using Function.prototype.bind do not\\n          // have a prototype property or the [[Code]], [[FormalParameters]], and\\n          // [[Scope]] internal properties.\\n          // XXX can't delete prototype in pure-js.\\n\\n          // 22. Return F.\\n          return bound;\\n      }\\n  });\\n})\\n.call('object' === typeof window && window || 'object' === typeof self && self || 'object' === typeof global && global || {});\\n\\n(function(undefined) {\\n\\n    // Detection from https://raw.githubusercontent.com/Financial-Times/polyfill-service/master/packages/polyfill-library/polyfills/DOMTokenList/detect.js\\n    var detect = (\\n      'DOMTokenList' in this && (function (x) {\\n        return 'classList' in x ? !x.classList.toggle('x', false) && !x.className : true;\\n      })(document.createElement('x'))\\n    );\\n\\n    if (detect) return\\n\\n    // Polyfill from https://raw.githubusercontent.com/Financial-Times/polyfill-service/master/packages/polyfill-library/polyfills/DOMTokenList/polyfill.js\\n    (function (global) {\\n      var nativeImpl = \\\"DOMTokenList\\\" in global && global.DOMTokenList;\\n\\n      if (\\n          !nativeImpl ||\\n          (\\n            !!document.createElementNS &&\\n            !!document.createElementNS('http://www.w3.org/2000/svg', 'svg') &&\\n            !(document.createElementNS(\\\"http://www.w3.org/2000/svg\\\", \\\"svg\\\").classList instanceof DOMTokenList)\\n          )\\n        ) {\\n        global.DOMTokenList = (function() { // eslint-disable-line no-unused-vars\\n          var dpSupport = true;\\n          var defineGetter = function (object, name, fn, configurable) {\\n            if (Object.defineProperty)\\n              Object.defineProperty(object, name, {\\n                configurable: false === dpSupport ? true : !!configurable,\\n                get: fn\\n              });\\n\\n            else object.__defineGetter__(name, fn);\\n          };\\n\\n          /** Ensure the browser allows Object.defineProperty to be used on native JavaScript objects. */\\n          try {\\n            defineGetter({}, \\\"support\\\");\\n          }\\n          catch (e) {\\n            dpSupport = false;\\n          }\\n\\n\\n          var _DOMTokenList = function (el, prop) {\\n            var that = this;\\n            var tokens = [];\\n            var tokenMap = {};\\n            var length = 0;\\n            var maxLength = 0;\\n            var addIndexGetter = function (i) {\\n              defineGetter(that, i, function () {\\n                preop();\\n                return tokens[i];\\n              }, false);\\n\\n            };\\n            var reindex = function () {\\n\\n              /** Define getter functions for array-like access to the tokenList's contents. */\\n              if (length >= maxLength)\\n                for (; maxLength < length; ++maxLength) {\\n                  addIndexGetter(maxLength);\\n                }\\n            };\\n\\n            /** Helper function called at the start of each class method. Internal use only. */\\n            var preop = function () {\\n              var error;\\n              var i;\\n              var args = arguments;\\n              var rSpace = /\\\\s+/;\\n\\n              /** Validate the token/s passed to an instance method, if any. */\\n              if (args.length)\\n                for (i = 0; i < args.length; ++i)\\n                  if (rSpace.test(args[i])) {\\n                    error = new SyntaxError('String \\\"' + args[i] + '\\\" ' + \\\"contains\\\" + ' an invalid character');\\n                    error.code = 5;\\n                    error.name = \\\"InvalidCharacterError\\\";\\n                    throw error;\\n                  }\\n\\n\\n              /** Split the new value apart by whitespace*/\\n              if (typeof el[prop] === \\\"object\\\") {\\n                tokens = (\\\"\\\" + el[prop].baseVal).replace(/^\\\\s+|\\\\s+$/g, \\\"\\\").split(rSpace);\\n              } else {\\n                tokens = (\\\"\\\" + el[prop]).replace(/^\\\\s+|\\\\s+$/g, \\\"\\\").split(rSpace);\\n              }\\n\\n              /** Avoid treating blank strings as single-item token lists */\\n              if (\\\"\\\" === tokens[0]) tokens = [];\\n\\n              /** Repopulate the internal token lists */\\n              tokenMap = {};\\n              for (i = 0; i < tokens.length; ++i)\\n                tokenMap[tokens[i]] = true;\\n              length = tokens.length;\\n              reindex();\\n            };\\n\\n            /** Populate our internal token list if the targeted attribute of the subject element isn't empty. */\\n            preop();\\n\\n            /** Return the number of tokens in the underlying string. Read-only. */\\n            defineGetter(that, \\\"length\\\", function () {\\n              preop();\\n              return length;\\n            });\\n\\n            /** Override the default toString/toLocaleString methods to return a space-delimited list of tokens when typecast. */\\n            that.toLocaleString =\\n              that.toString = function () {\\n                preop();\\n                return tokens.join(\\\" \\\");\\n              };\\n\\n            that.item = function (idx) {\\n              preop();\\n              return tokens[idx];\\n            };\\n\\n            that.contains = function (token) {\\n              preop();\\n              return !!tokenMap[token];\\n            };\\n\\n            that.add = function () {\\n              preop.apply(that, args = arguments);\\n\\n              for (var args, token, i = 0, l = args.length; i < l; ++i) {\\n                token = args[i];\\n                if (!tokenMap[token]) {\\n                  tokens.push(token);\\n                  tokenMap[token] = true;\\n                }\\n              }\\n\\n              /** Update the targeted attribute of the attached element if the token list's changed. */\\n              if (length !== tokens.length) {\\n                length = tokens.length >>> 0;\\n                if (typeof el[prop] === \\\"object\\\") {\\n                  el[prop].baseVal = tokens.join(\\\" \\\");\\n                } else {\\n                  el[prop] = tokens.join(\\\" \\\");\\n                }\\n                reindex();\\n              }\\n            };\\n\\n            that.remove = function () {\\n              preop.apply(that, args = arguments);\\n\\n              /** Build a hash of token names to compare against when recollecting our token list. */\\n              for (var args, ignore = {}, i = 0, t = []; i < args.length; ++i) {\\n                ignore[args[i]] = true;\\n                delete tokenMap[args[i]];\\n              }\\n\\n              /** Run through our tokens list and reassign only those that aren't defined in the hash declared above. */\\n              for (i = 0; i < tokens.length; ++i)\\n                if (!ignore[tokens[i]]) t.push(tokens[i]);\\n\\n              tokens = t;\\n              length = t.length >>> 0;\\n\\n              /** Update the targeted attribute of the attached element. */\\n              if (typeof el[prop] === \\\"object\\\") {\\n                el[prop].baseVal = tokens.join(\\\" \\\");\\n              } else {\\n                el[prop] = tokens.join(\\\" \\\");\\n              }\\n              reindex();\\n            };\\n\\n            that.toggle = function (token, force) {\\n              preop.apply(that, [token]);\\n\\n              /** Token state's being forced. */\\n              if (undefined !== force) {\\n                if (force) {\\n                  that.add(token);\\n                  return true;\\n                } else {\\n                  that.remove(token);\\n                  return false;\\n                }\\n              }\\n\\n              /** Token already exists in tokenList. Remove it, and return FALSE. */\\n              if (tokenMap[token]) {\\n                that.remove(token);\\n                return false;\\n              }\\n\\n              /** Otherwise, add the token and return TRUE. */\\n              that.add(token);\\n              return true;\\n            };\\n\\n            return that;\\n          };\\n\\n          return _DOMTokenList;\\n        }());\\n      }\\n\\n      // Add second argument to native DOMTokenList.toggle() if necessary\\n      (function () {\\n        var e = document.createElement('span');\\n        if (!('classList' in e)) return;\\n        e.classList.toggle('x', false);\\n        if (!e.classList.contains('x')) return;\\n        e.classList.constructor.prototype.toggle = function toggle(token /*, force*/) {\\n          var force = arguments[1];\\n          if (force === undefined) {\\n            var add = !this.contains(token);\\n            this[add ? 'add' : 'remove'](token);\\n            return add;\\n          }\\n          force = !!force;\\n          this[force ? 'add' : 'remove'](token);\\n          return force;\\n        };\\n      }());\\n\\n      // Add multiple arguments to native DOMTokenList.add() if necessary\\n      (function () {\\n        var e = document.createElement('span');\\n        if (!('classList' in e)) return;\\n        e.classList.add('a', 'b');\\n        if (e.classList.contains('b')) return;\\n        var native = e.classList.constructor.prototype.add;\\n        e.classList.constructor.prototype.add = function () {\\n          var args = arguments;\\n          var l = arguments.length;\\n          for (var i = 0; i < l; i++) {\\n            native.call(this, args[i]);\\n          }\\n        };\\n      }());\\n\\n      // Add multiple arguments to native DOMTokenList.remove() if necessary\\n      (function () {\\n        var e = document.createElement('span');\\n        if (!('classList' in e)) return;\\n        e.classList.add('a');\\n        e.classList.add('b');\\n        e.classList.remove('a', 'b');\\n        if (!e.classList.contains('b')) return;\\n        var native = e.classList.constructor.prototype.remove;\\n        e.classList.constructor.prototype.remove = function () {\\n          var args = arguments;\\n          var l = arguments.length;\\n          for (var i = 0; i < l; i++) {\\n            native.call(this, args[i]);\\n          }\\n        };\\n      }());\\n\\n    }(this));\\n\\n}).call('object' === typeof window && window || 'object' === typeof self && self || 'object' === typeof global && global || {});\\n\\n(function(undefined) {\\n\\n// Detection from https://github.com/Financial-Times/polyfill-service/blob/master/packages/polyfill-library/polyfills/Document/detect.js\\nvar detect = (\\\"Document\\\" in this);\\n\\nif (detect) return\\n\\n// Polyfill from https://cdn.polyfill.io/v2/polyfill.js?features=Document&flags=always\\nif ((typeof WorkerGlobalScope === \\\"undefined\\\") && (typeof importScripts !== \\\"function\\\")) {\\n\\n\\tif (this.HTMLDocument) { // IE8\\n\\n\\t\\t// HTMLDocument is an extension of Document.  If the browser has HTMLDocument but not Document, the former will suffice as an alias for the latter.\\n\\t\\tthis.Document = this.HTMLDocument;\\n\\n\\t} else {\\n\\n\\t\\t// Create an empty function to act as the missing constructor for the document object, attach the document object as its prototype.  The function needs to be anonymous else it is hoisted and causes the feature detect to prematurely pass, preventing the assignments below being made.\\n\\t\\tthis.Document = this.HTMLDocument = document.constructor = (new Function('return function Document() {}')());\\n\\t\\tthis.Document.prototype = document;\\n\\t}\\n}\\n\\n\\n})\\n.call('object' === typeof window && window || 'object' === typeof self && self || 'object' === typeof global && global || {});\\n\\n(function(undefined) {\\n\\n// Detection from https://github.com/Financial-Times/polyfill-service/blob/master/packages/polyfill-library/polyfills/Element/detect.js\\nvar detect = ('Element' in this && 'HTMLElement' in this);\\n\\nif (detect) return\\n\\n// Polyfill from https://cdn.polyfill.io/v2/polyfill.js?features=Element&flags=always\\n(function () {\\n\\n\\t// IE8\\n\\tif (window.Element && !window.HTMLElement) {\\n\\t\\twindow.HTMLElement = window.Element;\\n\\t\\treturn;\\n\\t}\\n\\n\\t// create Element constructor\\n\\twindow.Element = window.HTMLElement = new Function('return function Element() {}')();\\n\\n\\t// generate sandboxed iframe\\n\\tvar vbody = document.appendChild(document.createElement('body'));\\n\\tvar frame = vbody.appendChild(document.createElement('iframe'));\\n\\n\\t// use sandboxed iframe to replicate Element functionality\\n\\tvar frameDocument = frame.contentWindow.document;\\n\\tvar prototype = Element.prototype = frameDocument.appendChild(frameDocument.createElement('*'));\\n\\tvar cache = {};\\n\\n\\t// polyfill Element.prototype on an element\\n\\tvar shiv = function (element, deep) {\\n\\t\\tvar\\n\\t\\tchildNodes = element.childNodes || [],\\n\\t\\tindex = -1,\\n\\t\\tkey, value, childNode;\\n\\n\\t\\tif (element.nodeType === 1 && element.constructor !== Element) {\\n\\t\\t\\telement.constructor = Element;\\n\\n\\t\\t\\tfor (key in cache) {\\n\\t\\t\\t\\tvalue = cache[key];\\n\\t\\t\\t\\telement[key] = value;\\n\\t\\t\\t}\\n\\t\\t}\\n\\n\\t\\twhile (childNode = deep && childNodes[++index]) {\\n\\t\\t\\tshiv(childNode, deep);\\n\\t\\t}\\n\\n\\t\\treturn element;\\n\\t};\\n\\n\\tvar elements = document.getElementsByTagName('*');\\n\\tvar nativeCreateElement = document.createElement;\\n\\tvar interval;\\n\\tvar loopLimit = 100;\\n\\n\\tprototype.attachEvent('onpropertychange', function (event) {\\n\\t\\tvar\\n\\t\\tpropertyName = event.propertyName,\\n\\t\\tnonValue = !cache.hasOwnProperty(propertyName),\\n\\t\\tnewValue = prototype[propertyName],\\n\\t\\toldValue = cache[propertyName],\\n\\t\\tindex = -1,\\n\\t\\telement;\\n\\n\\t\\twhile (element = elements[++index]) {\\n\\t\\t\\tif (element.nodeType === 1) {\\n\\t\\t\\t\\tif (nonValue || element[propertyName] === oldValue) {\\n\\t\\t\\t\\t\\telement[propertyName] = newValue;\\n\\t\\t\\t\\t}\\n\\t\\t\\t}\\n\\t\\t}\\n\\n\\t\\tcache[propertyName] = newValue;\\n\\t});\\n\\n\\tprototype.constructor = Element;\\n\\n\\tif (!prototype.hasAttribute) {\\n\\t\\t// <Element>.hasAttribute\\n\\t\\tprototype.hasAttribute = function hasAttribute(name) {\\n\\t\\t\\treturn this.getAttribute(name) !== null;\\n\\t\\t};\\n\\t}\\n\\n\\t// Apply Element prototype to the pre-existing DOM as soon as the body element appears.\\n\\tfunction bodyCheck() {\\n\\t\\tif (!(loopLimit--)) clearTimeout(interval);\\n\\t\\tif (document.body && !document.body.prototype && /(complete|interactive)/.test(document.readyState)) {\\n\\t\\t\\tshiv(document, true);\\n\\t\\t\\tif (interval && document.body.prototype) clearTimeout(interval);\\n\\t\\t\\treturn (!!document.body.prototype);\\n\\t\\t}\\n\\t\\treturn false;\\n\\t}\\n\\tif (!bodyCheck()) {\\n\\t\\tdocument.onreadystatechange = bodyCheck;\\n\\t\\tinterval = setInterval(bodyCheck, 25);\\n\\t}\\n\\n\\t// Apply to any new elements created after load\\n\\tdocument.createElement = function createElement(nodeName) {\\n\\t\\tvar element = nativeCreateElement(String(nodeName).toLowerCase());\\n\\t\\treturn shiv(element);\\n\\t};\\n\\n\\t// remove sandboxed iframe\\n\\tdocument.removeChild(vbody);\\n}());\\n\\n})\\n.call('object' === typeof window && window || 'object' === typeof self && self || 'object' === typeof global && global || {});\\n\\n(function(undefined) {\\n\\n    // Detection from https://raw.githubusercontent.com/Financial-Times/polyfill-service/8717a9e04ac7aff99b4980fbedead98036b0929a/packages/polyfill-library/polyfills/Element/prototype/classList/detect.js\\n    var detect = (\\n      'document' in this && \\\"classList\\\" in document.documentElement && 'Element' in this && 'classList' in Element.prototype && (function () {\\n        var e = document.createElement('span');\\n        e.classList.add('a', 'b');\\n        return e.classList.contains('b');\\n      }())\\n    );\\n\\n    if (detect) return\\n\\n    // Polyfill from https://cdn.polyfill.io/v2/polyfill.js?features=Element.prototype.classList&flags=always\\n    (function (global) {\\n      var dpSupport = true;\\n      var defineGetter = function (object, name, fn, configurable) {\\n        if (Object.defineProperty)\\n          Object.defineProperty(object, name, {\\n            configurable: false === dpSupport ? true : !!configurable,\\n            get: fn\\n          });\\n\\n        else object.__defineGetter__(name, fn);\\n      };\\n      /** Ensure the browser allows Object.defineProperty to be used on native JavaScript objects. */\\n      try {\\n        defineGetter({}, \\\"support\\\");\\n      }\\n      catch (e) {\\n        dpSupport = false;\\n      }\\n      /** Polyfills a property with a DOMTokenList */\\n      var addProp = function (o, name, attr) {\\n\\n        defineGetter(o.prototype, name, function () {\\n          var tokenList;\\n\\n          var THIS = this,\\n\\n          /** Prevent this from firing twice for some reason. What the hell, IE. */\\n          gibberishProperty = \\\"__defineGetter__\\\" + \\\"DEFINE_PROPERTY\\\" + name;\\n          if(THIS[gibberishProperty]) return tokenList;\\n          THIS[gibberishProperty] = true;\\n\\n          /**\\n           * IE8 can't define properties on native JavaScript objects, so we'll use a dumb hack instead.\\n           *\\n           * What this is doing is creating a dummy element (\\\"reflection\\\") inside a detached phantom node (\\\"mirror\\\")\\n           * that serves as the target of Object.defineProperty instead. While we could simply use the subject HTML\\n           * element instead, this would conflict with element types which use indexed properties (such as forms and\\n           * select lists).\\n           */\\n          if (false === dpSupport) {\\n\\n            var visage;\\n            var mirror = addProp.mirror || document.createElement(\\\"div\\\");\\n            var reflections = mirror.childNodes;\\n            var l = reflections.length;\\n\\n            for (var i = 0; i < l; ++i)\\n              if (reflections[i]._R === THIS) {\\n                visage = reflections[i];\\n                break;\\n              }\\n\\n            /** Couldn't find an element's reflection inside the mirror. Materialise one. */\\n            visage || (visage = mirror.appendChild(document.createElement(\\\"div\\\")));\\n\\n            tokenList = DOMTokenList.call(visage, THIS, attr);\\n          } else tokenList = new DOMTokenList(THIS, attr);\\n\\n          defineGetter(THIS, name, function () {\\n            return tokenList;\\n          });\\n          delete THIS[gibberishProperty];\\n\\n          return tokenList;\\n        }, true);\\n      };\\n\\n      addProp(global.Element, \\\"classList\\\", \\\"className\\\");\\n      addProp(global.HTMLElement, \\\"classList\\\", \\\"className\\\");\\n      addProp(global.HTMLLinkElement, \\\"relList\\\", \\\"rel\\\");\\n      addProp(global.HTMLAnchorElement, \\\"relList\\\", \\\"rel\\\");\\n      addProp(global.HTMLAreaElement, \\\"relList\\\", \\\"rel\\\");\\n    }(this));\\n\\n}).call('object' === typeof window && window || 'object' === typeof self && self || 'object' === typeof global && global || {});\\n\\n(function(undefined) {\\n\\n    // Detection from https://github.com/Financial-Times/polyfill-service/pull/1062/files#diff-b09a5d2acf3314b46a6c8f8d0c31b85c\\n    var detect = (\\n      'Element' in this && \\\"nextElementSibling\\\" in document.documentElement\\n    );\\n\\n    if (detect) return\\n\\n\\n    (function (global) {\\n\\n      // There is no polyfill in polyfill-library (https://github.com/Financial-Times/polyfill-library/issues/338)\\n      // So we source this from https://github.com/Alhadis/Snippets/blob/e09b4dfb7ffc9e250bc28319051e39ead3e5f70a/js/polyfills/IE8-child-elements.js#L28-L33\\n      Object.defineProperty(Element.prototype, \\\"nextElementSibling\\\", {\\n        get: function(){\\n          var el = this.nextSibling;\\n          while (el && el.nodeType !== 1) { el = el.nextSibling; }\\n          return el;\\n        }\\n      });\\n\\n    }(this));\\n\\n}).call('object' === typeof window && window || 'object' === typeof self && self || 'object' === typeof global && global || {});\\n\\n(function(undefined) {\\n\\n    // Detection from https://github.com/Financial-Times/polyfill-service/pull/1062/files#diff-a162235fbc9c0dd40d4032265f44942e\\n    var detect = (\\n      'Element' in this && 'previousElementSibling' in document.documentElement\\n    );\\n\\n    if (detect) return\\n\\n    (function (global) {\\n      // There is no polyfill in polyfill-library (https://github.com/Financial-Times/polyfill-library/issues/338)\\n      // So we source this from https://github.com/Alhadis/Snippets/blob/e09b4dfb7ffc9e250bc28319051e39ead3e5f70a/js/polyfills/IE8-child-elements.js#L35-L40\\n      Object.defineProperty(Element.prototype, 'previousElementSibling', {\\n        get: function(){\\n          var el = this.previousSibling;\\n          while (el && el.nodeType !== 1) { el = el.previousSibling; }\\n          return el;\\n        }\\n      });\\n\\n    }(this));\\n\\n}).call('object' === typeof window && window || 'object' === typeof self && self || 'object' === typeof global && global || {});\\n\\n(function(undefined) {\\n\\n// Detection from https://github.com/Financial-Times/polyfill-service/blob/master/packages/polyfill-library/polyfills/Window/detect.js\\nvar detect = ('Window' in this);\\n\\nif (detect) return\\n\\n// Polyfill from https://cdn.polyfill.io/v2/polyfill.js?features=Window&flags=always\\nif ((typeof WorkerGlobalScope === \\\"undefined\\\") && (typeof importScripts !== \\\"function\\\")) {\\n\\t(function (global) {\\n\\t\\tif (global.constructor) {\\n\\t\\t\\tglobal.Window = global.constructor;\\n\\t\\t} else {\\n\\t\\t\\t(global.Window = global.constructor = new Function('return function Window() {}')()).prototype = this;\\n\\t\\t}\\n\\t}(this));\\n}\\n\\n})\\n.call('object' === typeof window && window || 'object' === typeof self && self || 'object' === typeof global && global || {});\\n\\n(function(undefined) {\\n\\n// Detection from https://github.com/Financial-Times/polyfill-service/blob/master/packages/polyfill-library/polyfills/Event/detect.js\\nvar detect = (\\n  (function(global) {\\n\\n  \\tif (!('Event' in global)) return false;\\n  \\tif (typeof global.Event === 'function') return true;\\n\\n  \\ttry {\\n\\n  \\t\\t// In IE 9-11, the Event object exists but cannot be instantiated\\n  \\t\\tnew Event('click');\\n  \\t\\treturn true;\\n  \\t} catch(e) {\\n  \\t\\treturn false;\\n  \\t}\\n  }(this))\\n);\\n\\nif (detect) return\\n\\n// Polyfill from https://cdn.polyfill.io/v2/polyfill.js?features=Event&flags=always\\n(function () {\\n\\tvar unlistenableWindowEvents = {\\n\\t\\tclick: 1,\\n\\t\\tdblclick: 1,\\n\\t\\tkeyup: 1,\\n\\t\\tkeypress: 1,\\n\\t\\tkeydown: 1,\\n\\t\\tmousedown: 1,\\n\\t\\tmouseup: 1,\\n\\t\\tmousemove: 1,\\n\\t\\tmouseover: 1,\\n\\t\\tmouseenter: 1,\\n\\t\\tmouseleave: 1,\\n\\t\\tmouseout: 1,\\n\\t\\tstorage: 1,\\n\\t\\tstoragecommit: 1,\\n\\t\\ttextinput: 1\\n\\t};\\n\\n\\t// This polyfill depends on availability of `document` so will not run in a worker\\n\\t// However, we asssume there are no browsers with worker support that lack proper\\n\\t// support for `Event` within the worker\\n\\tif (typeof document === 'undefined' || typeof window === 'undefined') return;\\n\\n\\tfunction indexOf(array, element) {\\n\\t\\tvar\\n\\t\\tindex = -1,\\n\\t\\tlength = array.length;\\n\\n\\t\\twhile (++index < length) {\\n\\t\\t\\tif (index in array && array[index] === element) {\\n\\t\\t\\t\\treturn index;\\n\\t\\t\\t}\\n\\t\\t}\\n\\n\\t\\treturn -1;\\n\\t}\\n\\n\\tvar existingProto = (window.Event && window.Event.prototype) || null;\\n\\twindow.Event = Window.prototype.Event = function Event(type, eventInitDict) {\\n\\t\\tif (!type) {\\n\\t\\t\\tthrow new Error('Not enough arguments');\\n\\t\\t}\\n\\n\\t\\tvar event;\\n\\t\\t// Shortcut if browser supports createEvent\\n\\t\\tif ('createEvent' in document) {\\n\\t\\t\\tevent = document.createEvent('Event');\\n\\t\\t\\tvar bubbles = eventInitDict && eventInitDict.bubbles !== undefined ? eventInitDict.bubbles : false;\\n\\t\\t\\tvar cancelable = eventInitDict && eventInitDict.cancelable !== undefined ? eventInitDict.cancelable : false;\\n\\n\\t\\t\\tevent.initEvent(type, bubbles, cancelable);\\n\\n\\t\\t\\treturn event;\\n\\t\\t}\\n\\n\\t\\tevent = document.createEventObject();\\n\\n\\t\\tevent.type = type;\\n\\t\\tevent.bubbles = eventInitDict && eventInitDict.bubbles !== undefined ? eventInitDict.bubbles : false;\\n\\t\\tevent.cancelable = eventInitDict && eventInitDict.cancelable !== undefined ? eventInitDict.cancelable : false;\\n\\n\\t\\treturn event;\\n\\t};\\n\\tif (existingProto) {\\n\\t\\tObject.defineProperty(window.Event, 'prototype', {\\n\\t\\t\\tconfigurable: false,\\n\\t\\t\\tenumerable: false,\\n\\t\\t\\twritable: true,\\n\\t\\t\\tvalue: existingProto\\n\\t\\t});\\n\\t}\\n\\n\\tif (!('createEvent' in document)) {\\n\\t\\twindow.addEventListener = Window.prototype.addEventListener = Document.prototype.addEventListener = Element.prototype.addEventListener = function addEventListener() {\\n\\t\\t\\tvar\\n\\t\\t\\telement = this,\\n\\t\\t\\ttype = arguments[0],\\n\\t\\t\\tlistener = arguments[1];\\n\\n\\t\\t\\tif (element === window && type in unlistenableWindowEvents) {\\n\\t\\t\\t\\tthrow new Error('In IE8 the event: ' + type + ' is not available on the window object. Please see https://github.com/Financial-Times/polyfill-service/issues/317 for more information.');\\n\\t\\t\\t}\\n\\n\\t\\t\\tif (!element._events) {\\n\\t\\t\\t\\telement._events = {};\\n\\t\\t\\t}\\n\\n\\t\\t\\tif (!element._events[type]) {\\n\\t\\t\\t\\telement._events[type] = function (event) {\\n\\t\\t\\t\\t\\tvar\\n\\t\\t\\t\\t\\tlist = element._events[event.type].list,\\n\\t\\t\\t\\t\\tevents = list.slice(),\\n\\t\\t\\t\\t\\tindex = -1,\\n\\t\\t\\t\\t\\tlength = events.length,\\n\\t\\t\\t\\t\\teventElement;\\n\\n\\t\\t\\t\\t\\tevent.preventDefault = function preventDefault() {\\n\\t\\t\\t\\t\\t\\tif (event.cancelable !== false) {\\n\\t\\t\\t\\t\\t\\t\\tevent.returnValue = false;\\n\\t\\t\\t\\t\\t\\t}\\n\\t\\t\\t\\t\\t};\\n\\n\\t\\t\\t\\t\\tevent.stopPropagation = function stopPropagation() {\\n\\t\\t\\t\\t\\t\\tevent.cancelBubble = true;\\n\\t\\t\\t\\t\\t};\\n\\n\\t\\t\\t\\t\\tevent.stopImmediatePropagation = function stopImmediatePropagation() {\\n\\t\\t\\t\\t\\t\\tevent.cancelBubble = true;\\n\\t\\t\\t\\t\\t\\tevent.cancelImmediate = true;\\n\\t\\t\\t\\t\\t};\\n\\n\\t\\t\\t\\t\\tevent.currentTarget = element;\\n\\t\\t\\t\\t\\tevent.relatedTarget = event.fromElement || null;\\n\\t\\t\\t\\t\\tevent.target = event.target || event.srcElement || element;\\n\\t\\t\\t\\t\\tevent.timeStamp = new Date().getTime();\\n\\n\\t\\t\\t\\t\\tif (event.clientX) {\\n\\t\\t\\t\\t\\t\\tevent.pageX = event.clientX + document.documentElement.scrollLeft;\\n\\t\\t\\t\\t\\t\\tevent.pageY = event.clientY + document.documentElement.scrollTop;\\n\\t\\t\\t\\t\\t}\\n\\n\\t\\t\\t\\t\\twhile (++index < length && !event.cancelImmediate) {\\n\\t\\t\\t\\t\\t\\tif (index in events) {\\n\\t\\t\\t\\t\\t\\t\\teventElement = events[index];\\n\\n\\t\\t\\t\\t\\t\\t\\tif (indexOf(list, eventElement) !== -1 && typeof eventElement === 'function') {\\n\\t\\t\\t\\t\\t\\t\\t\\teventElement.call(element, event);\\n\\t\\t\\t\\t\\t\\t\\t}\\n\\t\\t\\t\\t\\t\\t}\\n\\t\\t\\t\\t\\t}\\n\\t\\t\\t\\t};\\n\\n\\t\\t\\t\\telement._events[type].list = [];\\n\\n\\t\\t\\t\\tif (element.attachEvent) {\\n\\t\\t\\t\\t\\telement.attachEvent('on' + type, element._events[type]);\\n\\t\\t\\t\\t}\\n\\t\\t\\t}\\n\\n\\t\\t\\telement._events[type].list.push(listener);\\n\\t\\t};\\n\\n\\t\\twindow.removeEventListener = Window.prototype.removeEventListener = Document.prototype.removeEventListener = Element.prototype.removeEventListener = function removeEventListener() {\\n\\t\\t\\tvar\\n\\t\\t\\telement = this,\\n\\t\\t\\ttype = arguments[0],\\n\\t\\t\\tlistener = arguments[1],\\n\\t\\t\\tindex;\\n\\n\\t\\t\\tif (element._events && element._events[type] && element._events[type].list) {\\n\\t\\t\\t\\tindex = indexOf(element._events[type].list, listener);\\n\\n\\t\\t\\t\\tif (index !== -1) {\\n\\t\\t\\t\\t\\telement._events[type].list.splice(index, 1);\\n\\n\\t\\t\\t\\t\\tif (!element._events[type].list.length) {\\n\\t\\t\\t\\t\\t\\tif (element.detachEvent) {\\n\\t\\t\\t\\t\\t\\t\\telement.detachEvent('on' + type, element._events[type]);\\n\\t\\t\\t\\t\\t\\t}\\n\\t\\t\\t\\t\\t\\tdelete element._events[type];\\n\\t\\t\\t\\t\\t}\\n\\t\\t\\t\\t}\\n\\t\\t\\t}\\n\\t\\t};\\n\\n\\t\\twindow.dispatchEvent = Window.prototype.dispatchEvent = Document.prototype.dispatchEvent = Element.prototype.dispatchEvent = function dispatchEvent(event) {\\n\\t\\t\\tif (!arguments.length) {\\n\\t\\t\\t\\tthrow new Error('Not enough arguments');\\n\\t\\t\\t}\\n\\n\\t\\t\\tif (!event || typeof event.type !== 'string') {\\n\\t\\t\\t\\tthrow new Error('DOM Events Exception 0');\\n\\t\\t\\t}\\n\\n\\t\\t\\tvar element = this, type = event.type;\\n\\n\\t\\t\\ttry {\\n\\t\\t\\t\\tif (!event.bubbles) {\\n\\t\\t\\t\\t\\tevent.cancelBubble = true;\\n\\n\\t\\t\\t\\t\\tvar cancelBubbleEvent = function (event) {\\n\\t\\t\\t\\t\\t\\tevent.cancelBubble = true;\\n\\n\\t\\t\\t\\t\\t\\t(element || window).detachEvent('on' + type, cancelBubbleEvent);\\n\\t\\t\\t\\t\\t};\\n\\n\\t\\t\\t\\t\\tthis.attachEvent('on' + type, cancelBubbleEvent);\\n\\t\\t\\t\\t}\\n\\n\\t\\t\\t\\tthis.fireEvent('on' + type, event);\\n\\t\\t\\t} catch (error) {\\n\\t\\t\\t\\tevent.target = element;\\n\\n\\t\\t\\t\\tdo {\\n\\t\\t\\t\\t\\tevent.currentTarget = element;\\n\\n\\t\\t\\t\\t\\tif ('_events' in element && typeof element._events[type] === 'function') {\\n\\t\\t\\t\\t\\t\\telement._events[type].call(element, event);\\n\\t\\t\\t\\t\\t}\\n\\n\\t\\t\\t\\t\\tif (typeof element['on' + type] === 'function') {\\n\\t\\t\\t\\t\\t\\telement['on' + type].call(element, event);\\n\\t\\t\\t\\t\\t}\\n\\n\\t\\t\\t\\t\\telement = element.nodeType === 9 ? element.parentWindow : element.parentNode;\\n\\t\\t\\t\\t} while (element && !event.cancelBubble);\\n\\t\\t\\t}\\n\\n\\t\\t\\treturn true;\\n\\t\\t};\\n\\n\\t\\t// Add the DOMContentLoaded Event\\n\\t\\tdocument.attachEvent('onreadystatechange', function() {\\n\\t\\t\\tif (document.readyState === 'complete') {\\n\\t\\t\\t\\tdocument.dispatchEvent(new Event('DOMContentLoaded', {\\n\\t\\t\\t\\t\\tbubbles: true\\n\\t\\t\\t\\t}));\\n\\t\\t\\t}\\n\\t\\t});\\n\\t}\\n}());\\n\\n})\\n.call('object' === typeof window && window || 'object' === typeof self && self || 'object' === typeof global && global || {});\\n\\n/**\\n * TODO: Ideally this would be a NodeList.prototype.forEach polyfill\\n * This seems to fail in IE8, requires more investigation.\\n * See: https://github.com/imagitama/nodelist-foreach-polyfill\\n */\\nfunction nodeListForEach (nodes, callback) {\\n  if (window.NodeList.prototype.forEach) {\\n    return nodes.forEach(callback)\\n  }\\n  for (var i = 0; i < nodes.length; i++) {\\n    callback.call(window, nodes[i], i, nodes);\\n  }\\n}\\n\\nfunction Tabs ($module) {\\n  this.$module = $module;\\n  this.$tabs = $module.querySelectorAll('.govuk-tabs__tab');\\n\\n  this.keys = { left: 37, right: 39, up: 38, down: 40 };\\n  this.jsHiddenClass = 'govuk-tabs__panel--hidden';\\n}\\n\\nTabs.prototype.init = function () {\\n  if (typeof window.matchMedia === 'function') {\\n    this.setupResponsiveChecks();\\n  } else {\\n    this.setup();\\n  }\\n};\\n\\nTabs.prototype.setupResponsiveChecks = function () {\\n  this.mql = window.matchMedia('(min-width: 40.0625em)');\\n  this.mql.addListener(this.checkMode.bind(this));\\n  this.checkMode();\\n};\\n\\nTabs.prototype.checkMode = function () {\\n  if (this.mql.matches) {\\n    this.setup();\\n  } else {\\n    this.teardown();\\n  }\\n};\\n\\nTabs.prototype.setup = function () {\\n  var $module = this.$module;\\n  var $tabs = this.$tabs;\\n  var $tabList = $module.querySelector('.govuk-tabs__list');\\n  var $tabListItems = $module.querySelectorAll('.govuk-tabs__list-item');\\n\\n  if (!$tabs || !$tabList || !$tabListItems) {\\n    return\\n  }\\n\\n  $tabList.setAttribute('role', 'tablist');\\n\\n  nodeListForEach($tabListItems, function ($item) {\\n    $item.setAttribute('role', 'presentation');\\n  });\\n\\n  nodeListForEach($tabs, function ($tab) {\\n    // Set HTML attributes\\n    this.setAttributes($tab);\\n\\n    // Save bounded functions to use when removing event listeners during teardown\\n    $tab.boundTabClick = this.onTabClick.bind(this);\\n    $tab.boundTabKeydown = this.onTabKeydown.bind(this);\\n\\n    // Handle events\\n    $tab.addEventListener('click', $tab.boundTabClick, true);\\n    $tab.addEventListener('keydown', $tab.boundTabKeydown, true);\\n\\n    // Remove old active panels\\n    this.hideTab($tab);\\n  }.bind(this));\\n\\n  // Show either the active tab according to the URL's hash or the first tab\\n  var $activeTab = this.getTab(window.location.hash) || this.$tabs[0];\\n  this.showTab($activeTab);\\n\\n  // Handle hashchange events\\n  $module.boundOnHashChange = this.onHashChange.bind(this);\\n  window.addEventListener('hashchange', $module.boundOnHashChange, true);\\n};\\n\\nTabs.prototype.teardown = function () {\\n  var $module = this.$module;\\n  var $tabs = this.$tabs;\\n  var $tabList = $module.querySelector('.govuk-tabs__list');\\n  var $tabListItems = $module.querySelectorAll('.govuk-tabs__list-item');\\n\\n  if (!$tabs || !$tabList || !$tabListItems) {\\n    return\\n  }\\n\\n  $tabList.removeAttribute('role');\\n\\n  nodeListForEach($tabListItems, function ($item) {\\n    $item.removeAttribute('role', 'presentation');\\n  });\\n\\n  nodeListForEach($tabs, function ($tab) {\\n    // Remove events\\n    $tab.removeEventListener('click', $tab.boundTabClick, true);\\n    $tab.removeEventListener('keydown', $tab.boundTabKeydown, true);\\n\\n    // Unset HTML attributes\\n    this.unsetAttributes($tab);\\n  }.bind(this));\\n\\n  // Remove hashchange event handler\\n  window.removeEventListener('hashchange', $module.boundOnHashChange, true);\\n};\\n\\nTabs.prototype.onHashChange = function (e) {\\n  var hash = window.location.hash;\\n  var $tabWithHash = this.getTab(hash);\\n  if (!$tabWithHash) {\\n    return\\n  }\\n\\n  // Prevent changing the hash\\n  if (this.changingHash) {\\n    this.changingHash = false;\\n    return\\n  }\\n\\n  // Show either the active tab according to the URL's hash or the first tab\\n  var $previousTab = this.getCurrentTab();\\n\\n  this.hideTab($previousTab);\\n  this.showTab($tabWithHash);\\n  $tabWithHash.focus();\\n};\\n\\nTabs.prototype.hideTab = function ($tab) {\\n  this.unhighlightTab($tab);\\n  this.hidePanel($tab);\\n};\\n\\nTabs.prototype.showTab = function ($tab) {\\n  this.highlightTab($tab);\\n  this.showPanel($tab);\\n};\\n\\nTabs.prototype.getTab = function (hash) {\\n  return this.$module.querySelector('.govuk-tabs__tab[href=\\\"' + hash + '\\\"]')\\n};\\n\\nTabs.prototype.setAttributes = function ($tab) {\\n  // set tab attributes\\n  var panelId = this.getHref($tab).slice(1);\\n  $tab.setAttribute('id', 'tab_' + panelId);\\n  $tab.setAttribute('role', 'tab');\\n  $tab.setAttribute('aria-controls', panelId);\\n  $tab.setAttribute('aria-selected', 'false');\\n  $tab.setAttribute('tabindex', '-1');\\n\\n  // set panel attributes\\n  var $panel = this.getPanel($tab);\\n  $panel.setAttribute('role', 'tabpanel');\\n  $panel.setAttribute('aria-labelledby', $tab.id);\\n  $panel.classList.add(this.jsHiddenClass);\\n};\\n\\nTabs.prototype.unsetAttributes = function ($tab) {\\n  // unset tab attributes\\n  $tab.removeAttribute('id');\\n  $tab.removeAttribute('role');\\n  $tab.removeAttribute('aria-controls');\\n  $tab.removeAttribute('aria-selected');\\n  $tab.removeAttribute('tabindex');\\n\\n  // unset panel attributes\\n  var $panel = this.getPanel($tab);\\n  $panel.removeAttribute('role');\\n  $panel.removeAttribute('aria-labelledby');\\n  $panel.classList.remove(this.jsHiddenClass);\\n};\\n\\nTabs.prototype.onTabClick = function (e) {\\n  if (!e.target.classList.contains('govuk-tabs__tab')) {\\n  // Allow events on child DOM elements to bubble up to tab parent\\n    return false\\n  }\\n  e.preventDefault();\\n  var $newTab = e.target;\\n  var $currentTab = this.getCurrentTab();\\n  this.hideTab($currentTab);\\n  this.showTab($newTab);\\n  this.createHistoryEntry($newTab);\\n};\\n\\nTabs.prototype.createHistoryEntry = function ($tab) {\\n  var $panel = this.getPanel($tab);\\n\\n  // Save and restore the id\\n  // so the page doesn't jump when a user clicks a tab (which changes the hash)\\n  var id = $panel.id;\\n  $panel.id = '';\\n  this.changingHash = true;\\n  window.location.hash = this.getHref($tab).slice(1);\\n  $panel.id = id;\\n};\\n\\nTabs.prototype.onTabKeydown = function (e) {\\n  switch (e.keyCode) {\\n    case this.keys.left:\\n    case this.keys.up:\\n      this.activatePreviousTab();\\n      e.preventDefault();\\n      break\\n    case this.keys.right:\\n    case this.keys.down:\\n      this.activateNextTab();\\n      e.preventDefault();\\n      break\\n  }\\n};\\n\\nTabs.prototype.activateNextTab = function () {\\n  var currentTab = this.getCurrentTab();\\n  var nextTabListItem = currentTab.parentNode.nextElementSibling;\\n  if (nextTabListItem) {\\n    var nextTab = nextTabListItem.querySelector('.govuk-tabs__tab');\\n  }\\n  if (nextTab) {\\n    this.hideTab(currentTab);\\n    this.showTab(nextTab);\\n    nextTab.focus();\\n    this.createHistoryEntry(nextTab);\\n  }\\n};\\n\\nTabs.prototype.activatePreviousTab = function () {\\n  var currentTab = this.getCurrentTab();\\n  var previousTabListItem = currentTab.parentNode.previousElementSibling;\\n  if (previousTabListItem) {\\n    var previousTab = previousTabListItem.querySelector('.govuk-tabs__tab');\\n  }\\n  if (previousTab) {\\n    this.hideTab(currentTab);\\n    this.showTab(previousTab);\\n    previousTab.focus();\\n    this.createHistoryEntry(previousTab);\\n  }\\n};\\n\\nTabs.prototype.getPanel = function ($tab) {\\n  var $panel = this.$module.querySelector(this.getHref($tab));\\n  return $panel\\n};\\n\\nTabs.prototype.showPanel = function ($tab) {\\n  var $panel = this.getPanel($tab);\\n  $panel.classList.remove(this.jsHiddenClass);\\n};\\n\\nTabs.prototype.hidePanel = function (tab) {\\n  var $panel = this.getPanel(tab);\\n  $panel.classList.add(this.jsHiddenClass);\\n};\\n\\nTabs.prototype.unhighlightTab = function ($tab) {\\n  $tab.setAttribute('aria-selected', 'false');\\n  $tab.parentNode.classList.remove('govuk-tabs__list-item--selected');\\n  $tab.setAttribute('tabindex', '-1');\\n};\\n\\nTabs.prototype.highlightTab = function ($tab) {\\n  $tab.setAttribute('aria-selected', 'true');\\n  $tab.parentNode.classList.add('govuk-tabs__list-item--selected');\\n  $tab.setAttribute('tabindex', '0');\\n};\\n\\nTabs.prototype.getCurrentTab = function () {\\n  return this.$module.querySelector('.govuk-tabs__list-item--selected .govuk-tabs__tab')\\n};\\n\\n// this is because IE doesn't always return the actual value but a relative full path\\n// should be a utility function most prob\\n// http://labs.thesedays.com/blog/2010/01/08/getting-the-href-value-with-jquery-in-ie/\\nTabs.prototype.getHref = function ($tab) {\\n  var href = $tab.getAttribute('href');\\n  var hash = href.slice(href.indexOf('#'), href.length);\\n  return hash\\n};\\n\\nreturn Tabs;\\n\\n})));\\n\\n/* WEBPACK VAR INJECTION */}.call(this, __webpack_require__(/*! ./../../../../webpack/buildin/global.js */ \\\"./node_modules/webpack/buildin/global.js\\\")))\\n\\n//# sourceURL=webpack://LBHFrontend/./node_modules/govuk-frontend/govuk/components/tabs/tabs.js?\");\n\n/***/ }),\n\n/***/ \"./node_modules/underscore/underscore.js\":\n/*!***********************************************!*\\\n  !*** ./node_modules/underscore/underscore.js ***!\n  \\***********************************************/\n/*! no static exports found */\n/***/ (function(module, exports, __webpack_require__) {\n\neval(\"/* WEBPACK VAR INJECTION */(function(global, module) {var __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;//     Underscore.js 1.9.1\\n//     http://underscorejs.org\\n//     (c) 2009-2018 Jeremy Ashkenas, DocumentCloud and Investigative Reporters & Editors\\n//     Underscore may be freely distributed under the MIT license.\\n\\n(function() {\\n\\n  // Baseline setup\\n  // --------------\\n\\n  // Establish the root object, `window` (`self`) in the browser, `global`\\n  // on the server, or `this` in some virtual machines. We use `self`\\n  // instead of `window` for `WebWorker` support.\\n  var root = typeof self == 'object' && self.self === self && self ||\\n            typeof global == 'object' && global.global === global && global ||\\n            this ||\\n            {};\\n\\n  // Save the previous value of the `_` variable.\\n  var previousUnderscore = root._;\\n\\n  // Save bytes in the minified (but not gzipped) version:\\n  var ArrayProto = Array.prototype, ObjProto = Object.prototype;\\n  var SymbolProto = typeof Symbol !== 'undefined' ? Symbol.prototype : null;\\n\\n  // Create quick reference variables for speed access to core prototypes.\\n  var push = ArrayProto.push,\\n      slice = ArrayProto.slice,\\n      toString = ObjProto.toString,\\n      hasOwnProperty = ObjProto.hasOwnProperty;\\n\\n  // All **ECMAScript 5** native function implementations that we hope to use\\n  // are declared here.\\n  var nativeIsArray = Array.isArray,\\n      nativeKeys = Object.keys,\\n      nativeCreate = Object.create;\\n\\n  // Naked function reference for surrogate-prototype-swapping.\\n  var Ctor = function(){};\\n\\n  // Create a safe reference to the Underscore object for use below.\\n  var _ = function(obj) {\\n    if (obj instanceof _) return obj;\\n    if (!(this instanceof _)) return new _(obj);\\n    this._wrapped = obj;\\n  };\\n\\n  // Export the Underscore object for **Node.js**, with\\n  // backwards-compatibility for their old module API. If we're in\\n  // the browser, add `_` as a global object.\\n  // (`nodeType` is checked to ensure that `module`\\n  // and `exports` are not HTML elements.)\\n  if ( true && !exports.nodeType) {\\n    if ( true && !module.nodeType && module.exports) {\\n      exports = module.exports = _;\\n    }\\n    exports._ = _;\\n  } else {\\n    root._ = _;\\n  }\\n\\n  // Current version.\\n  _.VERSION = '1.9.1';\\n\\n  // Internal function that returns an efficient (for current engines) version\\n  // of the passed-in callback, to be repeatedly applied in other Underscore\\n  // functions.\\n  var optimizeCb = function(func, context, argCount) {\\n    if (context === void 0) return func;\\n    switch (argCount == null ? 3 : argCount) {\\n      case 1: return function(value) {\\n        return func.call(context, value);\\n      };\\n      // The 2-argument case is omitted because we’re not using it.\\n      case 3: return function(value, index, collection) {\\n        return func.call(context, value, index, collection);\\n      };\\n      case 4: return function(accumulator, value, index, collection) {\\n        return func.call(context, accumulator, value, index, collection);\\n      };\\n    }\\n    return function() {\\n      return func.apply(context, arguments);\\n    };\\n  };\\n\\n  var builtinIteratee;\\n\\n  // An internal function to generate callbacks that can be applied to each\\n  // element in a collection, returning the desired result — either `identity`,\\n  // an arbitrary callback, a property matcher, or a property accessor.\\n  var cb = function(value, context, argCount) {\\n    if (_.iteratee !== builtinIteratee) return _.iteratee(value, context);\\n    if (value == null) return _.identity;\\n    if (_.isFunction(value)) return optimizeCb(value, context, argCount);\\n    if (_.isObject(value) && !_.isArray(value)) return _.matcher(value);\\n    return _.property(value);\\n  };\\n\\n  // External wrapper for our callback generator. Users may customize\\n  // `_.iteratee` if they want additional predicate/iteratee shorthand styles.\\n  // This abstraction hides the internal-only argCount argument.\\n  _.iteratee = builtinIteratee = function(value, context) {\\n    return cb(value, context, Infinity);\\n  };\\n\\n  // Some functions take a variable number of arguments, or a few expected\\n  // arguments at the beginning and then a variable number of values to operate\\n  // on. This helper accumulates all remaining arguments past the function’s\\n  // argument length (or an explicit `startIndex`), into an array that becomes\\n  // the last argument. Similar to ES6’s \\\"rest parameter\\\".\\n  var restArguments = function(func, startIndex) {\\n    startIndex = startIndex == null ? func.length - 1 : +startIndex;\\n    return function() {\\n      var length = Math.max(arguments.length - startIndex, 0),\\n          rest = Array(length),\\n          index = 0;\\n      for (; index < length; index++) {\\n        rest[index] = arguments[index + startIndex];\\n      }\\n      switch (startIndex) {\\n        case 0: return func.call(this, rest);\\n        case 1: return func.call(this, arguments[0], rest);\\n        case 2: return func.call(this, arguments[0], arguments[1], rest);\\n      }\\n      var args = Array(startIndex + 1);\\n      for (index = 0; index < startIndex; index++) {\\n        args[index] = arguments[index];\\n      }\\n      args[startIndex] = rest;\\n      return func.apply(this, args);\\n    };\\n  };\\n\\n  // An internal function for creating a new object that inherits from another.\\n  var baseCreate = function(prototype) {\\n    if (!_.isObject(prototype)) return {};\\n    if (nativeCreate) return nativeCreate(prototype);\\n    Ctor.prototype = prototype;\\n    var result = new Ctor;\\n    Ctor.prototype = null;\\n    return result;\\n  };\\n\\n  var shallowProperty = function(key) {\\n    return function(obj) {\\n      return obj == null ? void 0 : obj[key];\\n    };\\n  };\\n\\n  var has = function(obj, path) {\\n    return obj != null && hasOwnProperty.call(obj, path);\\n  }\\n\\n  var deepGet = function(obj, path) {\\n    var length = path.length;\\n    for (var i = 0; i < length; i++) {\\n      if (obj == null) return void 0;\\n      obj = obj[path[i]];\\n    }\\n    return length ? obj : void 0;\\n  };\\n\\n  // Helper for collection methods to determine whether a collection\\n  // should be iterated as an array or as an object.\\n  // Related: http://people.mozilla.org/~jorendorff/es6-draft.html#sec-tolength\\n  // Avoids a very nasty iOS 8 JIT bug on ARM-64. #2094\\n  var MAX_ARRAY_INDEX = Math.pow(2, 53) - 1;\\n  var getLength = shallowProperty('length');\\n  var isArrayLike = function(collection) {\\n    var length = getLength(collection);\\n    return typeof length == 'number' && length >= 0 && length <= MAX_ARRAY_INDEX;\\n  };\\n\\n  // Collection Functions\\n  // --------------------\\n\\n  // The cornerstone, an `each` implementation, aka `forEach`.\\n  // Handles raw objects in addition to array-likes. Treats all\\n  // sparse array-likes as if they were dense.\\n  _.each = _.forEach = function(obj, iteratee, context) {\\n    iteratee = optimizeCb(iteratee, context);\\n    var i, length;\\n    if (isArrayLike(obj)) {\\n      for (i = 0, length = obj.length; i < length; i++) {\\n        iteratee(obj[i], i, obj);\\n      }\\n    } else {\\n      var keys = _.keys(obj);\\n      for (i = 0, length = keys.length; i < length; i++) {\\n        iteratee(obj[keys[i]], keys[i], obj);\\n      }\\n    }\\n    return obj;\\n  };\\n\\n  // Return the results of applying the iteratee to each element.\\n  _.map = _.collect = function(obj, iteratee, context) {\\n    iteratee = cb(iteratee, context);\\n    var keys = !isArrayLike(obj) && _.keys(obj),\\n        length = (keys || obj).length,\\n        results = Array(length);\\n    for (var index = 0; index < length; index++) {\\n      var currentKey = keys ? keys[index] : index;\\n      results[index] = iteratee(obj[currentKey], currentKey, obj);\\n    }\\n    return results;\\n  };\\n\\n  // Create a reducing function iterating left or right.\\n  var createReduce = function(dir) {\\n    // Wrap code that reassigns argument variables in a separate function than\\n    // the one that accesses `arguments.length` to avoid a perf hit. (#1991)\\n    var reducer = function(obj, iteratee, memo, initial) {\\n      var keys = !isArrayLike(obj) && _.keys(obj),\\n          length = (keys || obj).length,\\n          index = dir > 0 ? 0 : length - 1;\\n      if (!initial) {\\n        memo = obj[keys ? keys[index] : index];\\n        index += dir;\\n      }\\n      for (; index >= 0 && index < length; index += dir) {\\n        var currentKey = keys ? keys[index] : index;\\n        memo = iteratee(memo, obj[currentKey], currentKey, obj);\\n      }\\n      return memo;\\n    };\\n\\n    return function(obj, iteratee, memo, context) {\\n      var initial = arguments.length >= 3;\\n      return reducer(obj, optimizeCb(iteratee, context, 4), memo, initial);\\n    };\\n  };\\n\\n  // **Reduce** builds up a single result from a list of values, aka `inject`,\\n  // or `foldl`.\\n  _.reduce = _.foldl = _.inject = createReduce(1);\\n\\n  // The right-associative version of reduce, also known as `foldr`.\\n  _.reduceRight = _.foldr = createReduce(-1);\\n\\n  // Return the first value which passes a truth test. Aliased as `detect`.\\n  _.find = _.detect = function(obj, predicate, context) {\\n    var keyFinder = isArrayLike(obj) ? _.findIndex : _.findKey;\\n    var key = keyFinder(obj, predicate, context);\\n    if (key !== void 0 && key !== -1) return obj[key];\\n  };\\n\\n  // Return all the elements that pass a truth test.\\n  // Aliased as `select`.\\n  _.filter = _.select = function(obj, predicate, context) {\\n    var results = [];\\n    predicate = cb(predicate, context);\\n    _.each(obj, function(value, index, list) {\\n      if (predicate(value, index, list)) results.push(value);\\n    });\\n    return results;\\n  };\\n\\n  // Return all the elements for which a truth test fails.\\n  _.reject = function(obj, predicate, context) {\\n    return _.filter(obj, _.negate(cb(predicate)), context);\\n  };\\n\\n  // Determine whether all of the elements match a truth test.\\n  // Aliased as `all`.\\n  _.every = _.all = function(obj, predicate, context) {\\n    predicate = cb(predicate, context);\\n    var keys = !isArrayLike(obj) && _.keys(obj),\\n        length = (keys || obj).length;\\n    for (var index = 0; index < length; index++) {\\n      var currentKey = keys ? keys[index] : index;\\n      if (!predicate(obj[currentKey], currentKey, obj)) return false;\\n    }\\n    return true;\\n  };\\n\\n  // Determine if at least one element in the object matches a truth test.\\n  // Aliased as `any`.\\n  _.some = _.any = function(obj, predicate, context) {\\n    predicate = cb(predicate, context);\\n    var keys = !isArrayLike(obj) && _.keys(obj),\\n        length = (keys || obj).length;\\n    for (var index = 0; index < length; index++) {\\n      var currentKey = keys ? keys[index] : index;\\n      if (predicate(obj[currentKey], currentKey, obj)) return true;\\n    }\\n    return false;\\n  };\\n\\n  // Determine if the array or object contains a given item (using `===`).\\n  // Aliased as `includes` and `include`.\\n  _.contains = _.includes = _.include = function(obj, item, fromIndex, guard) {\\n    if (!isArrayLike(obj)) obj = _.values(obj);\\n    if (typeof fromIndex != 'number' || guard) fromIndex = 0;\\n    return _.indexOf(obj, item, fromIndex) >= 0;\\n  };\\n\\n  // Invoke a method (with arguments) on every item in a collection.\\n  _.invoke = restArguments(function(obj, path, args) {\\n    var contextPath, func;\\n    if (_.isFunction(path)) {\\n      func = path;\\n    } else if (_.isArray(path)) {\\n      contextPath = path.slice(0, -1);\\n      path = path[path.length - 1];\\n    }\\n    return _.map(obj, function(context) {\\n      var method = func;\\n      if (!method) {\\n        if (contextPath && contextPath.length) {\\n          context = deepGet(context, contextPath);\\n        }\\n        if (context == null) return void 0;\\n        method = context[path];\\n      }\\n      return method == null ? method : method.apply(context, args);\\n    });\\n  });\\n\\n  // Convenience version of a common use case of `map`: fetching a property.\\n  _.pluck = function(obj, key) {\\n    return _.map(obj, _.property(key));\\n  };\\n\\n  // Convenience version of a common use case of `filter`: selecting only objects\\n  // containing specific `key:value` pairs.\\n  _.where = function(obj, attrs) {\\n    return _.filter(obj, _.matcher(attrs));\\n  };\\n\\n  // Convenience version of a common use case of `find`: getting the first object\\n  // containing specific `key:value` pairs.\\n  _.findWhere = function(obj, attrs) {\\n    return _.find(obj, _.matcher(attrs));\\n  };\\n\\n  // Return the maximum element (or element-based computation).\\n  _.max = function(obj, iteratee, context) {\\n    var result = -Infinity, lastComputed = -Infinity,\\n        value, computed;\\n    if (iteratee == null || typeof iteratee == 'number' && typeof obj[0] != 'object' && obj != null) {\\n      obj = isArrayLike(obj) ? obj : _.values(obj);\\n      for (var i = 0, length = obj.length; i < length; i++) {\\n        value = obj[i];\\n        if (value != null && value > result) {\\n          result = value;\\n        }\\n      }\\n    } else {\\n      iteratee = cb(iteratee, context);\\n      _.each(obj, function(v, index, list) {\\n        computed = iteratee(v, index, list);\\n        if (computed > lastComputed || computed === -Infinity && result === -Infinity) {\\n          result = v;\\n          lastComputed = computed;\\n        }\\n      });\\n    }\\n    return result;\\n  };\\n\\n  // Return the minimum element (or element-based computation).\\n  _.min = function(obj, iteratee, context) {\\n    var result = Infinity, lastComputed = Infinity,\\n        value, computed;\\n    if (iteratee == null || typeof iteratee == 'number' && typeof obj[0] != 'object' && obj != null) {\\n      obj = isArrayLike(obj) ? obj : _.values(obj);\\n      for (var i = 0, length = obj.length; i < length; i++) {\\n        value = obj[i];\\n        if (value != null && value < result) {\\n          result = value;\\n        }\\n      }\\n    } else {\\n      iteratee = cb(iteratee, context);\\n      _.each(obj, function(v, index, list) {\\n        computed = iteratee(v, index, list);\\n        if (computed < lastComputed || computed === Infinity && result === Infinity) {\\n          result = v;\\n          lastComputed = computed;\\n        }\\n      });\\n    }\\n    return result;\\n  };\\n\\n  // Shuffle a collection.\\n  _.shuffle = function(obj) {\\n    return _.sample(obj, Infinity);\\n  };\\n\\n  // Sample **n** random values from a collection using the modern version of the\\n  // [Fisher-Yates shuffle](http://en.wikipedia.org/wiki/Fisher–Yates_shuffle).\\n  // If **n** is not specified, returns a single random element.\\n  // The internal `guard` argument allows it to work with `map`.\\n  _.sample = function(obj, n, guard) {\\n    if (n == null || guard) {\\n      if (!isArrayLike(obj)) obj = _.values(obj);\\n      return obj[_.random(obj.length - 1)];\\n    }\\n    var sample = isArrayLike(obj) ? _.clone(obj) : _.values(obj);\\n    var length = getLength(sample);\\n    n = Math.max(Math.min(n, length), 0);\\n    var last = length - 1;\\n    for (var index = 0; index < n; index++) {\\n      var rand = _.random(index, last);\\n      var temp = sample[index];\\n      sample[index] = sample[rand];\\n      sample[rand] = temp;\\n    }\\n    return sample.slice(0, n);\\n  };\\n\\n  // Sort the object's values by a criterion produced by an iteratee.\\n  _.sortBy = function(obj, iteratee, context) {\\n    var index = 0;\\n    iteratee = cb(iteratee, context);\\n    return _.pluck(_.map(obj, function(value, key, list) {\\n      return {\\n        value: value,\\n        index: index++,\\n        criteria: iteratee(value, key, list)\\n      };\\n    }).sort(function(left, right) {\\n      var a = left.criteria;\\n      var b = right.criteria;\\n      if (a !== b) {\\n        if (a > b || a === void 0) return 1;\\n        if (a < b || b === void 0) return -1;\\n      }\\n      return left.index - right.index;\\n    }), 'value');\\n  };\\n\\n  // An internal function used for aggregate \\\"group by\\\" operations.\\n  var group = function(behavior, partition) {\\n    return function(obj, iteratee, context) {\\n      var result = partition ? [[], []] : {};\\n      iteratee = cb(iteratee, context);\\n      _.each(obj, function(value, index) {\\n        var key = iteratee(value, index, obj);\\n        behavior(result, value, key);\\n      });\\n      return result;\\n    };\\n  };\\n\\n  // Groups the object's values by a criterion. Pass either a string attribute\\n  // to group by, or a function that returns the criterion.\\n  _.groupBy = group(function(result, value, key) {\\n    if (has(result, key)) result[key].push(value); else result[key] = [value];\\n  });\\n\\n  // Indexes the object's values by a criterion, similar to `groupBy`, but for\\n  // when you know that your index values will be unique.\\n  _.indexBy = group(function(result, value, key) {\\n    result[key] = value;\\n  });\\n\\n  // Counts instances of an object that group by a certain criterion. Pass\\n  // either a string attribute to count by, or a function that returns the\\n  // criterion.\\n  _.countBy = group(function(result, value, key) {\\n    if (has(result, key)) result[key]++; else result[key] = 1;\\n  });\\n\\n  var reStrSymbol = /[^\\\\ud800-\\\\udfff]|[\\\\ud800-\\\\udbff][\\\\udc00-\\\\udfff]|[\\\\ud800-\\\\udfff]/g;\\n  // Safely create a real, live array from anything iterable.\\n  _.toArray = function(obj) {\\n    if (!obj) return [];\\n    if (_.isArray(obj)) return slice.call(obj);\\n    if (_.isString(obj)) {\\n      // Keep surrogate pair characters together\\n      return obj.match(reStrSymbol);\\n    }\\n    if (isArrayLike(obj)) return _.map(obj, _.identity);\\n    return _.values(obj);\\n  };\\n\\n  // Return the number of elements in an object.\\n  _.size = function(obj) {\\n    if (obj == null) return 0;\\n    return isArrayLike(obj) ? obj.length : _.keys(obj).length;\\n  };\\n\\n  // Split a collection into two arrays: one whose elements all satisfy the given\\n  // predicate, and one whose elements all do not satisfy the predicate.\\n  _.partition = group(function(result, value, pass) {\\n    result[pass ? 0 : 1].push(value);\\n  }, true);\\n\\n  // Array Functions\\n  // ---------------\\n\\n  // Get the first element of an array. Passing **n** will return the first N\\n  // values in the array. Aliased as `head` and `take`. The **guard** check\\n  // allows it to work with `_.map`.\\n  _.first = _.head = _.take = function(array, n, guard) {\\n    if (array == null || array.length < 1) return n == null ? void 0 : [];\\n    if (n == null || guard) return array[0];\\n    return _.initial(array, array.length - n);\\n  };\\n\\n  // Returns everything but the last entry of the array. Especially useful on\\n  // the arguments object. Passing **n** will return all the values in\\n  // the array, excluding the last N.\\n  _.initial = function(array, n, guard) {\\n    return slice.call(array, 0, Math.max(0, array.length - (n == null || guard ? 1 : n)));\\n  };\\n\\n  // Get the last element of an array. Passing **n** will return the last N\\n  // values in the array.\\n  _.last = function(array, n, guard) {\\n    if (array == null || array.length < 1) return n == null ? void 0 : [];\\n    if (n == null || guard) return array[array.length - 1];\\n    return _.rest(array, Math.max(0, array.length - n));\\n  };\\n\\n  // Returns everything but the first entry of the array. Aliased as `tail` and `drop`.\\n  // Especially useful on the arguments object. Passing an **n** will return\\n  // the rest N values in the array.\\n  _.rest = _.tail = _.drop = function(array, n, guard) {\\n    return slice.call(array, n == null || guard ? 1 : n);\\n  };\\n\\n  // Trim out all falsy values from an array.\\n  _.compact = function(array) {\\n    return _.filter(array, Boolean);\\n  };\\n\\n  // Internal implementation of a recursive `flatten` function.\\n  var flatten = function(input, shallow, strict, output) {\\n    output = output || [];\\n    var idx = output.length;\\n    for (var i = 0, length = getLength(input); i < length; i++) {\\n      var value = input[i];\\n      if (isArrayLike(value) && (_.isArray(value) || _.isArguments(value))) {\\n        // Flatten current level of array or arguments object.\\n        if (shallow) {\\n          var j = 0, len = value.length;\\n          while (j < len) output[idx++] = value[j++];\\n        } else {\\n          flatten(value, shallow, strict, output);\\n          idx = output.length;\\n        }\\n      } else if (!strict) {\\n        output[idx++] = value;\\n      }\\n    }\\n    return output;\\n  };\\n\\n  // Flatten out an array, either recursively (by default), or just one level.\\n  _.flatten = function(array, shallow) {\\n    return flatten(array, shallow, false);\\n  };\\n\\n  // Return a version of the array that does not contain the specified value(s).\\n  _.without = restArguments(function(array, otherArrays) {\\n    return _.difference(array, otherArrays);\\n  });\\n\\n  // Produce a duplicate-free version of the array. If the array has already\\n  // been sorted, you have the option of using a faster algorithm.\\n  // The faster algorithm will not work with an iteratee if the iteratee\\n  // is not a one-to-one function, so providing an iteratee will disable\\n  // the faster algorithm.\\n  // Aliased as `unique`.\\n  _.uniq = _.unique = function(array, isSorted, iteratee, context) {\\n    if (!_.isBoolean(isSorted)) {\\n      context = iteratee;\\n      iteratee = isSorted;\\n      isSorted = false;\\n    }\\n    if (iteratee != null) iteratee = cb(iteratee, context);\\n    var result = [];\\n    var seen = [];\\n    for (var i = 0, length = getLength(array); i < length; i++) {\\n      var value = array[i],\\n          computed = iteratee ? iteratee(value, i, array) : value;\\n      if (isSorted && !iteratee) {\\n        if (!i || seen !== computed) result.push(value);\\n        seen = computed;\\n      } else if (iteratee) {\\n        if (!_.contains(seen, computed)) {\\n          seen.push(computed);\\n          result.push(value);\\n        }\\n      } else if (!_.contains(result, value)) {\\n        result.push(value);\\n      }\\n    }\\n    return result;\\n  };\\n\\n  // Produce an array that contains the union: each distinct element from all of\\n  // the passed-in arrays.\\n  _.union = restArguments(function(arrays) {\\n    return _.uniq(flatten(arrays, true, true));\\n  });\\n\\n  // Produce an array that contains every item shared between all the\\n  // passed-in arrays.\\n  _.intersection = function(array) {\\n    var result = [];\\n    var argsLength = arguments.length;\\n    for (var i = 0, length = getLength(array); i < length; i++) {\\n      var item = array[i];\\n      if (_.contains(result, item)) continue;\\n      var j;\\n      for (j = 1; j < argsLength; j++) {\\n        if (!_.contains(arguments[j], item)) break;\\n      }\\n      if (j === argsLength) result.push(item);\\n    }\\n    return result;\\n  };\\n\\n  // Take the difference between one array and a number of other arrays.\\n  // Only the elements present in just the first array will remain.\\n  _.difference = restArguments(function(array, rest) {\\n    rest = flatten(rest, true, true);\\n    return _.filter(array, function(value){\\n      return !_.contains(rest, value);\\n    });\\n  });\\n\\n  // Complement of _.zip. Unzip accepts an array of arrays and groups\\n  // each array's elements on shared indices.\\n  _.unzip = function(array) {\\n    var length = array && _.max(array, getLength).length || 0;\\n    var result = Array(length);\\n\\n    for (var index = 0; index < length; index++) {\\n      result[index] = _.pluck(array, index);\\n    }\\n    return result;\\n  };\\n\\n  // Zip together multiple lists into a single array -- elements that share\\n  // an index go together.\\n  _.zip = restArguments(_.unzip);\\n\\n  // Converts lists into objects. Pass either a single array of `[key, value]`\\n  // pairs, or two parallel arrays of the same length -- one of keys, and one of\\n  // the corresponding values. Passing by pairs is the reverse of _.pairs.\\n  _.object = function(list, values) {\\n    var result = {};\\n    for (var i = 0, length = getLength(list); i < length; i++) {\\n      if (values) {\\n        result[list[i]] = values[i];\\n      } else {\\n        result[list[i][0]] = list[i][1];\\n      }\\n    }\\n    return result;\\n  };\\n\\n  // Generator function to create the findIndex and findLastIndex functions.\\n  var createPredicateIndexFinder = function(dir) {\\n    return function(array, predicate, context) {\\n      predicate = cb(predicate, context);\\n      var length = getLength(array);\\n      var index = dir > 0 ? 0 : length - 1;\\n      for (; index >= 0 && index < length; index += dir) {\\n        if (predicate(array[index], index, array)) return index;\\n      }\\n      return -1;\\n    };\\n  };\\n\\n  // Returns the first index on an array-like that passes a predicate test.\\n  _.findIndex = createPredicateIndexFinder(1);\\n  _.findLastIndex = createPredicateIndexFinder(-1);\\n\\n  // Use a comparator function to figure out the smallest index at which\\n  // an object should be inserted so as to maintain order. Uses binary search.\\n  _.sortedIndex = function(array, obj, iteratee, context) {\\n    iteratee = cb(iteratee, context, 1);\\n    var value = iteratee(obj);\\n    var low = 0, high = getLength(array);\\n    while (low < high) {\\n      var mid = Math.floor((low + high) / 2);\\n      if (iteratee(array[mid]) < value) low = mid + 1; else high = mid;\\n    }\\n    return low;\\n  };\\n\\n  // Generator function to create the indexOf and lastIndexOf functions.\\n  var createIndexFinder = function(dir, predicateFind, sortedIndex) {\\n    return function(array, item, idx) {\\n      var i = 0, length = getLength(array);\\n      if (typeof idx == 'number') {\\n        if (dir > 0) {\\n          i = idx >= 0 ? idx : Math.max(idx + length, i);\\n        } else {\\n          length = idx >= 0 ? Math.min(idx + 1, length) : idx + length + 1;\\n        }\\n      } else if (sortedIndex && idx && length) {\\n        idx = sortedIndex(array, item);\\n        return array[idx] === item ? idx : -1;\\n      }\\n      if (item !== item) {\\n        idx = predicateFind(slice.call(array, i, length), _.isNaN);\\n        return idx >= 0 ? idx + i : -1;\\n      }\\n      for (idx = dir > 0 ? i : length - 1; idx >= 0 && idx < length; idx += dir) {\\n        if (array[idx] === item) return idx;\\n      }\\n      return -1;\\n    };\\n  };\\n\\n  // Return the position of the first occurrence of an item in an array,\\n  // or -1 if the item is not included in the array.\\n  // If the array is large and already in sort order, pass `true`\\n  // for **isSorted** to use binary search.\\n  _.indexOf = createIndexFinder(1, _.findIndex, _.sortedIndex);\\n  _.lastIndexOf = createIndexFinder(-1, _.findLastIndex);\\n\\n  // Generate an integer Array containing an arithmetic progression. A port of\\n  // the native Python `range()` function. See\\n  // [the Python documentation](http://docs.python.org/library/functions.html#range).\\n  _.range = function(start, stop, step) {\\n    if (stop == null) {\\n      stop = start || 0;\\n      start = 0;\\n    }\\n    if (!step) {\\n      step = stop < start ? -1 : 1;\\n    }\\n\\n    var length = Math.max(Math.ceil((stop - start) / step), 0);\\n    var range = Array(length);\\n\\n    for (var idx = 0; idx < length; idx++, start += step) {\\n      range[idx] = start;\\n    }\\n\\n    return range;\\n  };\\n\\n  // Chunk a single array into multiple arrays, each containing `count` or fewer\\n  // items.\\n  _.chunk = function(array, count) {\\n    if (count == null || count < 1) return [];\\n    var result = [];\\n    var i = 0, length = array.length;\\n    while (i < length) {\\n      result.push(slice.call(array, i, i += count));\\n    }\\n    return result;\\n  };\\n\\n  // Function (ahem) Functions\\n  // ------------------\\n\\n  // Determines whether to execute a function as a constructor\\n  // or a normal function with the provided arguments.\\n  var executeBound = function(sourceFunc, boundFunc, context, callingContext, args) {\\n    if (!(callingContext instanceof boundFunc)) return sourceFunc.apply(context, args);\\n    var self = baseCreate(sourceFunc.prototype);\\n    var result = sourceFunc.apply(self, args);\\n    if (_.isObject(result)) return result;\\n    return self;\\n  };\\n\\n  // Create a function bound to a given object (assigning `this`, and arguments,\\n  // optionally). Delegates to **ECMAScript 5**'s native `Function.bind` if\\n  // available.\\n  _.bind = restArguments(function(func, context, args) {\\n    if (!_.isFunction(func)) throw new TypeError('Bind must be called on a function');\\n    var bound = restArguments(function(callArgs) {\\n      return executeBound(func, bound, context, this, args.concat(callArgs));\\n    });\\n    return bound;\\n  });\\n\\n  // Partially apply a function by creating a version that has had some of its\\n  // arguments pre-filled, without changing its dynamic `this` context. _ acts\\n  // as a placeholder by default, allowing any combination of arguments to be\\n  // pre-filled. Set `_.partial.placeholder` for a custom placeholder argument.\\n  _.partial = restArguments(function(func, boundArgs) {\\n    var placeholder = _.partial.placeholder;\\n    var bound = function() {\\n      var position = 0, length = boundArgs.length;\\n      var args = Array(length);\\n      for (var i = 0; i < length; i++) {\\n        args[i] = boundArgs[i] === placeholder ? arguments[position++] : boundArgs[i];\\n      }\\n      while (position < arguments.length) args.push(arguments[position++]);\\n      return executeBound(func, bound, this, this, args);\\n    };\\n    return bound;\\n  });\\n\\n  _.partial.placeholder = _;\\n\\n  // Bind a number of an object's methods to that object. Remaining arguments\\n  // are the method names to be bound. Useful for ensuring that all callbacks\\n  // defined on an object belong to it.\\n  _.bindAll = restArguments(function(obj, keys) {\\n    keys = flatten(keys, false, false);\\n    var index = keys.length;\\n    if (index < 1) throw new Error('bindAll must be passed function names');\\n    while (index--) {\\n      var key = keys[index];\\n      obj[key] = _.bind(obj[key], obj);\\n    }\\n  });\\n\\n  // Memoize an expensive function by storing its results.\\n  _.memoize = function(func, hasher) {\\n    var memoize = function(key) {\\n      var cache = memoize.cache;\\n      var address = '' + (hasher ? hasher.apply(this, arguments) : key);\\n      if (!has(cache, address)) cache[address] = func.apply(this, arguments);\\n      return cache[address];\\n    };\\n    memoize.cache = {};\\n    return memoize;\\n  };\\n\\n  // Delays a function for the given number of milliseconds, and then calls\\n  // it with the arguments supplied.\\n  _.delay = restArguments(function(func, wait, args) {\\n    return setTimeout(function() {\\n      return func.apply(null, args);\\n    }, wait);\\n  });\\n\\n  // Defers a function, scheduling it to run after the current call stack has\\n  // cleared.\\n  _.defer = _.partial(_.delay, _, 1);\\n\\n  // Returns a function, that, when invoked, will only be triggered at most once\\n  // during a given window of time. Normally, the throttled function will run\\n  // as much as it can, without ever going more than once per `wait` duration;\\n  // but if you'd like to disable the execution on the leading edge, pass\\n  // `{leading: false}`. To disable execution on the trailing edge, ditto.\\n  _.throttle = function(func, wait, options) {\\n    var timeout, context, args, result;\\n    var previous = 0;\\n    if (!options) options = {};\\n\\n    var later = function() {\\n      previous = options.leading === false ? 0 : _.now();\\n      timeout = null;\\n      result = func.apply(context, args);\\n      if (!timeout) context = args = null;\\n    };\\n\\n    var throttled = function() {\\n      var now = _.now();\\n      if (!previous && options.leading === false) previous = now;\\n      var remaining = wait - (now - previous);\\n      context = this;\\n      args = arguments;\\n      if (remaining <= 0 || remaining > wait) {\\n        if (timeout) {\\n          clearTimeout(timeout);\\n          timeout = null;\\n        }\\n        previous = now;\\n        result = func.apply(context, args);\\n        if (!timeout) context = args = null;\\n      } else if (!timeout && options.trailing !== false) {\\n        timeout = setTimeout(later, remaining);\\n      }\\n      return result;\\n    };\\n\\n    throttled.cancel = function() {\\n      clearTimeout(timeout);\\n      previous = 0;\\n      timeout = context = args = null;\\n    };\\n\\n    return throttled;\\n  };\\n\\n  // Returns a function, that, as long as it continues to be invoked, will not\\n  // be triggered. The function will be called after it stops being called for\\n  // N milliseconds. If `immediate` is passed, trigger the function on the\\n  // leading edge, instead of the trailing.\\n  _.debounce = function(func, wait, immediate) {\\n    var timeout, result;\\n\\n    var later = function(context, args) {\\n      timeout = null;\\n      if (args) result = func.apply(context, args);\\n    };\\n\\n    var debounced = restArguments(function(args) {\\n      if (timeout) clearTimeout(timeout);\\n      if (immediate) {\\n        var callNow = !timeout;\\n        timeout = setTimeout(later, wait);\\n        if (callNow) result = func.apply(this, args);\\n      } else {\\n        timeout = _.delay(later, wait, this, args);\\n      }\\n\\n      return result;\\n    });\\n\\n    debounced.cancel = function() {\\n      clearTimeout(timeout);\\n      timeout = null;\\n    };\\n\\n    return debounced;\\n  };\\n\\n  // Returns the first function passed as an argument to the second,\\n  // allowing you to adjust arguments, run code before and after, and\\n  // conditionally execute the original function.\\n  _.wrap = function(func, wrapper) {\\n    return _.partial(wrapper, func);\\n  };\\n\\n  // Returns a negated version of the passed-in predicate.\\n  _.negate = function(predicate) {\\n    return function() {\\n      return !predicate.apply(this, arguments);\\n    };\\n  };\\n\\n  // Returns a function that is the composition of a list of functions, each\\n  // consuming the return value of the function that follows.\\n  _.compose = function() {\\n    var args = arguments;\\n    var start = args.length - 1;\\n    return function() {\\n      var i = start;\\n      var result = args[start].apply(this, arguments);\\n      while (i--) result = args[i].call(this, result);\\n      return result;\\n    };\\n  };\\n\\n  // Returns a function that will only be executed on and after the Nth call.\\n  _.after = function(times, func) {\\n    return function() {\\n      if (--times < 1) {\\n        return func.apply(this, arguments);\\n      }\\n    };\\n  };\\n\\n  // Returns a function that will only be executed up to (but not including) the Nth call.\\n  _.before = function(times, func) {\\n    var memo;\\n    return function() {\\n      if (--times > 0) {\\n        memo = func.apply(this, arguments);\\n      }\\n      if (times <= 1) func = null;\\n      return memo;\\n    };\\n  };\\n\\n  // Returns a function that will be executed at most one time, no matter how\\n  // often you call it. Useful for lazy initialization.\\n  _.once = _.partial(_.before, 2);\\n\\n  _.restArguments = restArguments;\\n\\n  // Object Functions\\n  // ----------------\\n\\n  // Keys in IE < 9 that won't be iterated by `for key in ...` and thus missed.\\n  var hasEnumBug = !{toString: null}.propertyIsEnumerable('toString');\\n  var nonEnumerableProps = ['valueOf', 'isPrototypeOf', 'toString',\\n    'propertyIsEnumerable', 'hasOwnProperty', 'toLocaleString'];\\n\\n  var collectNonEnumProps = function(obj, keys) {\\n    var nonEnumIdx = nonEnumerableProps.length;\\n    var constructor = obj.constructor;\\n    var proto = _.isFunction(constructor) && constructor.prototype || ObjProto;\\n\\n    // Constructor is a special case.\\n    var prop = 'constructor';\\n    if (has(obj, prop) && !_.contains(keys, prop)) keys.push(prop);\\n\\n    while (nonEnumIdx--) {\\n      prop = nonEnumerableProps[nonEnumIdx];\\n      if (prop in obj && obj[prop] !== proto[prop] && !_.contains(keys, prop)) {\\n        keys.push(prop);\\n      }\\n    }\\n  };\\n\\n  // Retrieve the names of an object's own properties.\\n  // Delegates to **ECMAScript 5**'s native `Object.keys`.\\n  _.keys = function(obj) {\\n    if (!_.isObject(obj)) return [];\\n    if (nativeKeys) return nativeKeys(obj);\\n    var keys = [];\\n    for (var key in obj) if (has(obj, key)) keys.push(key);\\n    // Ahem, IE < 9.\\n    if (hasEnumBug) collectNonEnumProps(obj, keys);\\n    return keys;\\n  };\\n\\n  // Retrieve all the property names of an object.\\n  _.allKeys = function(obj) {\\n    if (!_.isObject(obj)) return [];\\n    var keys = [];\\n    for (var key in obj) keys.push(key);\\n    // Ahem, IE < 9.\\n    if (hasEnumBug) collectNonEnumProps(obj, keys);\\n    return keys;\\n  };\\n\\n  // Retrieve the values of an object's properties.\\n  _.values = function(obj) {\\n    var keys = _.keys(obj);\\n    var length = keys.length;\\n    var values = Array(length);\\n    for (var i = 0; i < length; i++) {\\n      values[i] = obj[keys[i]];\\n    }\\n    return values;\\n  };\\n\\n  // Returns the results of applying the iteratee to each element of the object.\\n  // In contrast to _.map it returns an object.\\n  _.mapObject = function(obj, iteratee, context) {\\n    iteratee = cb(iteratee, context);\\n    var keys = _.keys(obj),\\n        length = keys.length,\\n        results = {};\\n    for (var index = 0; index < length; index++) {\\n      var currentKey = keys[index];\\n      results[currentKey] = iteratee(obj[currentKey], currentKey, obj);\\n    }\\n    return results;\\n  };\\n\\n  // Convert an object into a list of `[key, value]` pairs.\\n  // The opposite of _.object.\\n  _.pairs = function(obj) {\\n    var keys = _.keys(obj);\\n    var length = keys.length;\\n    var pairs = Array(length);\\n    for (var i = 0; i < length; i++) {\\n      pairs[i] = [keys[i], obj[keys[i]]];\\n    }\\n    return pairs;\\n  };\\n\\n  // Invert the keys and values of an object. The values must be serializable.\\n  _.invert = function(obj) {\\n    var result = {};\\n    var keys = _.keys(obj);\\n    for (var i = 0, length = keys.length; i < length; i++) {\\n      result[obj[keys[i]]] = keys[i];\\n    }\\n    return result;\\n  };\\n\\n  // Return a sorted list of the function names available on the object.\\n  // Aliased as `methods`.\\n  _.functions = _.methods = function(obj) {\\n    var names = [];\\n    for (var key in obj) {\\n      if (_.isFunction(obj[key])) names.push(key);\\n    }\\n    return names.sort();\\n  };\\n\\n  // An internal function for creating assigner functions.\\n  var createAssigner = function(keysFunc, defaults) {\\n    return function(obj) {\\n      var length = arguments.length;\\n      if (defaults) obj = Object(obj);\\n      if (length < 2 || obj == null) return obj;\\n      for (var index = 1; index < length; index++) {\\n        var source = arguments[index],\\n            keys = keysFunc(source),\\n            l = keys.length;\\n        for (var i = 0; i < l; i++) {\\n          var key = keys[i];\\n          if (!defaults || obj[key] === void 0) obj[key] = source[key];\\n        }\\n      }\\n      return obj;\\n    };\\n  };\\n\\n  // Extend a given object with all the properties in passed-in object(s).\\n  _.extend = createAssigner(_.allKeys);\\n\\n  // Assigns a given object with all the own properties in the passed-in object(s).\\n  // (https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Object/assign)\\n  _.extendOwn = _.assign = createAssigner(_.keys);\\n\\n  // Returns the first key on an object that passes a predicate test.\\n  _.findKey = function(obj, predicate, context) {\\n    predicate = cb(predicate, context);\\n    var keys = _.keys(obj), key;\\n    for (var i = 0, length = keys.length; i < length; i++) {\\n      key = keys[i];\\n      if (predicate(obj[key], key, obj)) return key;\\n    }\\n  };\\n\\n  // Internal pick helper function to determine if `obj` has key `key`.\\n  var keyInObj = function(value, key, obj) {\\n    return key in obj;\\n  };\\n\\n  // Return a copy of the object only containing the whitelisted properties.\\n  _.pick = restArguments(function(obj, keys) {\\n    var result = {}, iteratee = keys[0];\\n    if (obj == null) return result;\\n    if (_.isFunction(iteratee)) {\\n      if (keys.length > 1) iteratee = optimizeCb(iteratee, keys[1]);\\n      keys = _.allKeys(obj);\\n    } else {\\n      iteratee = keyInObj;\\n      keys = flatten(keys, false, false);\\n      obj = Object(obj);\\n    }\\n    for (var i = 0, length = keys.length; i < length; i++) {\\n      var key = keys[i];\\n      var value = obj[key];\\n      if (iteratee(value, key, obj)) result[key] = value;\\n    }\\n    return result;\\n  });\\n\\n  // Return a copy of the object without the blacklisted properties.\\n  _.omit = restArguments(function(obj, keys) {\\n    var iteratee = keys[0], context;\\n    if (_.isFunction(iteratee)) {\\n      iteratee = _.negate(iteratee);\\n      if (keys.length > 1) context = keys[1];\\n    } else {\\n      keys = _.map(flatten(keys, false, false), String);\\n      iteratee = function(value, key) {\\n        return !_.contains(keys, key);\\n      };\\n    }\\n    return _.pick(obj, iteratee, context);\\n  });\\n\\n  // Fill in a given object with default properties.\\n  _.defaults = createAssigner(_.allKeys, true);\\n\\n  // Creates an object that inherits from the given prototype object.\\n  // If additional properties are provided then they will be added to the\\n  // created object.\\n  _.create = function(prototype, props) {\\n    var result = baseCreate(prototype);\\n    if (props) _.extendOwn(result, props);\\n    return result;\\n  };\\n\\n  // Create a (shallow-cloned) duplicate of an object.\\n  _.clone = function(obj) {\\n    if (!_.isObject(obj)) return obj;\\n    return _.isArray(obj) ? obj.slice() : _.extend({}, obj);\\n  };\\n\\n  // Invokes interceptor with the obj, and then returns obj.\\n  // The primary purpose of this method is to \\\"tap into\\\" a method chain, in\\n  // order to perform operations on intermediate results within the chain.\\n  _.tap = function(obj, interceptor) {\\n    interceptor(obj);\\n    return obj;\\n  };\\n\\n  // Returns whether an object has a given set of `key:value` pairs.\\n  _.isMatch = function(object, attrs) {\\n    var keys = _.keys(attrs), length = keys.length;\\n    if (object == null) return !length;\\n    var obj = Object(object);\\n    for (var i = 0; i < length; i++) {\\n      var key = keys[i];\\n      if (attrs[key] !== obj[key] || !(key in obj)) return false;\\n    }\\n    return true;\\n  };\\n\\n\\n  // Internal recursive comparison function for `isEqual`.\\n  var eq, deepEq;\\n  eq = function(a, b, aStack, bStack) {\\n    // Identical objects are equal. `0 === -0`, but they aren't identical.\\n    // See the [Harmony `egal` proposal](http://wiki.ecmascript.org/doku.php?id=harmony:egal).\\n    if (a === b) return a !== 0 || 1 / a === 1 / b;\\n    // `null` or `undefined` only equal to itself (strict comparison).\\n    if (a == null || b == null) return false;\\n    // `NaN`s are equivalent, but non-reflexive.\\n    if (a !== a) return b !== b;\\n    // Exhaust primitive checks\\n    var type = typeof a;\\n    if (type !== 'function' && type !== 'object' && typeof b != 'object') return false;\\n    return deepEq(a, b, aStack, bStack);\\n  };\\n\\n  // Internal recursive comparison function for `isEqual`.\\n  deepEq = function(a, b, aStack, bStack) {\\n    // Unwrap any wrapped objects.\\n    if (a instanceof _) a = a._wrapped;\\n    if (b instanceof _) b = b._wrapped;\\n    // Compare `[[Class]]` names.\\n    var className = toString.call(a);\\n    if (className !== toString.call(b)) return false;\\n    switch (className) {\\n      // Strings, numbers, regular expressions, dates, and booleans are compared by value.\\n      case '[object RegExp]':\\n      // RegExps are coerced to strings for comparison (Note: '' + /a/i === '/a/i')\\n      case '[object String]':\\n        // Primitives and their corresponding object wrappers are equivalent; thus, `\\\"5\\\"` is\\n        // equivalent to `new String(\\\"5\\\")`.\\n        return '' + a === '' + b;\\n      case '[object Number]':\\n        // `NaN`s are equivalent, but non-reflexive.\\n        // Object(NaN) is equivalent to NaN.\\n        if (+a !== +a) return +b !== +b;\\n        // An `egal` comparison is performed for other numeric values.\\n        return +a === 0 ? 1 / +a === 1 / b : +a === +b;\\n      case '[object Date]':\\n      case '[object Boolean]':\\n        // Coerce dates and booleans to numeric primitive values. Dates are compared by their\\n        // millisecond representations. Note that invalid dates with millisecond representations\\n        // of `NaN` are not equivalent.\\n        return +a === +b;\\n      case '[object Symbol]':\\n        return SymbolProto.valueOf.call(a) === SymbolProto.valueOf.call(b);\\n    }\\n\\n    var areArrays = className === '[object Array]';\\n    if (!areArrays) {\\n      if (typeof a != 'object' || typeof b != 'object') return false;\\n\\n      // Objects with different constructors are not equivalent, but `Object`s or `Array`s\\n      // from different frames are.\\n      var aCtor = a.constructor, bCtor = b.constructor;\\n      if (aCtor !== bCtor && !(_.isFunction(aCtor) && aCtor instanceof aCtor &&\\n                               _.isFunction(bCtor) && bCtor instanceof bCtor)\\n                          && ('constructor' in a && 'constructor' in b)) {\\n        return false;\\n      }\\n    }\\n    // Assume equality for cyclic structures. The algorithm for detecting cyclic\\n    // structures is adapted from ES 5.1 section 15.12.3, abstract operation `JO`.\\n\\n    // Initializing stack of traversed objects.\\n    // It's done here since we only need them for objects and arrays comparison.\\n    aStack = aStack || [];\\n    bStack = bStack || [];\\n    var length = aStack.length;\\n    while (length--) {\\n      // Linear search. Performance is inversely proportional to the number of\\n      // unique nested structures.\\n      if (aStack[length] === a) return bStack[length] === b;\\n    }\\n\\n    // Add the first object to the stack of traversed objects.\\n    aStack.push(a);\\n    bStack.push(b);\\n\\n    // Recursively compare objects and arrays.\\n    if (areArrays) {\\n      // Compare array lengths to determine if a deep comparison is necessary.\\n      length = a.length;\\n      if (length !== b.length) return false;\\n      // Deep compare the contents, ignoring non-numeric properties.\\n      while (length--) {\\n        if (!eq(a[length], b[length], aStack, bStack)) return false;\\n      }\\n    } else {\\n      // Deep compare objects.\\n      var keys = _.keys(a), key;\\n      length = keys.length;\\n      // Ensure that both objects contain the same number of properties before comparing deep equality.\\n      if (_.keys(b).length !== length) return false;\\n      while (length--) {\\n        // Deep compare each member\\n        key = keys[length];\\n        if (!(has(b, key) && eq(a[key], b[key], aStack, bStack))) return false;\\n      }\\n    }\\n    // Remove the first object from the stack of traversed objects.\\n    aStack.pop();\\n    bStack.pop();\\n    return true;\\n  };\\n\\n  // Perform a deep comparison to check if two objects are equal.\\n  _.isEqual = function(a, b) {\\n    return eq(a, b);\\n  };\\n\\n  // Is a given array, string, or object empty?\\n  // An \\\"empty\\\" object has no enumerable own-properties.\\n  _.isEmpty = function(obj) {\\n    if (obj == null) return true;\\n    if (isArrayLike(obj) && (_.isArray(obj) || _.isString(obj) || _.isArguments(obj))) return obj.length === 0;\\n    return _.keys(obj).length === 0;\\n  };\\n\\n  // Is a given value a DOM element?\\n  _.isElement = function(obj) {\\n    return !!(obj && obj.nodeType === 1);\\n  };\\n\\n  // Is a given value an array?\\n  // Delegates to ECMA5's native Array.isArray\\n  _.isArray = nativeIsArray || function(obj) {\\n    return toString.call(obj) === '[object Array]';\\n  };\\n\\n  // Is a given variable an object?\\n  _.isObject = function(obj) {\\n    var type = typeof obj;\\n    return type === 'function' || type === 'object' && !!obj;\\n  };\\n\\n  // Add some isType methods: isArguments, isFunction, isString, isNumber, isDate, isRegExp, isError, isMap, isWeakMap, isSet, isWeakSet.\\n  _.each(['Arguments', 'Function', 'String', 'Number', 'Date', 'RegExp', 'Error', 'Symbol', 'Map', 'WeakMap', 'Set', 'WeakSet'], function(name) {\\n    _['is' + name] = function(obj) {\\n      return toString.call(obj) === '[object ' + name + ']';\\n    };\\n  });\\n\\n  // Define a fallback version of the method in browsers (ahem, IE < 9), where\\n  // there isn't any inspectable \\\"Arguments\\\" type.\\n  if (!_.isArguments(arguments)) {\\n    _.isArguments = function(obj) {\\n      return has(obj, 'callee');\\n    };\\n  }\\n\\n  // Optimize `isFunction` if appropriate. Work around some typeof bugs in old v8,\\n  // IE 11 (#1621), Safari 8 (#1929), and PhantomJS (#2236).\\n  var nodelist = root.document && root.document.childNodes;\\n  if ( true && typeof Int8Array != 'object' && typeof nodelist != 'function') {\\n    _.isFunction = function(obj) {\\n      return typeof obj == 'function' || false;\\n    };\\n  }\\n\\n  // Is a given object a finite number?\\n  _.isFinite = function(obj) {\\n    return !_.isSymbol(obj) && isFinite(obj) && !isNaN(parseFloat(obj));\\n  };\\n\\n  // Is the given value `NaN`?\\n  _.isNaN = function(obj) {\\n    return _.isNumber(obj) && isNaN(obj);\\n  };\\n\\n  // Is a given value a boolean?\\n  _.isBoolean = function(obj) {\\n    return obj === true || obj === false || toString.call(obj) === '[object Boolean]';\\n  };\\n\\n  // Is a given value equal to null?\\n  _.isNull = function(obj) {\\n    return obj === null;\\n  };\\n\\n  // Is a given variable undefined?\\n  _.isUndefined = function(obj) {\\n    return obj === void 0;\\n  };\\n\\n  // Shortcut function for checking if an object has a given property directly\\n  // on itself (in other words, not on a prototype).\\n  _.has = function(obj, path) {\\n    if (!_.isArray(path)) {\\n      return has(obj, path);\\n    }\\n    var length = path.length;\\n    for (var i = 0; i < length; i++) {\\n      var key = path[i];\\n      if (obj == null || !hasOwnProperty.call(obj, key)) {\\n        return false;\\n      }\\n      obj = obj[key];\\n    }\\n    return !!length;\\n  };\\n\\n  // Utility Functions\\n  // -----------------\\n\\n  // Run Underscore.js in *noConflict* mode, returning the `_` variable to its\\n  // previous owner. Returns a reference to the Underscore object.\\n  _.noConflict = function() {\\n    root._ = previousUnderscore;\\n    return this;\\n  };\\n\\n  // Keep the identity function around for default iteratees.\\n  _.identity = function(value) {\\n    return value;\\n  };\\n\\n  // Predicate-generating functions. Often useful outside of Underscore.\\n  _.constant = function(value) {\\n    return function() {\\n      return value;\\n    };\\n  };\\n\\n  _.noop = function(){};\\n\\n  // Creates a function that, when passed an object, will traverse that object’s\\n  // properties down the given `path`, specified as an array of keys or indexes.\\n  _.property = function(path) {\\n    if (!_.isArray(path)) {\\n      return shallowProperty(path);\\n    }\\n    return function(obj) {\\n      return deepGet(obj, path);\\n    };\\n  };\\n\\n  // Generates a function for a given object that returns a given property.\\n  _.propertyOf = function(obj) {\\n    if (obj == null) {\\n      return function(){};\\n    }\\n    return function(path) {\\n      return !_.isArray(path) ? obj[path] : deepGet(obj, path);\\n    };\\n  };\\n\\n  // Returns a predicate for checking whether an object has a given set of\\n  // `key:value` pairs.\\n  _.matcher = _.matches = function(attrs) {\\n    attrs = _.extendOwn({}, attrs);\\n    return function(obj) {\\n      return _.isMatch(obj, attrs);\\n    };\\n  };\\n\\n  // Run a function **n** times.\\n  _.times = function(n, iteratee, context) {\\n    var accum = Array(Math.max(0, n));\\n    iteratee = optimizeCb(iteratee, context, 1);\\n    for (var i = 0; i < n; i++) accum[i] = iteratee(i);\\n    return accum;\\n  };\\n\\n  // Return a random integer between min and max (inclusive).\\n  _.random = function(min, max) {\\n    if (max == null) {\\n      max = min;\\n      min = 0;\\n    }\\n    return min + Math.floor(Math.random() * (max - min + 1));\\n  };\\n\\n  // A (possibly faster) way to get the current timestamp as an integer.\\n  _.now = Date.now || function() {\\n    return new Date().getTime();\\n  };\\n\\n  // List of HTML entities for escaping.\\n  var escapeMap = {\\n    '&': '&amp;',\\n    '<': '&lt;',\\n    '>': '&gt;',\\n    '\\\"': '&quot;',\\n    \\\"'\\\": '&#x27;',\\n    '`': '&#x60;'\\n  };\\n  var unescapeMap = _.invert(escapeMap);\\n\\n  // Functions for escaping and unescaping strings to/from HTML interpolation.\\n  var createEscaper = function(map) {\\n    var escaper = function(match) {\\n      return map[match];\\n    };\\n    // Regexes for identifying a key that needs to be escaped.\\n    var source = '(?:' + _.keys(map).join('|') + ')';\\n    var testRegexp = RegExp(source);\\n    var replaceRegexp = RegExp(source, 'g');\\n    return function(string) {\\n      string = string == null ? '' : '' + string;\\n      return testRegexp.test(string) ? string.replace(replaceRegexp, escaper) : string;\\n    };\\n  };\\n  _.escape = createEscaper(escapeMap);\\n  _.unescape = createEscaper(unescapeMap);\\n\\n  // Traverses the children of `obj` along `path`. If a child is a function, it\\n  // is invoked with its parent as context. Returns the value of the final\\n  // child, or `fallback` if any child is undefined.\\n  _.result = function(obj, path, fallback) {\\n    if (!_.isArray(path)) path = [path];\\n    var length = path.length;\\n    if (!length) {\\n      return _.isFunction(fallback) ? fallback.call(obj) : fallback;\\n    }\\n    for (var i = 0; i < length; i++) {\\n      var prop = obj == null ? void 0 : obj[path[i]];\\n      if (prop === void 0) {\\n        prop = fallback;\\n        i = length; // Ensure we don't continue iterating.\\n      }\\n      obj = _.isFunction(prop) ? prop.call(obj) : prop;\\n    }\\n    return obj;\\n  };\\n\\n  // Generate a unique integer id (unique within the entire client session).\\n  // Useful for temporary DOM ids.\\n  var idCounter = 0;\\n  _.uniqueId = function(prefix) {\\n    var id = ++idCounter + '';\\n    return prefix ? prefix + id : id;\\n  };\\n\\n  // By default, Underscore uses ERB-style template delimiters, change the\\n  // following template settings to use alternative delimiters.\\n  _.templateSettings = {\\n    evaluate: /<%([\\\\s\\\\S]+?)%>/g,\\n    interpolate: /<%=([\\\\s\\\\S]+?)%>/g,\\n    escape: /<%-([\\\\s\\\\S]+?)%>/g\\n  };\\n\\n  // When customizing `templateSettings`, if you don't want to define an\\n  // interpolation, evaluation or escaping regex, we need one that is\\n  // guaranteed not to match.\\n  var noMatch = /(.)^/;\\n\\n  // Certain characters need to be escaped so that they can be put into a\\n  // string literal.\\n  var escapes = {\\n    \\\"'\\\": \\\"'\\\",\\n    '\\\\\\\\': '\\\\\\\\',\\n    '\\\\r': 'r',\\n    '\\\\n': 'n',\\n    '\\\\u2028': 'u2028',\\n    '\\\\u2029': 'u2029'\\n  };\\n\\n  var escapeRegExp = /\\\\\\\\|'|\\\\r|\\\\n|\\\\u2028|\\\\u2029/g;\\n\\n  var escapeChar = function(match) {\\n    return '\\\\\\\\' + escapes[match];\\n  };\\n\\n  // JavaScript micro-templating, similar to John Resig's implementation.\\n  // Underscore templating handles arbitrary delimiters, preserves whitespace,\\n  // and correctly escapes quotes within interpolated code.\\n  // NB: `oldSettings` only exists for backwards compatibility.\\n  _.template = function(text, settings, oldSettings) {\\n    if (!settings && oldSettings) settings = oldSettings;\\n    settings = _.defaults({}, settings, _.templateSettings);\\n\\n    // Combine delimiters into one regular expression via alternation.\\n    var matcher = RegExp([\\n      (settings.escape || noMatch).source,\\n      (settings.interpolate || noMatch).source,\\n      (settings.evaluate || noMatch).source\\n    ].join('|') + '|$', 'g');\\n\\n    // Compile the template source, escaping string literals appropriately.\\n    var index = 0;\\n    var source = \\\"__p+='\\\";\\n    text.replace(matcher, function(match, escape, interpolate, evaluate, offset) {\\n      source += text.slice(index, offset).replace(escapeRegExp, escapeChar);\\n      index = offset + match.length;\\n\\n      if (escape) {\\n        source += \\\"'+\\\\n((__t=(\\\" + escape + \\\"))==null?'':_.escape(__t))+\\\\n'\\\";\\n      } else if (interpolate) {\\n        source += \\\"'+\\\\n((__t=(\\\" + interpolate + \\\"))==null?'':__t)+\\\\n'\\\";\\n      } else if (evaluate) {\\n        source += \\\"';\\\\n\\\" + evaluate + \\\"\\\\n__p+='\\\";\\n      }\\n\\n      // Adobe VMs need the match returned to produce the correct offset.\\n      return match;\\n    });\\n    source += \\\"';\\\\n\\\";\\n\\n    // If a variable is not specified, place data values in local scope.\\n    if (!settings.variable) source = 'with(obj||{}){\\\\n' + source + '}\\\\n';\\n\\n    source = \\\"var __t,__p='',__j=Array.prototype.join,\\\" +\\n      \\\"print=function(){__p+=__j.call(arguments,'');};\\\\n\\\" +\\n      source + 'return __p;\\\\n';\\n\\n    var render;\\n    try {\\n      render = new Function(settings.variable || 'obj', '_', source);\\n    } catch (e) {\\n      e.source = source;\\n      throw e;\\n    }\\n\\n    var template = function(data) {\\n      return render.call(this, data, _);\\n    };\\n\\n    // Provide the compiled source as a convenience for precompilation.\\n    var argument = settings.variable || 'obj';\\n    template.source = 'function(' + argument + '){\\\\n' + source + '}';\\n\\n    return template;\\n  };\\n\\n  // Add a \\\"chain\\\" function. Start chaining a wrapped Underscore object.\\n  _.chain = function(obj) {\\n    var instance = _(obj);\\n    instance._chain = true;\\n    return instance;\\n  };\\n\\n  // OOP\\n  // ---------------\\n  // If Underscore is called as a function, it returns a wrapped object that\\n  // can be used OO-style. This wrapper holds altered versions of all the\\n  // underscore functions. Wrapped objects may be chained.\\n\\n  // Helper function to continue chaining intermediate results.\\n  var chainResult = function(instance, obj) {\\n    return instance._chain ? _(obj).chain() : obj;\\n  };\\n\\n  // Add your own custom functions to the Underscore object.\\n  _.mixin = function(obj) {\\n    _.each(_.functions(obj), function(name) {\\n      var func = _[name] = obj[name];\\n      _.prototype[name] = function() {\\n        var args = [this._wrapped];\\n        push.apply(args, arguments);\\n        return chainResult(this, func.apply(_, args));\\n      };\\n    });\\n    return _;\\n  };\\n\\n  // Add all of the Underscore functions to the wrapper object.\\n  _.mixin(_);\\n\\n  // Add all mutator Array functions to the wrapper.\\n  _.each(['pop', 'push', 'reverse', 'shift', 'sort', 'splice', 'unshift'], function(name) {\\n    var method = ArrayProto[name];\\n    _.prototype[name] = function() {\\n      var obj = this._wrapped;\\n      method.apply(obj, arguments);\\n      if ((name === 'shift' || name === 'splice') && obj.length === 0) delete obj[0];\\n      return chainResult(this, obj);\\n    };\\n  });\\n\\n  // Add all accessor Array functions to the wrapper.\\n  _.each(['concat', 'join', 'slice'], function(name) {\\n    var method = ArrayProto[name];\\n    _.prototype[name] = function() {\\n      return chainResult(this, method.apply(this._wrapped, arguments));\\n    };\\n  });\\n\\n  // Extracts the result from a wrapped and chained object.\\n  _.prototype.value = function() {\\n    return this._wrapped;\\n  };\\n\\n  // Provide unwrapping proxy for some methods used in engine operations\\n  // such as arithmetic and JSON stringification.\\n  _.prototype.valueOf = _.prototype.toJSON = _.prototype.value;\\n\\n  _.prototype.toString = function() {\\n    return String(this._wrapped);\\n  };\\n\\n  // AMD registration happens at the end for compatibility with AMD loaders\\n  // that may not enforce next-turn semantics on modules. Even though general\\n  // practice for AMD registration is to be anonymous, underscore registers\\n  // as a named module because, like jQuery, it is a base library that is\\n  // popular enough to be bundled in a third party lib, but not be part of\\n  // an AMD load request. Those cases could generate an error when an\\n  // anonymous define() is called outside of a loader request.\\n  if (true) {\\n    !(__WEBPACK_AMD_DEFINE_ARRAY__ = [], __WEBPACK_AMD_DEFINE_RESULT__ = (function() {\\n      return _;\\n    }).apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__),\\n\\t\\t\\t\\t__WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));\\n  }\\n}());\\n\\n/* WEBPACK VAR INJECTION */}.call(this, __webpack_require__(/*! ./../webpack/buildin/global.js */ \\\"./node_modules/webpack/buildin/global.js\\\"), __webpack_require__(/*! ./../webpack/buildin/module.js */ \\\"./node_modules/webpack/buildin/module.js\\\")(module)))\\n\\n//# sourceURL=webpack://LBHFrontend/./node_modules/underscore/underscore.js?\");\n\n/***/ }),\n\n/***/ \"./node_modules/webpack/buildin/global.js\":\n/*!***********************************!*\\\n  !*** (webpack)/buildin/global.js ***!\n  \\***********************************/\n/*! no static exports found */\n/***/ (function(module, exports) {\n\neval(\"var g;\\n\\n// This works in non-strict mode\\ng = (function() {\\n\\treturn this;\\n})();\\n\\ntry {\\n\\t// This works if eval is allowed (see CSP)\\n\\tg = g || new Function(\\\"return this\\\")();\\n} catch (e) {\\n\\t// This works if the window reference is available\\n\\tif (typeof window === \\\"object\\\") g = window;\\n}\\n\\n// g can still be undefined, but nothing to do about it...\\n// We return undefined, instead of nothing here, so it's\\n// easier to handle this case. if(!global) { ...}\\n\\nmodule.exports = g;\\n\\n\\n//# sourceURL=webpack://LBHFrontend/(webpack)/buildin/global.js?\");\n\n/***/ }),\n\n/***/ \"./node_modules/webpack/buildin/module.js\":\n/*!***********************************!*\\\n  !*** (webpack)/buildin/module.js ***!\n  \\***********************************/\n/*! no static exports found */\n/***/ (function(module, exports) {\n\neval(\"module.exports = function(module) {\\n\\tif (!module.webpackPolyfill) {\\n\\t\\tmodule.deprecate = function() {};\\n\\t\\tmodule.paths = [];\\n\\t\\t// module.parent = undefined by default\\n\\t\\tif (!module.children) module.children = [];\\n\\t\\tObject.defineProperty(module, \\\"loaded\\\", {\\n\\t\\t\\tenumerable: true,\\n\\t\\t\\tget: function() {\\n\\t\\t\\t\\treturn module.l;\\n\\t\\t\\t}\\n\\t\\t});\\n\\t\\tObject.defineProperty(module, \\\"id\\\", {\\n\\t\\t\\tenumerable: true,\\n\\t\\t\\tget: function() {\\n\\t\\t\\t\\treturn module.i;\\n\\t\\t\\t}\\n\\t\\t});\\n\\t\\tmodule.webpackPolyfill = 1;\\n\\t}\\n\\treturn module;\\n};\\n\\n\\n//# sourceURL=webpack://LBHFrontend/(webpack)/buildin/module.js?\");\n\n/***/ }),\n\n/***/ \"./src/lbh/all.js\":\n/*!************************!*\\\n  !*** ./src/lbh/all.js ***!\n  \\************************/\n/*! exports provided: initAll, Accordion, BackToTop, Button, CharacterCount, Checkboxes, CookieBanner, Details, ErrorSummary, Map, Radios, Tabs */\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\neval(\"__webpack_require__.r(__webpack_exports__);\\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \\\"initAll\\\", function() { return initAll; });\\n/* harmony import */ var govuk_frontend__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! govuk-frontend */ \\\"./node_modules/govuk-frontend/govuk/all.js\\\");\\n/* harmony import */ var govuk_frontend__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(govuk_frontend__WEBPACK_IMPORTED_MODULE_0__);\\n/* harmony import */ var _components_lbh_accordion_accordion__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./components/lbh-accordion/accordion */ \\\"./src/lbh/components/lbh-accordion/accordion.js\\\");\\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \\\"Accordion\\\", function() { return _components_lbh_accordion_accordion__WEBPACK_IMPORTED_MODULE_1__[\\\"default\\\"]; });\\n\\n/* harmony import */ var _components_lbh_back_to_top_back_to_top__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./components/lbh-back-to-top/back-to-top */ \\\"./src/lbh/components/lbh-back-to-top/back-to-top.js\\\");\\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \\\"BackToTop\\\", function() { return _components_lbh_back_to_top_back_to_top__WEBPACK_IMPORTED_MODULE_2__[\\\"default\\\"]; });\\n\\n/* harmony import */ var _components_lbh_button_button__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./components/lbh-button/button */ \\\"./src/lbh/components/lbh-button/button.js\\\");\\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \\\"Button\\\", function() { return _components_lbh_button_button__WEBPACK_IMPORTED_MODULE_3__[\\\"default\\\"]; });\\n\\n/* harmony import */ var _components_lbh_character_count_character_count__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./components/lbh-character-count/character-count */ \\\"./src/lbh/components/lbh-character-count/character-count.js\\\");\\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \\\"CharacterCount\\\", function() { return _components_lbh_character_count_character_count__WEBPACK_IMPORTED_MODULE_4__[\\\"default\\\"]; });\\n\\n/* harmony import */ var _components_lbh_checkboxes_checkboxes__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./components/lbh-checkboxes/checkboxes */ \\\"./src/lbh/components/lbh-checkboxes/checkboxes.js\\\");\\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \\\"Checkboxes\\\", function() { return _components_lbh_checkboxes_checkboxes__WEBPACK_IMPORTED_MODULE_5__[\\\"default\\\"]; });\\n\\n/* harmony import */ var _components_lbh_cookie_banner_cookie_banner__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ./components/lbh-cookie-banner/cookie-banner */ \\\"./src/lbh/components/lbh-cookie-banner/cookie-banner.js\\\");\\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \\\"CookieBanner\\\", function() { return _components_lbh_cookie_banner_cookie_banner__WEBPACK_IMPORTED_MODULE_6__[\\\"default\\\"]; });\\n\\n/* harmony import */ var _components_lbh_details_details__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ./components/lbh-details/details */ \\\"./src/lbh/components/lbh-details/details.js\\\");\\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \\\"Details\\\", function() { return _components_lbh_details_details__WEBPACK_IMPORTED_MODULE_7__[\\\"default\\\"]; });\\n\\n/* harmony import */ var _components_lbh_error_summary_error_summary__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ./components/lbh-error-summary/error-summary */ \\\"./src/lbh/components/lbh-error-summary/error-summary.js\\\");\\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \\\"ErrorSummary\\\", function() { return _components_lbh_error_summary_error_summary__WEBPACK_IMPORTED_MODULE_8__[\\\"default\\\"]; });\\n\\n/* harmony import */ var _components_lbh_contact_block_contact_block__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! ./components/lbh-contact-block/contact-block */ \\\"./src/lbh/components/lbh-contact-block/contact-block.js\\\");\\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \\\"Map\\\", function() { return _components_lbh_contact_block_contact_block__WEBPACK_IMPORTED_MODULE_9__[\\\"default\\\"]; });\\n\\n/* harmony import */ var _components_lbh_radios_radios__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! ./components/lbh-radios/radios */ \\\"./src/lbh/components/lbh-radios/radios.js\\\");\\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \\\"Radios\\\", function() { return _components_lbh_radios_radios__WEBPACK_IMPORTED_MODULE_10__[\\\"default\\\"]; });\\n\\n/* harmony import */ var _components_lbh_tabs_tabs__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(/*! ./components/lbh-tabs/tabs */ \\\"./src/lbh/components/lbh-tabs/tabs.js\\\");\\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \\\"Tabs\\\", function() { return _components_lbh_tabs_tabs__WEBPACK_IMPORTED_MODULE_11__[\\\"default\\\"]; });\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\nfunction nodeListForEach (nodes, callback) {\\n  if (window.NodeList.prototype.forEach) {\\n    return nodes.forEach(callback)\\n  }\\n  for (var i = 0; i < nodes.length; i++) {\\n    callback.call(window, nodes[i], i, nodes)\\n  }\\n}\\n\\nfunction initAll (options) {\\n  // Set the options to an empty object by default if no options are passed.\\n  options = typeof options !== 'undefined' ? options : {}\\n\\n  govuk_frontend__WEBPACK_IMPORTED_MODULE_0___default.a.initAll()\\n\\n  // Allow the user to initialise GOV.UK Frontend in only certain sections of the page\\n  // Defaults to the entire document if nothing is set.\\n  var scope = typeof options.scope !== 'undefined' ? options.scope : document\\n\\n  var $cookieBanner = scope.querySelector('[data-module=\\\"lbh-cookie-banner\\\"]')\\n  if ($cookieBanner) {\\n    new _components_lbh_cookie_banner_cookie_banner__WEBPACK_IMPORTED_MODULE_6__[\\\"default\\\"]($cookieBanner).init()\\n  }\\n\\n  var $maps = scope.querySelectorAll('[data-module=\\\"lbh-map\\\"]')\\n  nodeListForEach($maps, function ($map) {\\n    new _components_lbh_contact_block_contact_block__WEBPACK_IMPORTED_MODULE_9__[\\\"default\\\"]($map).init()\\n  })\\n\\n  var $backToTop = scope.querySelector('[data-module=\\\"lbh-back-to-top\\\"]')\\n  if ($backToTop) {\\n    new _components_lbh_back_to_top_back_to_top__WEBPACK_IMPORTED_MODULE_2__[\\\"default\\\"]($backToTop).init()\\n  }\\n}\\n\\n\\n\\n\\n//# sourceURL=webpack://LBHFrontend/./src/lbh/all.js?\");\n\n/***/ }),\n\n/***/ \"./src/lbh/components/lbh-accordion/accordion.js\":\n/*!*******************************************************!*\\\n  !*** ./src/lbh/components/lbh-accordion/accordion.js ***!\n  \\*******************************************************/\n/*! exports provided: default */\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\neval(\"__webpack_require__.r(__webpack_exports__);\\n/* harmony import */ var govuk_frontend_govuk_components_accordion_accordion__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! govuk-frontend/govuk/components/accordion/accordion */ \\\"./node_modules/govuk-frontend/govuk/components/accordion/accordion.js\\\");\\n/* harmony import */ var govuk_frontend_govuk_components_accordion_accordion__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(govuk_frontend_govuk_components_accordion_accordion__WEBPACK_IMPORTED_MODULE_0__);\\n\\n\\n/* harmony default export */ __webpack_exports__[\\\"default\\\"] = (govuk_frontend_govuk_components_accordion_accordion__WEBPACK_IMPORTED_MODULE_0___default.a);\\n\\n\\n//# sourceURL=webpack://LBHFrontend/./src/lbh/components/lbh-accordion/accordion.js?\");\n\n/***/ }),\n\n/***/ \"./src/lbh/components/lbh-back-to-top/back-to-top.js\":\n/*!***********************************************************!*\\\n  !*** ./src/lbh/components/lbh-back-to-top/back-to-top.js ***!\n  \\***********************************************************/\n/*! exports provided: default */\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\neval(\"__webpack_require__.r(__webpack_exports__);\\n/* harmony import */ var underscore__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! underscore */ \\\"./node_modules/underscore/underscore.js\\\");\\n/* harmony import */ var underscore__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(underscore__WEBPACK_IMPORTED_MODULE_0__);\\n\\n\\nfunction BackToTop ($module) {\\n  this.$module = $module\\n}\\n\\nBackToTop.prototype.checkScrollPosition = function (element) {\\n  var windowHeight = window.innerHeight\\n  var showHeight = windowHeight > 480 ? 480 : windowHeight\\n  var scrollPos = window.scrollY\\n  if (scrollPos > showHeight) {\\n    element.classList.add('lbh-back-to-top--visible')\\n  } else {\\n    element.classList.remove('lbh-back-to-top--visible')\\n  }\\n}\\n\\nBackToTop.prototype.init = function () {\\n  // Check for module\\n  if (!this.$module) {\\n    return\\n  }\\n\\n  var throttled = Object(underscore__WEBPACK_IMPORTED_MODULE_0__[\\\"throttle\\\"])(this.checkScrollPosition, 200)\\n  var backToTop = this.$module\\n  window.addEventListener('scroll', function () {\\n    throttled(backToTop)\\n  })\\n}\\n\\n/* harmony default export */ __webpack_exports__[\\\"default\\\"] = (BackToTop);\\n\\n\\n//# sourceURL=webpack://LBHFrontend/./src/lbh/components/lbh-back-to-top/back-to-top.js?\");\n\n/***/ }),\n\n/***/ \"./src/lbh/components/lbh-button/button.js\":\n/*!*************************************************!*\\\n  !*** ./src/lbh/components/lbh-button/button.js ***!\n  \\*************************************************/\n/*! exports provided: default */\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\neval(\"__webpack_require__.r(__webpack_exports__);\\n/* harmony import */ var govuk_frontend_govuk_components_button_button__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! govuk-frontend/govuk/components/button/button */ \\\"./node_modules/govuk-frontend/govuk/components/button/button.js\\\");\\n/* harmony import */ var govuk_frontend_govuk_components_button_button__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(govuk_frontend_govuk_components_button_button__WEBPACK_IMPORTED_MODULE_0__);\\n\\n\\n/* harmony default export */ __webpack_exports__[\\\"default\\\"] = (govuk_frontend_govuk_components_button_button__WEBPACK_IMPORTED_MODULE_0___default.a);\\n\\n\\n//# sourceURL=webpack://LBHFrontend/./src/lbh/components/lbh-button/button.js?\");\n\n/***/ }),\n\n/***/ \"./src/lbh/components/lbh-character-count/character-count.js\":\n/*!*******************************************************************!*\\\n  !*** ./src/lbh/components/lbh-character-count/character-count.js ***!\n  \\*******************************************************************/\n/*! exports provided: default */\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\neval(\"__webpack_require__.r(__webpack_exports__);\\n/* harmony import */ var govuk_frontend_govuk_components_character_count_character_count__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! govuk-frontend/govuk/components/character-count/character-count */ \\\"./node_modules/govuk-frontend/govuk/components/character-count/character-count.js\\\");\\n/* harmony import */ var govuk_frontend_govuk_components_character_count_character_count__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(govuk_frontend_govuk_components_character_count_character_count__WEBPACK_IMPORTED_MODULE_0__);\\n\\n\\n/* harmony default export */ __webpack_exports__[\\\"default\\\"] = (govuk_frontend_govuk_components_character_count_character_count__WEBPACK_IMPORTED_MODULE_0___default.a);\\n\\n\\n//# sourceURL=webpack://LBHFrontend/./src/lbh/components/lbh-character-count/character-count.js?\");\n\n/***/ }),\n\n/***/ \"./src/lbh/components/lbh-checkboxes/checkboxes.js\":\n/*!*********************************************************!*\\\n  !*** ./src/lbh/components/lbh-checkboxes/checkboxes.js ***!\n  \\*********************************************************/\n/*! exports provided: default */\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\neval(\"__webpack_require__.r(__webpack_exports__);\\n/* harmony import */ var govuk_frontend_govuk_components_checkboxes_checkboxes__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! govuk-frontend/govuk/components/checkboxes/checkboxes */ \\\"./node_modules/govuk-frontend/govuk/components/checkboxes/checkboxes.js\\\");\\n/* harmony import */ var govuk_frontend_govuk_components_checkboxes_checkboxes__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(govuk_frontend_govuk_components_checkboxes_checkboxes__WEBPACK_IMPORTED_MODULE_0__);\\n\\n\\n/* harmony default export */ __webpack_exports__[\\\"default\\\"] = (govuk_frontend_govuk_components_checkboxes_checkboxes__WEBPACK_IMPORTED_MODULE_0___default.a);\\n\\n\\n//# sourceURL=webpack://LBHFrontend/./src/lbh/components/lbh-checkboxes/checkboxes.js?\");\n\n/***/ }),\n\n/***/ \"./src/lbh/components/lbh-contact-block/contact-block.js\":\n/*!***************************************************************!*\\\n  !*** ./src/lbh/components/lbh-contact-block/contact-block.js ***!\n  \\***************************************************************/\n/*! exports provided: default */\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\neval(\"__webpack_require__.r(__webpack_exports__);\\n/* global L */\\nvar L = L || {};\\nif (L !== {}) {\\n  var map = L.map;\\n  var control = L.control;\\n  var tileLayer = L.tileLayer;\\n  var icon = L.icon;\\n  var marker = L.marker;\\n}\\n\\nfunction Map($module) {\\n  this.$module = $module;\\n  this.moduleId = this.$module.getAttribute(\\\"id\\\");\\n  this.accessToken = this.$module.getAttribute(\\\"data-access-token\\\");\\n  this.map = null;\\n  this.markerLat = this.$module.getAttribute(\\\"data-marker-lat\\\") || null;\\n  this.markerLng = this.$module.getAttribute(\\\"data-marker-lng\\\") || null;\\n  this.centreLat =\\n    this.$module.getAttribute(\\\"data-centre-lat\\\") || this.markerLat || 51.549;\\n  this.centreLng =\\n    this.$module.getAttribute(\\\"data-centre-lng\\\") || this.markerLng || -0.077928;\\n  this.maxZoom = this.$module.getAttribute(\\\"data-max-zoom\\\") || 19;\\n  this.minZoom = this.$module.getAttribute(\\\"data-min-zoom\\\") || 12;\\n  this.initialZoom = this.$module.getAttribute(\\\"data-initial-zoom\\\") || 15;\\n  this.showZoomControl =\\n    this.$module.getAttribute(\\\"data-show-zoom-control\\\") || true;\\n  this.minLat = this.$module.getAttribute(\\\"data-min-lat\\\") || 51.491112;\\n  this.minLng = this.$module.getAttribute(\\\"data-min-lng\\\") || -0.275464;\\n  this.maxLat = this.$module.getAttribute(\\\"data-max-lat\\\") || 51.607351;\\n  this.maxLng = this.$module.getAttribute(\\\"data-max-lng\\\") || 0.096129;\\n}\\n\\nMap.prototype.initLeaflet = function() {\\n  this.map = map(this.moduleId, {\\n    zoomControl: false,\\n    maxZoom: this.maxZoom,\\n    minZoom: this.minZoom,\\n    center: [this.centreLat, this.centreLng],\\n    zoom: this.initialZoom\\n  });\\n  if (this.showZoomControl) {\\n    control.zoom({ position: \\\"topright\\\" }).addTo(this.map);\\n  }\\n};\\n\\nMap.prototype.setBounds = function() {\\n  // Limit the view to the extend of the map\\n  this.map.setMaxBounds([\\n    [this.minLat, this.minLng],\\n    [this.maxLat, this.maxLng]\\n  ]);\\n};\\n\\nMap.prototype.initMapboxTiles = function() {\\n  var osmStreet = tileLayer(\\n    \\\"https://api.tiles.mapbox.com/v4/{id}/{z}/{x}/{y}.png?access_token={accessToken}\\\",\\n    {\\n      fadeAnimation: false,\\n      opacity: 1,\\n      attribution:\\n        'Map data &copy; <a href=\\\"https://openstreetmap.org\\\">OpenStreetMap</a> contributors, <a href=\\\"https://creativecommons.org/licenses/by-sa/2.0/\\\">CC-BY-SA</a>, Imagery © <a href=\\\"https://mapbox.com\\\">Mapbox</a>',\\n      maxZoom: this.maxZoom,\\n      id: \\\"mapbox.streets\\\",\\n      accessToken: this.accessToken\\n    }\\n  );\\n  this.map.addLayer(osmStreet);\\n};\\n\\nMap.prototype.addMarker = function() {\\n  if (this.markerLat !== null && this.markerLng !== null) {\\n    var mapIcon = icon({\\n      iconUrl: \\\"../../../assets/images/contact/map-marker.svg\\\",\\n      iconSize: [48, 48],\\n      iconAnchor: [24, 48]\\n    });\\n    marker([this.markerLat, this.markerLng], { icon: mapIcon }).addTo(this.map);\\n  }\\n};\\n\\nMap.prototype.init = function() {\\n  // Check for module\\n  if (!this.$module || L !== {}) {\\n    return;\\n  }\\n\\n  this.initLeaflet();\\n  this.setBounds();\\n  this.initMapboxTiles();\\n  this.addMarker();\\n};\\n\\n/* harmony default export */ __webpack_exports__[\\\"default\\\"] = (Map);\\n\\n\\n//# sourceURL=webpack://LBHFrontend/./src/lbh/components/lbh-contact-block/contact-block.js?\");\n\n/***/ }),\n\n/***/ \"./src/lbh/components/lbh-cookie-banner/cookie-banner.js\":\n/*!***************************************************************!*\\\n  !*** ./src/lbh/components/lbh-cookie-banner/cookie-banner.js ***!\n  \\***************************************************************/\n/*! exports provided: default */\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\neval(\"__webpack_require__.r(__webpack_exports__);\\nvar COOKIE_NAME = 'seen_cookie_message'\\n\\n// Set to false to allow testing so that the cookie is never set\\nvar DROP_COOKIE = window.dropCookie === undefined ? true : window.dropCookie\\n\\nfunction CookieBanner ($module) {\\n  this.$module = $module\\n  this.$button = this.$module.querySelector('[data-behavior=\\\"lbh-cookie-close\\\"]')\\n}\\n\\nCookieBanner.prototype.checkCookies = function () {\\n  var nameEQ = COOKIE_NAME + '='\\n  var ca = document.cookie.split(';')\\n  for (var i = 0; i < ca.length; i++) {\\n    var c = ca[i]\\n    while (c.charAt(0) === ' ') {\\n      c = c.substring(1, c.length)\\n    }\\n    if (c.indexOf(nameEQ) === 0) {\\n      return c.substring(nameEQ.length, c.length)\\n    }\\n  }\\n  return null\\n}\\n\\nCookieBanner.prototype.showCookieBanner = function () {\\n  this.$module.style.display = 'block'\\n  this.bindAcceptButton()\\n}\\n\\nCookieBanner.prototype.bindAcceptButton = function () {\\n  var _module = this.$module\\n  this.$button.addEventListener('click', function () {\\n    var date = new Date()\\n    date.setTime(date.getTime() + (365 * 24 * 60 * 60 * 1000))\\n    var expires = '; expires=' + date.toGMTString()\\n    if (DROP_COOKIE) {\\n      document.cookie = COOKIE_NAME + '=true' + expires + '; path=/'\\n    }\\n    _module.style.display = 'none'\\n  })\\n}\\n\\nCookieBanner.prototype.init = function () {\\n  if (!this.$module) {\\n    return false\\n  }\\n\\n  var seenCookie = this.checkCookies()\\n  if (seenCookie === 'true') {\\n    return false\\n  } else {\\n    this.showCookieBanner()\\n  }\\n}\\n\\n/* harmony default export */ __webpack_exports__[\\\"default\\\"] = (CookieBanner);\\n\\n\\n//# sourceURL=webpack://LBHFrontend/./src/lbh/components/lbh-cookie-banner/cookie-banner.js?\");\n\n/***/ }),\n\n/***/ \"./src/lbh/components/lbh-details/details.js\":\n/*!***************************************************!*\\\n  !*** ./src/lbh/components/lbh-details/details.js ***!\n  \\***************************************************/\n/*! exports provided: default */\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\neval(\"__webpack_require__.r(__webpack_exports__);\\n/* harmony import */ var govuk_frontend_govuk_components_details_details__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! govuk-frontend/govuk/components/details/details */ \\\"./node_modules/govuk-frontend/govuk/components/details/details.js\\\");\\n/* harmony import */ var govuk_frontend_govuk_components_details_details__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(govuk_frontend_govuk_components_details_details__WEBPACK_IMPORTED_MODULE_0__);\\n\\n\\n/* harmony default export */ __webpack_exports__[\\\"default\\\"] = (govuk_frontend_govuk_components_details_details__WEBPACK_IMPORTED_MODULE_0___default.a);\\n\\n\\n//# sourceURL=webpack://LBHFrontend/./src/lbh/components/lbh-details/details.js?\");\n\n/***/ }),\n\n/***/ \"./src/lbh/components/lbh-error-summary/error-summary.js\":\n/*!***************************************************************!*\\\n  !*** ./src/lbh/components/lbh-error-summary/error-summary.js ***!\n  \\***************************************************************/\n/*! exports provided: default */\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\neval(\"__webpack_require__.r(__webpack_exports__);\\n/* harmony import */ var govuk_frontend_govuk_components_error_summary_error_summary__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! govuk-frontend/govuk/components/error-summary/error-summary */ \\\"./node_modules/govuk-frontend/govuk/components/error-summary/error-summary.js\\\");\\n/* harmony import */ var govuk_frontend_govuk_components_error_summary_error_summary__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(govuk_frontend_govuk_components_error_summary_error_summary__WEBPACK_IMPORTED_MODULE_0__);\\n\\n\\n/* harmony default export */ __webpack_exports__[\\\"default\\\"] = (govuk_frontend_govuk_components_error_summary_error_summary__WEBPACK_IMPORTED_MODULE_0___default.a);\\n\\n\\n//# sourceURL=webpack://LBHFrontend/./src/lbh/components/lbh-error-summary/error-summary.js?\");\n\n/***/ }),\n\n/***/ \"./src/lbh/components/lbh-radios/radios.js\":\n/*!*************************************************!*\\\n  !*** ./src/lbh/components/lbh-radios/radios.js ***!\n  \\*************************************************/\n/*! exports provided: default */\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\neval(\"__webpack_require__.r(__webpack_exports__);\\n/* harmony import */ var govuk_frontend_govuk_components_radios_radios__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! govuk-frontend/govuk/components/radios/radios */ \\\"./node_modules/govuk-frontend/govuk/components/radios/radios.js\\\");\\n/* harmony import */ var govuk_frontend_govuk_components_radios_radios__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(govuk_frontend_govuk_components_radios_radios__WEBPACK_IMPORTED_MODULE_0__);\\n\\n\\n/* harmony default export */ __webpack_exports__[\\\"default\\\"] = (govuk_frontend_govuk_components_radios_radios__WEBPACK_IMPORTED_MODULE_0___default.a);\\n\\n\\n//# sourceURL=webpack://LBHFrontend/./src/lbh/components/lbh-radios/radios.js?\");\n\n/***/ }),\n\n/***/ \"./src/lbh/components/lbh-tabs/tabs.js\":\n/*!*********************************************!*\\\n  !*** ./src/lbh/components/lbh-tabs/tabs.js ***!\n  \\*********************************************/\n/*! exports provided: default */\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\neval(\"__webpack_require__.r(__webpack_exports__);\\n/* harmony import */ var govuk_frontend_govuk_components_tabs_tabs__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! govuk-frontend/govuk/components/tabs/tabs */ \\\"./node_modules/govuk-frontend/govuk/components/tabs/tabs.js\\\");\\n/* harmony import */ var govuk_frontend_govuk_components_tabs_tabs__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(govuk_frontend_govuk_components_tabs_tabs__WEBPACK_IMPORTED_MODULE_0__);\\n\\n\\n/* harmony default export */ __webpack_exports__[\\\"default\\\"] = (govuk_frontend_govuk_components_tabs_tabs__WEBPACK_IMPORTED_MODULE_0___default.a);\\n\\n\\n//# sourceURL=webpack://LBHFrontend/./src/lbh/components/lbh-tabs/tabs.js?\");\n\n/***/ }),\n\n/***/ 0:\n/*!******************************!*\\\n  !*** multi ./src/lbh/all.js ***!\n  \\******************************/\n/*! no static exports found */\n/***/ (function(module, exports, __webpack_require__) {\n\neval(\"module.exports = __webpack_require__(/*! /Users/emmalewis/Sites/hackney/LBH-frontend/src/lbh/all.js */\\\"./src/lbh/all.js\\\");\\n\\n\\n//# sourceURL=webpack://LBHFrontend/multi_./src/lbh/all.js?\");\n\n/***/ })\n\n/******/ });\n});\n\n\n//# sourceURL=webpack://Boilerplate/./node_modules/lbh-frontend/lbh/all.js?");

/***/ }),

/***/ 0:
/*!*************************************!*\
  !*** multi ./app/assets/js/main.js ***!
  \*************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

eval("module.exports = __webpack_require__(/*! /home/laptop/futuregov/hackney/coronavirus-get-support-admin/app/assets/js/main.js */\"./app/assets/js/main.js\");\n\n\n//# sourceURL=webpack://Boilerplate/multi_./app/assets/js/main.js?");

/***/ })

/******/ });
});
